{"version":3,"file":"parcoords.esm.js","sources":["../src/util/renderQueue.js","../src/util/width.js","../src/brush/1d/brushExtents.js","../src/brush/1d/brushReset.js","../src/brush/1d/selected.js","../src/brush/1d/brushFor.js","../src/brush/1d/install.js","../src/brush/1d/uninstall.js","../src/brush/1d/index.js","../src/brush/1d-multi/drawBrushes.js","../src/brush/1d-multi/selected.js","../src/brush/1d-multi/newBrush.js","../src/brush/1d-multi/brushExtents.js","../src/brush/1d-multi/brushReset.js","../src/brush/1d-multi/brushFor.js","../src/brush/1d-multi/install.js","../src/brush/1d-multi/uninstall.js","../src/brush/1d-multi/index.js","../src/brush/strums/uninstall.js","../src/brush/strums/selected.js","../src/brush/strums/removeStrum.js","../src/brush/strums/onDragEnd.js","../src/brush/strums/onDrag.js","../src/util/height.js","../src/brush/dimensionsForPoint.js","../src/brush/strums/onDragStart.js","../src/brush/strums/brushReset.js","../src/brush/consecutive.js","../src/brush/strums/install.js","../src/brush/strums/index.js","../src/brush/angular/uninstall.js","../src/brush/angular/util/hypothenuse.js","../src/brush/angular/selected.js","../src/brush/angular/removeStrum.js","../src/brush/angular/onDragEnd.js","../src/brush/angular/onDrag.js","../src/brush/angular/onDragStart.js","../src/brush/angular/brushReset.js","../src/brush/angular/install.js","../src/brush/angular/index.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/util/functor.js","../src/api/renderMarked.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/mark.js","../src/api/unmark.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/renderTiled.js","../src/api/renderTiledBrushed.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/api/getOrderedDimensionKeys.js","../src/api/interactive.js","../src/api/shadows.js","../src/api/init.js","../src/api/flip.js","../src/api/detectDimensions.js","../src/api/scale.js","../src/api/filter.js","../src/state/defaultConfig.js","../src/state/index.js","../src/util/computeClusterCentroids.js","../src/state/sideEffects.js","../src/util/getset.js","../src/bindEvents.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\r\n\r\nconst renderQueue = function(func) {\r\n  let _queue = [], // data to be rendered\r\n    _rate = 1000, // number of calls per frame\r\n    _invalidate = function() {}, // invalidate last render queue\r\n    _clear = function() {}; // clearing function\r\n\r\n  let rq = function(data) {\r\n    if (data) rq.data(data);\r\n    _invalidate();\r\n    _clear();\r\n    rq.render();\r\n  };\r\n\r\n  rq.render = function() {\r\n    let valid = true;\r\n    _invalidate = rq.invalidate = function() {\r\n      valid = false;\r\n    };\r\n\r\n    function doFrame() {\r\n      if (!valid) return true;\r\n      let chunk = _queue.splice(0, _rate);\r\n      chunk.map(func);\r\n      requestAnimationFrame(doFrame);\r\n    }\r\n\r\n    doFrame();\r\n  };\r\n\r\n  rq.data = function(data) {\r\n    _invalidate();\r\n    _queue = data.slice(0); // creates a copy of the data\r\n    return rq;\r\n  };\r\n\r\n  rq.add = function(data) {\r\n    _queue = _queue.concat(data);\r\n  };\r\n\r\n  rq.rate = function(value) {\r\n    if (!arguments.length) return _rate;\r\n    _rate = value;\r\n    return rq;\r\n  };\r\n\r\n  rq.remaining = function() {\r\n    return _queue.length;\r\n  };\r\n\r\n  // clear the canvas\r\n  rq.clear = function(func) {\r\n    if (!arguments.length) {\r\n      _clear();\r\n      return rq;\r\n    }\r\n    _clear = func;\r\n    return rq;\r\n  };\r\n\r\n  rq.invalidate = _invalidate;\r\n\r\n  return rq;\r\n};\r\n\r\nexport default renderQueue;\r\n","const w = config => config.width - config.margin.right - config.margin.left;\r\n\r\nexport default w;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\n\r\nconst brushExtents = (state, config, pc) => extents => {\r\n  const { brushes, brushNodes } = state;\r\n\r\n  if (typeof extents === 'undefined') {\r\n    return Object.keys(config.dimensions).reduce((acc, cur) => {\r\n      const brush = brushes[cur];\r\n      //todo: brush check\r\n      if (brush !== undefined && brushSelection(brushNodes[cur]) !== null) {\r\n        acc[cur] = brush.extent();\r\n      }\r\n\r\n      return acc;\r\n    }, {});\r\n  } else {\r\n    //first get all the brush selections\r\n    const brushSelections = {};\r\n    pc.g()\r\n      .selectAll('.brush')\r\n      .each(function(d) {\r\n        brushSelections[d] = select(this);\r\n      });\r\n\r\n    // loop over each dimension and update appropriately (if it was passed in through extents)\r\n    Object.keys(config.dimensions).forEach(d => {\r\n      if (extents[d] === undefined) {\r\n        return;\r\n      }\r\n\r\n      const brush = brushes[d];\r\n      if (brush !== undefined) {\r\n        const dim = config.dimensions[d];\r\n        const yExtent = extents[d].map(dim.yscale);\r\n\r\n        //update the extent\r\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\r\n        brush.extent([[-15, yExtent[1]], [15, yExtent[0]]]);\r\n\r\n        //redraw the brush\r\n        //https://github.com/d3/d3-brush#brush_move\r\n        // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\r\n        brushSelections[d].call(brush).call(brush.move, yExtent.reverse());\r\n\r\n        //fire some events\r\n        // brush.event(brushSelections[d]);\r\n      }\r\n    });\r\n\r\n    //redraw the chart\r\n    pc.renderBrushed();\r\n\r\n    return pc;\r\n  }\r\n};\r\n\r\nexport default brushExtents;\r\n","import { select } from 'd3-selection';\r\n\r\nconst brushReset = (state, config, pc) => dimension => {\r\n  const { brushes } = state;\r\n\r\n  if (dimension === undefined) {\r\n    config.brushed = false;\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      pc.g()\r\n        .selectAll('.brush')\r\n        .each(function(d) {\r\n          select(this).call(brushes[d].move, null);\r\n        });\r\n      pc.renderBrushed();\r\n    }\r\n  } else {\r\n    config.brushed = false;\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      pc.g()\r\n        .selectAll('.brush')\r\n        .each(function(d) {\r\n          if (d !== dimension) return;\r\n          select(this).call(brushes[d].move, null);\r\n          if (typeof brushes[d].type === 'function') {\r\n            brushes[d].event(select(this));\r\n          }\r\n        });\r\n      pc.renderBrushed();\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default brushReset;\r\n","import { brushSelection } from 'd3-brush';\r\nimport { matchArray } from 'searchjs';\r\n\r\n//https://github.com/d3/d3-brush/issues/10\r\n\r\n// data within extents\r\nconst selected = (state, config, brushGroup) => () => {\r\n  const { brushNodes } = state;\r\n  const is_brushed = p =>\r\n    brushNodes[p] && brushSelection(brushNodes[p]) !== null;\r\n\r\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\r\n  const extents = actives.map(p => {\r\n    const _brushRange = brushSelection(brushNodes[p]);\r\n\r\n    if (typeof config.dimensions[p].yscale.invert === 'function') {\r\n      return [\r\n        config.dimensions[p].yscale.invert(_brushRange[1]),\r\n        config.dimensions[p].yscale.invert(_brushRange[0]),\r\n      ];\r\n    } else {\r\n      return _brushRange;\r\n    }\r\n  });\r\n  // We don't want to return the full data set when there are no axes brushed.\r\n  // Actually, when there are no axes brushed, by definition, no items are\r\n  // selected. So, let's avoid the filtering and just return false.\r\n  //if (actives.length === 0) return false;\r\n\r\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\r\n  if (actives.length === 0) {\r\n    return matchArray(config.data, config.filters);\r\n  }\r\n\r\n  // test if within range\r\n  const within = {\r\n    date: (d, p, dimension) => {\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        return (\r\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n        );\r\n      } else {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      }\r\n    },\r\n    number: (d, p, dimension) => {\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        return (\r\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n        );\r\n      } else {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      }\r\n    },\r\n    string: (d, p, dimension) => {\r\n      return (\r\n        extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n        config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n      );\r\n    },\r\n  };\r\n\r\n  return matchArray(config.data, config.filters).filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return actives.every(function(p, dimension) {\r\n          return within[config.dimensions[p].type](d, p, dimension);\r\n        });\r\n      case 'OR':\r\n        return actives.some(function(p, dimension) {\r\n          return within[config.dimensions[p].type](d, p, dimension);\r\n        });\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","import { brushY, brushSelection } from 'd3-brush';\r\nimport { event } from 'd3-selection';\r\n\r\nimport selected from './selected';\r\n\r\nconst brushUpdated = (config, pc, events, args) => newSelection => {\r\n  config.brushed = newSelection;\r\n  events.call('brush', pc, config.brushed, args);\r\n  pc.renderBrushed();\r\n};\r\n\r\nconst brushFor = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const brushRangeMax =\r\n    config.dimensions[axis].type === 'string'\r\n      ? config.dimensions[axis].yscale.range()[\r\n          config.dimensions[axis].yscale.range().length - 1\r\n        ]\r\n      : config.dimensions[axis].yscale.range()[0];\r\n\r\n  const _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\r\n\r\n  const invertCategorical = (selection, yscale) => {\r\n    if (selection.length === 0) {\r\n      return [];\r\n    }\r\n    const domain = yscale.domain();\r\n    const range = yscale.range();\r\n    const found = [];\r\n    range.forEach((d, i) => {\r\n      if (d >= selection[0] && d <= selection[1]) {\r\n        found.push(domain[i]);\r\n      }\r\n    });\r\n    return found;\r\n  };\r\n\r\n  const convertBrushArguments = args => {\r\n    const args_array = Array.prototype.slice.call(args);\r\n    const axis = args_array[0];\r\n    const selection_raw = brushSelection(args_array[2][0]) || [];\r\n    // ordinal scales do not have invert\r\n    let selection_scaled = [];\r\n    const yscale = config.dimensions[axis].yscale;\r\n    if (typeof yscale.invert === 'undefined') {\r\n      selection_scaled = invertCategorical(selection_raw, yscale);\r\n    } else {\r\n      selection_scaled = selection_raw.map(d =>\r\n        config.dimensions[axis].yscale.invert(d)\r\n      );\r\n    }\r\n\r\n    return {\r\n      axis: args_array[0],\r\n      node: args_array[2][0],\r\n      selection: {\r\n        raw: selection_raw,\r\n        scaled: selection_scaled,\r\n      },\r\n    };\r\n  };\r\n\r\n  _brush\r\n    .on('start', function() {\r\n      if (event.sourceEvent !== null) {\r\n        events.call(\r\n          'brushstart',\r\n          pc,\r\n          config.brushed,\r\n          convertBrushArguments(arguments)\r\n        );\r\n        if (typeof event.sourceEvent.stopPropagation === 'function') {\r\n          event.sourceEvent.stopPropagation();\r\n        }\r\n      }\r\n    })\r\n    .on('brush', function() {\r\n      brushUpdated(\r\n        config,\r\n        pc,\r\n        events,\r\n        convertBrushArguments(arguments)\r\n      )(selected(state, config, brushGroup)());\r\n    })\r\n    .on('end', function() {\r\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\r\n      events.call(\r\n        'brushend',\r\n        pc,\r\n        config.brushed,\r\n        convertBrushArguments(arguments)\r\n      );\r\n    });\r\n\r\n  state.brushes[axis] = _brush;\r\n  state.brushNodes[axis] = _selector.node();\r\n\r\n  return _brush;\r\n};\r\n\r\nexport default brushFor;\r\n","import { select } from 'd3-selection';\r\nimport brushExtents from './brushExtents';\r\nimport brushReset from './brushReset';\r\nimport brushFor from './brushFor';\r\n\r\nconst install = (state, config, pc, events, brushGroup) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  // Add and store a brush for each axis.\r\n  const brush = pc\r\n    .g()\r\n    .append('svg:g')\r\n    .attr('class', 'brush')\r\n    .each(function(d) {\r\n      select(this).call(\r\n        brushFor(state, config, pc, events, brushGroup)(d, select(this))\r\n      );\r\n    });\r\n  brush\r\n    .selectAll('rect')\r\n    .style('visibility', null)\r\n    .attr('x', -15)\r\n    .attr('width', 30);\r\n\r\n  brush.selectAll('rect.background').style('fill', 'transparent');\r\n\r\n  brush\r\n    .selectAll('rect.extent')\r\n    .style('fill', 'rgba(255,255,255,0.25)')\r\n    .style('stroke', 'rgba(0,0,0,0.6)');\r\n\r\n  brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\r\n\r\n  pc.brushExtents = brushExtents(state, config, pc);\r\n  pc.brushReset = brushReset(state, config, pc);\r\n  return pc;\r\n};\r\n\r\nexport default install;\r\n","const uninstall = (state, pc) => () => {\r\n  if (pc.g() !== undefined && pc.g() !== null)\r\n    pc.g()\r\n      .selectAll('.brush')\r\n      .remove();\r\n\r\n  state.brushes = {};\r\n  delete pc.brushExtents;\r\n  delete pc.brushReset;\r\n};\r\n\r\nexport default uninstall;\r\n","import brushExtents from './brushExtents';\r\nimport install from './install';\r\nimport selected from './selected';\r\nimport uninstall from './uninstall';\r\n\r\nconst install1DAxes = (brushGroup, config, pc, events) => {\r\n  const state = {\r\n    brushes: {},\r\n    brushNodes: {},\r\n  };\r\n\r\n  brushGroup.modes['1D-axes'] = {\r\n    install: install(state, config, pc, events, brushGroup),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(state, config, brushGroup),\r\n    brushState: brushExtents(state, config, pc),\r\n  };\r\n};\r\n\r\nexport default install1DAxes;\r\n","import { select } from 'd3-selection';\r\n\r\nconst drawBrushes = (brushes, config, pc, axis, selector) => {\r\n  const brushSelection = selector.selectAll('.brush').data(brushes, d => d.id);\r\n\r\n  brushSelection\r\n    .enter()\r\n    .insert('g', '.brush')\r\n    .attr('class', 'brush')\r\n    .attr('dimension', axis)\r\n    .attr(\r\n      'id',\r\n      b => 'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + b.id\r\n    )\r\n    .each(function(brushObject) {\r\n      brushObject.brush(select(this));\r\n    });\r\n\r\n  brushSelection.each(function(brushObject) {\r\n    select(this)\r\n      .attr('class', 'brush')\r\n      .selectAll('.overlay')\r\n      .style('pointer-events', function() {\r\n        const brush = brushObject.brush;\r\n        if (brushObject.id === brushes.length - 1 && brush !== undefined) {\r\n          return 'all';\r\n        } else {\r\n          return 'none';\r\n        }\r\n      });\r\n  });\r\n\r\n  brushSelection.exit().remove();\r\n};\r\n\r\nexport default drawBrushes;\r\n","import { brushSelection } from 'd3-brush';\r\n\r\n// data within extents\r\nconst selected = (state, config, pc, events, brushGroup) => {\r\n  const { brushes } = state;\r\n\r\n  const is_brushed = (p, pos) => {\r\n    const axisBrushes = brushes[p];\r\n\r\n    for (let i = 0; i < axisBrushes.length; i++) {\r\n      const brush = document.getElementById('brush-' + pos + '-' + i);\r\n\r\n      if (brushSelection(brush) !== null) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\r\n  const extents = actives.map(p => {\r\n    const axisBrushes = brushes[p];\r\n\r\n    return axisBrushes\r\n      .map((d, i) =>\r\n        brushSelection(\r\n          document.getElementById(\r\n            'brush-' + Object.keys(config.dimensions).indexOf(p) + '-' + i\r\n          )\r\n        )\r\n      )\r\n      .map((d, i) => {\r\n        if (d === null || d === undefined) {\r\n          return null;\r\n        } else if (typeof config.dimensions[p].yscale.invert === 'function') {\r\n          return [\r\n            config.dimensions[p].yscale.invert(d[1]),\r\n            config.dimensions[p].yscale.invert(d[0]),\r\n          ];\r\n        } else {\r\n          return d;\r\n        }\r\n      });\r\n  });\r\n\r\n  // We don't want to return the full data set when there are no axes brushed.\r\n  // Actually, when there are no axes brushed, by definition, no items are\r\n  // selected. So, let's avoid the filtering and just return false.\r\n  //if (actives.length === 0) return false;\r\n\r\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\r\n  if (actives.length === 0) return config.data;\r\n\r\n  // test if within range\r\n  const within = {\r\n    date: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (\r\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n            config.dimensions[p].yscale(d[p]) <= e[1]\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      } else {\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (e[0] <= d[p] && d[p] <= e[1]) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    },\r\n    number: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (\r\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n            config.dimensions[p].yscale(d[p]) <= e[1]\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      } else {\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (e[0] <= d[p] && d[p] <= e[1]) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    },\r\n    string: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      for (const e of dimExt) {\r\n        if (e === null || e === undefined) {\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= e[1]\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n  };\r\n\r\n  return config.data.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return actives.every((p, i) =>\r\n          within[config.dimensions[p].type](d, p, i)\r\n        );\r\n      case 'OR':\r\n        return actives.some((p, i) =>\r\n          within[config.dimensions[p].type](d, p, i)\r\n        );\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","import { brushY, brushSelection } from 'd3-brush';\r\nimport { event, select } from 'd3-selection';\r\nimport drawBrushes from './drawBrushes';\r\nimport selected from './selected';\r\n\r\nconst brushUpdated = (config, pc, events) => newSelection => {\r\n  config.brushed = newSelection;\r\n  events.call('brush', pc, config.brushed);\r\n  pc.renderBrushed();\r\n};\r\n\r\nconst newBrush = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const { brushes, brushNodes } = state;\r\n\r\n  const brushRangeMax =\r\n    config.dimensions[axis].type === 'string'\r\n      ? config.dimensions[axis].yscale.range()[\r\n          config.dimensions[axis].yscale.range().length - 1\r\n        ]\r\n      : config.dimensions[axis].yscale.range()[0];\r\n\r\n  const brush = brushY().extent([[-15, 0], [15, brushRangeMax]]);\r\n  const id = brushes[axis] ? brushes[axis].length : 0;\r\n  const node =\r\n    'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + id;\r\n\r\n  if (brushes[axis]) {\r\n    brushes[axis].push({\r\n      id,\r\n      brush,\r\n      node,\r\n    });\r\n  } else {\r\n    brushes[axis] = [{ id, brush, node }];\r\n  }\r\n\r\n  if (brushNodes[axis]) {\r\n    brushNodes[axis].push({ id, node });\r\n  } else {\r\n    brushNodes[axis] = [{ id, node }];\r\n  }\r\n\r\n  brush\r\n    .on('start', function() {\r\n      if (event.sourceEvent !== null) {\r\n        events.call('brushstart', pc, config.brushed);\r\n        if (typeof event.sourceEvent.stopPropagation === 'function') {\r\n          event.sourceEvent.stopPropagation();\r\n        }\r\n      }\r\n    })\r\n    .on('brush', function(e) {\r\n      // record selections\r\n      brushUpdated(\r\n        config,\r\n        pc,\r\n        events\r\n      )(selected(state, config, pc, events, brushGroup));\r\n    })\r\n    .on('end', function() {\r\n      // Figure out if our latest brush has a selection\r\n      const lastBrushID = brushes[axis][brushes[axis].length - 1].id;\r\n      const lastBrush = document.getElementById(\r\n        'brush-' +\r\n          Object.keys(config.dimensions).indexOf(axis) +\r\n          '-' +\r\n          lastBrushID\r\n      );\r\n      const selection = brushSelection(lastBrush);\r\n\r\n      if (\r\n        selection !== undefined &&\r\n        selection !== null &&\r\n        selection[0] !== selection[1]\r\n      ) {\r\n        newBrush(state, config, pc, events, brushGroup)(axis, _selector);\r\n\r\n        drawBrushes(brushes[axis], config, pc, axis, _selector);\r\n\r\n        brushUpdated(config, pc, events)(\r\n          selected(state, config, pc, events, brushGroup)\r\n        );\r\n      } else {\r\n        if (\r\n          event.sourceEvent &&\r\n          event.sourceEvent.toString() === '[object MouseEvent]' &&\r\n          event.selection === null\r\n        ) {\r\n          pc.brushReset(axis);\r\n        }\r\n      }\r\n\r\n      events.call('brushend', pc, config.brushed);\r\n    });\r\n\r\n  return brush;\r\n};\r\n\r\nexport default newBrush;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\nimport newBrush from './newBrush';\r\nimport drawBrushes from './drawBrushes';\r\n\r\n/**\r\n *\r\n * extents are in format of [[2,6], [3,5]]\r\n *\r\n * * @param state\r\n * @param config\r\n * @param pc\r\n * @returns {Function}\r\n */\r\nconst brushExtents = (state, config, pc, events, brushGroup) => extents => {\r\n  const { brushes } = state;\r\n\r\n  if (typeof extents === 'undefined') {\r\n    return Object.keys(config.dimensions).reduce((acc, cur, pos) => {\r\n      const axisBrushes = brushes[cur];\r\n\r\n      if (axisBrushes === undefined || axisBrushes === null) {\r\n        acc[cur] = [];\r\n      } else {\r\n        acc[cur] = axisBrushes.reduce((d, p, i) => {\r\n          const range = brushSelection(\r\n            document.getElementById('brush-' + pos + '-' + i)\r\n          );\r\n          if (range !== null) {\r\n            d = d.push(range);\r\n          }\r\n\r\n          return d;\r\n        }, []);\r\n      }\r\n\r\n      return acc;\r\n    }, {});\r\n  } else {\r\n    // //first get all the brush selections\r\n    // loop over each dimension and update appropriately (if it was passed in through extents)\r\n    Object.keys(config.dimensions).forEach((d, pos) => {\r\n      if (extents[d] === undefined || extents[d] === null) {\r\n        return;\r\n      }\r\n\r\n      const dim = config.dimensions[d];\r\n\r\n      const yExtents = extents[d].map(e => e.map(dim.yscale));\r\n\r\n      const _bs = yExtents.map((e, j) => {\r\n        const _brush = newBrush(state, config, pc, events, brushGroup)(\r\n          d,\r\n          select('#brush-group-' + pos)\r\n        );\r\n        //update the extent\r\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\r\n        _brush.extent([[-15, e[1]], [15, e[0]]]);\r\n\r\n        return {\r\n          id: j,\r\n          brush: _brush,\r\n          ext: e,\r\n        };\r\n      });\r\n\r\n      brushes[d] = _bs;\r\n\r\n      drawBrushes(_bs, config, pc, d, select('#brush-group-' + pos));\r\n\r\n      //redraw the brush\r\n      //https://github.com/d3/d3-brush#brush_move\r\n      // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\r\n      _bs.forEach((f, k) => {\r\n        select('#brush-' + pos + '-' + k)\r\n          .call(f.brush)\r\n          .call(f.brush.move, f.ext.reverse());\r\n      });\r\n    });\r\n\r\n    //redraw the chart\r\n    pc.renderBrushed();\r\n\r\n    return pc;\r\n  }\r\n};\r\n\r\nexport default brushExtents;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\n\r\nconst brushReset = (state, config, pc) => dimension => {\r\n  const { brushes } = state;\r\n\r\n  if (dimension === undefined) {\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      Object.keys(config.dimensions).forEach((d, pos) => {\r\n        const axisBrush = brushes[d];\r\n\r\n        axisBrush.forEach((e, i) => {\r\n          const brush = document.getElementById('brush-' + pos + '-' + i);\r\n          if (brushSelection(brush) !== null) {\r\n            pc.g()\r\n              .select('#brush-' + pos + '-' + i)\r\n              .call(e.brush.move, null);\r\n          }\r\n        });\r\n      });\r\n\r\n      pc.renderBrushed();\r\n    }\r\n  } else {\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      const axisBrush = brushes[dimension];\r\n      const pos = Object.keys(config.dimensions).indexOf(dimension);\r\n\r\n      axisBrush.forEach((e, i) => {\r\n        const brush = document.getElementById('brush-' + pos + '-' + i);\r\n        if (brushSelection(brush) !== null) {\r\n          pc.g()\r\n            .select('#brush-' + pos + '-' + i)\r\n            .call(e.brush.move, null);\r\n\r\n          if (typeof e.event === 'function') {\r\n            e.event(select('#brush-' + pos + '-' + i));\r\n          }\r\n        }\r\n      });\r\n\r\n      pc.renderBrushed();\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default brushReset;\r\n","import newBrush from './newBrush';\r\nimport drawBrushes from './drawBrushes';\r\n\r\nconst brushFor = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const { brushes } = state;\r\n  newBrush(state, config, pc, events, brushGroup)(axis, _selector);\r\n  drawBrushes(brushes[axis], config, pc, axis, _selector);\r\n};\r\n\r\nexport default brushFor;\r\n","import { select } from 'd3-selection';\r\nimport brushExtents from './brushExtents';\r\nimport brushReset from './brushReset';\r\nimport brushFor from './brushFor';\r\n\r\nconst install = (state, config, pc, events, brushGroup) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  pc.g()\r\n    .append('svg:g')\r\n    .attr('id', (d, i) => 'brush-group-' + i)\r\n    .attr('class', 'brush-group')\r\n    .attr('dimension', d => d)\r\n    .each(function(d) {\r\n      brushFor(state, config, pc, events, brushGroup)(d, select(this));\r\n    });\r\n\r\n  pc.brushExtents = brushExtents(state, config, pc, events, brushGroup);\r\n  pc.brushReset = brushReset(state, config, pc);\r\n  return pc;\r\n};\r\n\r\nexport default install;\r\n","const uninstall = (state, pc) => () => {\r\n  if (pc.g() !== undefined && pc.g() !== null)\r\n    pc.g()\r\n      .selectAll('.brush-group')\r\n      .remove();\r\n\r\n  state.brushes = {};\r\n  delete pc.brushExtents;\r\n  delete pc.brushReset;\r\n};\r\n\r\nexport default uninstall;\r\n","import brushExtents from './brushExtents';\r\nimport install from './install';\r\nimport selected from './selected';\r\nimport uninstall from './uninstall';\r\n\r\nconst install1DMultiAxes = (brushGroup, config, pc, events) => {\r\n  const state = {\r\n    brushes: {},\r\n    brushNodes: {},\r\n  };\r\n\r\n  brushGroup.modes['1D-axes-multi'] = {\r\n    install: install(state, config, pc, events, brushGroup),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(state, config, brushGroup),\r\n    brushState: brushExtents(state, config, pc),\r\n  };\r\n};\r\n\r\nexport default install1DMultiAxes;\r\n","const uninstall = (state, pc) => () => {\r\n  pc.selection\r\n    .select('svg')\r\n    .select('g#strums')\r\n    .remove();\r\n  pc.selection\r\n    .select('svg')\r\n    .select('rect#strum-events')\r\n    .remove();\r\n  pc.on('axesreorder.strums', undefined);\r\n  delete pc.brushReset;\r\n\r\n  state.strumRect = undefined;\r\n};\r\n\r\nexport default uninstall;\r\n","// test if point falls between lines\r\nconst containmentTest = (strum, width) => p => {\r\n  const p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\r\n    p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\r\n    m1 = 1 - width / p1[0],\r\n    b1 = p1[1] * (1 - m1),\r\n    m2 = 1 - width / p2[0],\r\n    b2 = p2[1] * (1 - m2);\r\n\r\n  const x = p[0],\r\n    y = p[1],\r\n    y1 = m1 * x + b1,\r\n    y2 = m2 * x + b2;\r\n\r\n  return y > Math.min(y1, y2) && y < Math.max(y1, y2);\r\n};\r\n\r\nconst crossesStrum = (state, config) => (d, id) => {\r\n  let strum = state.strums[id],\r\n    test = containmentTest(strum, state.strums.width(id)),\r\n    d1 = strum.dims.left,\r\n    d2 = strum.dims.right,\r\n    y1 = config.dimensions[d1].yscale,\r\n    y2 = config.dimensions[d2].yscale,\r\n    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\r\n  return test(point);\r\n};\r\n\r\nconst selected = (brushGroup, state, config) => {\r\n  // Get the ids of the currently active strums.\r\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d)),\r\n    brushed = config.data;\r\n\r\n  if (ids.length === 0) {\r\n    return brushed;\r\n  }\r\n\r\n  const crossTest = crossesStrum(state, config);\r\n\r\n  return brushed.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return ids.every(id => crossTest(d, id));\r\n      case 'OR':\r\n        return ids.some(id => crossTest(d, id));\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","const removeStrum = (state, pc) => {\r\n  const strum = state.strums[state.strums.active],\r\n    svg = pc.selection.select('svg').select('g#strums');\r\n\r\n  delete state.strums[state.strums.active];\r\n  svg.selectAll('line#strum-' + strum.dims.i).remove();\r\n  svg.selectAll('circle#strum-' + strum.dims.i).remove();\r\n};\r\n\r\nexport default removeStrum;\r\n","import selected from './selected';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\r\n  const strum = state.strums[state.strums.active];\r\n\r\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\r\n  // considered a drag without move. So we have to deal with that case\r\n  if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\r\n    removeStrum(state, pc);\r\n  }\r\n\r\n  const brushed = selected(brushGroup, state, config);\r\n  state.strums.active = undefined;\r\n  config.brushed = brushed;\r\n  pc.renderBrushed();\r\n  events.call('brushend', pc, config.brushed);\r\n};\r\n\r\nexport default onDragEnd;\r\n","import { event, select } from 'd3-selection';\r\nimport { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\n\r\nconst drawStrum = (\r\n  brushGroup,\r\n  state,\r\n  config,\r\n  pc,\r\n  events,\r\n  strum,\r\n  activePoint\r\n) => {\r\n  let _svg = pc.selection.select('svg').select('g#strums'),\r\n    id = strum.dims.i,\r\n    points = [strum.p1, strum.p2],\r\n    _line = _svg.selectAll('line#strum-' + id).data([strum]),\r\n    circles = _svg.selectAll('circle#strum-' + id).data(points),\r\n    _drag = drag();\r\n\r\n  _line\r\n    .enter()\r\n    .append('line')\r\n    .attr('id', 'strum-' + id)\r\n    .attr('class', 'strum');\r\n\r\n  _line\r\n    .attr('x1', d => d.p1[0])\r\n    .attr('y1', d => d.p1[1])\r\n    .attr('x2', d => d.p2[0])\r\n    .attr('y2', d => d.p2[1])\r\n    .attr('stroke', 'black')\r\n    .attr('stroke-width', 2);\r\n\r\n  _drag\r\n    .on('drag', function(d, i) {\r\n      const ev = event;\r\n      i = i + 1;\r\n      strum['p' + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\r\n      strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\r\n      drawStrum(brushGroup, state, config, pc, events, strum, i - 1);\r\n    })\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  circles\r\n    .enter()\r\n    .append('circle')\r\n    .attr('id', 'strum-' + id)\r\n    .attr('class', 'strum');\r\n\r\n  circles\r\n    .attr('cx', d => d[0])\r\n    .attr('cy', d => d[1])\r\n    .attr('r', 5)\r\n    .style(\r\n      'opacity',\r\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\r\n    )\r\n    .on('mouseover', function() {\r\n      select(this).style('opacity', 0.8);\r\n    })\r\n    .on('mouseout', function() {\r\n      select(this).style('opacity', 0);\r\n    })\r\n    .call(_drag);\r\n};\r\n\r\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\r\n  const ev = event,\r\n    strum = state.strums[state.strums.active];\r\n\r\n  // Make sure that the point is within the bounds\r\n  strum.p2[0] = Math.min(\r\n    Math.max(strum.minX + 1, ev.x - config.margin.left),\r\n    strum.maxX\r\n  );\r\n  strum.p2[1] = Math.min(\r\n    Math.max(strum.minY, ev.y - config.margin.top),\r\n    strum.maxY\r\n  );\r\n\r\n  drawStrum(brushGroup, state, config, pc, events, strum, 1);\r\n};\r\n\r\nexport default onDrag;\r\n","const h = config => config.height - config.margin.top - config.margin.bottom;\r\n\r\nexport default h;\r\n","const dimensionsForPoint = (config, pc, xscale, p) => {\r\n  const dims = { i: -1, left: undefined, right: undefined };\r\n  Object.keys(config.dimensions).some((dim, i) => {\r\n    if (xscale(dim) < p[0]) {\r\n      dims.i = i;\r\n      dims.left = dim;\r\n      dims.right = Object.keys(config.dimensions)[\r\n        pc.getOrderedDimensionKeys().indexOf(dim) + 1\r\n      ];\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  if (dims.left === undefined) {\r\n    // Event on the left side of the first axis.\r\n    dims.i = 0;\r\n    dims.left = pc.getOrderedDimensionKeys()[0];\r\n    dims.right = pc.getOrderedDimensionKeys()[1];\r\n  } else if (dims.right === undefined) {\r\n    // Event on the right side of the last axis\r\n    dims.i = Object.keys(config.dimensions).length - 1;\r\n    dims.right = dims.left;\r\n    dims.left = pc.getOrderedDimensionKeys()[\r\n      Object.keys(config.dimensions).length - 2\r\n    ];\r\n  }\r\n\r\n  return dims;\r\n};\r\n\r\nexport default dimensionsForPoint;\r\n","import { mouse } from 'd3-selection';\r\nimport h from '../../util/height';\r\nimport dimensionsForPoint from '../dimensionsForPoint';\r\n\r\n// First we need to determine between which two axes the sturm was started.\r\n// This will determine the freedom of movement, because a strum can\r\n// logically only happen between two axes, so no movement outside these axes\r\n// should be allowed.\r\nconst onDragStart = (state, config, pc, xscale) => () => {\r\n  let p = mouse(state.strumRect.node());\r\n\r\n  p[0] = p[0] - config.margin.left;\r\n  p[1] = p[1] - config.margin.top;\r\n\r\n  const dims = dimensionsForPoint(config, pc, xscale, p);\r\n  const strum = {\r\n    p1: p,\r\n    dims: dims,\r\n    minX: xscale(dims.left),\r\n    maxX: xscale(dims.right),\r\n    minY: 0,\r\n    maxY: h(config),\r\n  };\r\n\r\n  // Make sure that the point is within the bounds\r\n  strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\r\n  strum.p2 = strum.p1.slice();\r\n\r\n  state.strums[dims.i] = strum;\r\n  state.strums.active = dims.i;\r\n};\r\n\r\nexport default onDragStart;\r\n","import onDragEnd from './onDragEnd';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\r\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\r\n\r\n  ids.forEach(d => {\r\n    state.strums.active = d;\r\n    removeStrum(state, pc);\r\n  });\r\n  onDragEnd(brushGroup, state, config, pc, events)();\r\n};\r\n\r\nexport default brushReset;\r\n","// Checks if the first dimension is directly left of the second dimension.\r\nconst consecutive = dimensions => (first, second) => {\r\n  const keys = Object.keys(dimensions);\r\n\r\n  return keys.some(\r\n    (d, i) =>\r\n      d === first ? i + i < keys.length && dimensions[i + 1] === second : false\r\n  );\r\n};\r\n\r\nexport default consecutive;\r\n","import { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\nimport onDrag from './onDrag';\r\nimport onDragStart from './onDragStart';\r\nimport removeStrum from './removeStrum';\r\nimport brushReset from './brushReset';\r\nimport w from '../../util/width';\r\nimport h from '../../util/height';\r\nimport consecutive from '../consecutive';\r\n\r\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\r\n  if (pc.g() === undefined || pc.g() === null) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  const _drag = drag();\r\n\r\n  // Map of current strums. Strums are stored per segment of the PC. A segment,\r\n  // being the area between two axes. The left most area is indexed at 0.\r\n  state.strums.active = undefined;\r\n  // Returns the width of the PC segment where currently a strum is being\r\n  // placed. NOTE: even though they are evenly spaced in our current\r\n  // implementation, we keep for when non-even spaced segments are supported as\r\n  // well.\r\n  state.strums.width = id =>\r\n    state.strums[id] === undefined\r\n      ? undefined\r\n      : state.strums[id].maxX - state.strums[id].minX;\r\n\r\n  pc.on('axesreorder.strums', () => {\r\n    const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\r\n\r\n    if (ids.length > 0) {\r\n      // We have some strums, which might need to be removed.\r\n      ids.forEach(d => {\r\n        const dims = state.strums[d].dims;\r\n        state.strums.active = d;\r\n        // If the two dimensions of the current strum are not next to each other\r\n        // any more, than we'll need to remove the strum. Otherwise we keep it.\r\n        if (!consecutive(config.dimensions)(dims.left, dims.right)) {\r\n          removeStrum(state, pc);\r\n        }\r\n      });\r\n      onDragEnd(brushGroup, state, config, pc, events)();\r\n    }\r\n  });\r\n\r\n  // Add a new svg group in which we draw the strums.\r\n  pc.selection\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'strums')\r\n    .attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n  // Install the required brushReset function\r\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\r\n\r\n  _drag\r\n    .on('start', onDragStart(state, config, pc, xscale))\r\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  // NOTE: The styling needs to be done here and not in the css. This is because\r\n  //       for 1D brushing, the canvas layers should not listen to\r\n  //       pointer-events._.\r\n  state.strumRect = pc.selection\r\n    .select('svg')\r\n    .insert('rect', 'g#strums')\r\n    .attr('id', 'strum-events')\r\n    .attr('x', config.margin.left)\r\n    .attr('y', config.margin.top)\r\n    .attr('width', w(config))\r\n    .attr('height', h(config) + 2)\r\n    .style('opacity', 0)\r\n    .call(_drag);\r\n};\r\n\r\nexport default install;\r\n","import uninstall from './uninstall';\r\nimport install from './install';\r\nimport selected from './selected';\r\n\r\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\r\n  const state = {\r\n    strums: {},\r\n    strumRect: {},\r\n  };\r\n\r\n  brushGroup.modes['2D-strums'] = {\r\n    install: install(brushGroup, state, config, pc, events, xscale),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(brushGroup, state, config),\r\n    brushState: () => state.strums,\r\n  };\r\n};\r\n\r\nexport default install2DStrums;\r\n","const uninstall = (state, pc) => () => {\r\n  pc.selection\r\n    .select('svg')\r\n    .select('g#arcs')\r\n    .remove();\r\n  pc.selection\r\n    .select('svg')\r\n    .select('rect#arc-events')\r\n    .remove();\r\n  pc.on('axesreorder.arcs', undefined);\r\n\r\n  delete pc.brushReset;\r\n\r\n  state.strumRect = undefined;\r\n};\r\n\r\nexport default uninstall;\r\n","const hypothenuse = (a, b) => Math.sqrt(a * a + b * b);\r\n\r\nexport default hypothenuse;\r\n","import hypothenuse from './util/hypothenuse';\r\n\r\n// [0, 2*PI] -> [-PI/2, PI/2]\r\nconst signedAngle = angle =>\r\n  angle > Math.PI ? 1.5 * Math.PI - angle : 0.5 * Math.PI - angle;\r\n\r\n/**\r\n * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\r\n * However, one can only select lines from 0 to PI, so we compute the\r\n * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\r\n * are 12 and 6 o'clock respectively.\r\n */\r\nconst containmentTest = arc => a => {\r\n  let startAngle = signedAngle(arc.startAngle);\r\n  let endAngle = signedAngle(arc.endAngle);\r\n\r\n  if (startAngle > endAngle) {\r\n    const tmp = startAngle;\r\n    startAngle = endAngle;\r\n    endAngle = tmp;\r\n  }\r\n\r\n  // test if segment angle is contained in angle interval\r\n  return a >= startAngle && a <= endAngle;\r\n};\r\n\r\nconst crossesStrum = (state, config) => (d, id) => {\r\n  const arc = state.arcs[id],\r\n    test = containmentTest(arc),\r\n    d1 = arc.dims.left,\r\n    d2 = arc.dims.right,\r\n    y1 = config.dimensions[d1].yscale,\r\n    y2 = config.dimensions[d2].yscale,\r\n    a = state.arcs.width(id),\r\n    b = y1(d[d1]) - y2(d[d2]),\r\n    c = hypothenuse(a, b),\r\n    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\r\n  return test(angle);\r\n};\r\n\r\nconst selected = (brushGroup, state, config) => {\r\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\r\n  const brushed = config.data;\r\n\r\n  if (ids.length === 0) {\r\n    return brushed;\r\n  }\r\n\r\n  const crossTest = crossesStrum(state, config);\r\n\r\n  return brushed.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return ids.every(id => crossTest(d, id));\r\n      case 'OR':\r\n        return ids.some(id => crossTest(d, id));\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","const removeStrum = (state, pc) => {\r\n  const arc = state.arcs[state.arcs.active],\r\n    svg = pc.selection.select('svg').select('g#arcs');\r\n\r\n  delete state.arcs[state.arcs.active];\r\n  state.arcs.active = undefined;\r\n  svg.selectAll('line#arc-' + arc.dims.i).remove();\r\n  svg.selectAll('circle#arc-' + arc.dims.i).remove();\r\n  svg.selectAll('path#arc-' + arc.dims.i).remove();\r\n};\r\n\r\nexport default removeStrum;\r\n","import selected from './selected';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\r\n  const arc = state.arcs[state.arcs.active];\r\n\r\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\r\n  // considered a drag without move. So we have to deal with that case\r\n  if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\r\n    removeStrum(state, pc);\r\n  }\r\n\r\n  if (arc) {\r\n    const angle = state.arcs.startAngle(state.arcs.active);\r\n\r\n    arc.startAngle = angle;\r\n    arc.endAngle = angle;\r\n    arc.arc\r\n      .outerRadius(state.arcs.length(state.arcs.active))\r\n      .startAngle(angle)\r\n      .endAngle(angle);\r\n  }\r\n\r\n  state.arcs.active = undefined;\r\n  config.brushed = selected(brushGroup, state, config);\r\n  pc.renderBrushed();\r\n  events.call('brushend', pc, config.brushed);\r\n};\r\n\r\nexport default onDragEnd;\r\n","import { event, select } from 'd3-selection';\r\nimport { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\n\r\nconst drawStrum = (brushGroup, state, config, pc, events, arc, activePoint) => {\r\n  const svg = pc.selection.select('svg').select('g#arcs'),\r\n    id = arc.dims.i,\r\n    points = [arc.p2, arc.p3],\r\n    _line = svg\r\n      .selectAll('line#arc-' + id)\r\n      .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\r\n    circles = svg.selectAll('circle#arc-' + id).data(points),\r\n    _drag = drag(),\r\n    _path = svg.selectAll('path#arc-' + id).data([arc]);\r\n\r\n  _path\r\n    .enter()\r\n    .append('path')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc')\r\n    .style('fill', 'orange')\r\n    .style('opacity', 0.5);\r\n\r\n  _path\r\n    .attr('d', arc.arc)\r\n    .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\r\n\r\n  _line\r\n    .enter()\r\n    .append('line')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc');\r\n\r\n  _line\r\n    .attr('x1', d => d.p1[0])\r\n    .attr('y1', d => d.p1[1])\r\n    .attr('x2', d => d.p2[0])\r\n    .attr('y2', d => d.p2[1])\r\n    .attr('stroke', 'black')\r\n    .attr('stroke-width', 2);\r\n\r\n  _drag\r\n    .on('drag', (d, i) => {\r\n      const ev = event;\r\n      i = i + 2;\r\n\r\n      arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\r\n      arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\r\n\r\n      const angle =\r\n        i === 3 ? state.arcs.startAngle(id) : state.arcs.endAngle(id);\r\n\r\n      if (\r\n        (arc.startAngle < Math.PI &&\r\n          arc.endAngle < Math.PI &&\r\n          angle < Math.PI) ||\r\n        (arc.startAngle >= Math.PI &&\r\n          arc.endAngle >= Math.PI &&\r\n          angle >= Math.PI)\r\n      ) {\r\n        if (i === 2) {\r\n          arc.endAngle = angle;\r\n          arc.arc.endAngle(angle);\r\n        } else if (i === 3) {\r\n          arc.startAngle = angle;\r\n          arc.arc.startAngle(angle);\r\n        }\r\n      }\r\n\r\n      drawStrum(brushGroup, state, config, pc, events, arc, i - 2);\r\n    })\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  circles\r\n    .enter()\r\n    .append('circle')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc');\r\n\r\n  circles\r\n    .attr('cx', d => d[0])\r\n    .attr('cy', d => d[1])\r\n    .attr('r', 5)\r\n    .style(\r\n      'opacity',\r\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\r\n    )\r\n    .on('mouseover', function() {\r\n      select(this).style('opacity', 0.8);\r\n    })\r\n    .on('mouseout', function() {\r\n      select(this).style('opacity', 0);\r\n    })\r\n    .call(_drag);\r\n};\r\n\r\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\r\n  const ev = event,\r\n    arc = state.arcs[state.arcs.active];\r\n\r\n  // Make sure that the point is within the bounds\r\n  arc.p2[0] = Math.min(\r\n    Math.max(arc.minX + 1, ev.x - config.margin.left),\r\n    arc.maxX\r\n  );\r\n  arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - config.margin.top), arc.maxY);\r\n  arc.p3 = arc.p2.slice();\r\n  drawStrum(brushGroup, state, config, pc, events, arc, 1);\r\n};\r\n\r\nexport default onDrag;\r\n","import { mouse } from 'd3-selection';\r\nimport { arc as d3Arc } from 'd3-shape';\r\nimport dimensionsForPoint from '../dimensionsForPoint';\r\nimport h from '../../util/height';\r\n\r\n// First we need to determine between which two axes the arc was started.\r\n// This will determine the freedom of movement, because a arc can\r\n// logically only happen between two axes, so no movement outside these axes\r\n// should be allowed.\r\nconst onDragStart = (state, config, pc, xscale) => () => {\r\n  const p = mouse(state.strumRect.node());\r\n\r\n  p[0] = p[0] - config.margin.left;\r\n  p[1] = p[1] - config.margin.top;\r\n\r\n  const dims = dimensionsForPoint(config, pc, xscale, p);\r\n  const arc = {\r\n    p1: p,\r\n    dims: dims,\r\n    minX: xscale(dims.left),\r\n    maxX: xscale(dims.right),\r\n    minY: 0,\r\n    maxY: h(config),\r\n    startAngle: undefined,\r\n    endAngle: undefined,\r\n    arc: d3Arc().innerRadius(0),\r\n  };\r\n\r\n  // Make sure that the point is within the bounds\r\n  arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\r\n  arc.p2 = arc.p1.slice();\r\n  arc.p3 = arc.p1.slice();\r\n\r\n  state.arcs[dims.i] = arc;\r\n  state.arcs.active = dims.i;\r\n};\r\n\r\nexport default onDragStart;\r\n","import onDragEnd from './onDragEnd';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\r\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\r\n\r\n  ids.forEach(d => {\r\n    state.arcs.active = d;\r\n    removeStrum(state, pc);\r\n  });\r\n  onDragEnd(brushGroup, state, config, pc, events)();\r\n};\r\n\r\nexport default brushReset;\r\n","import { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\nimport onDrag from './onDrag';\r\nimport onDragStart from './onDragStart';\r\nimport removeStrum from './removeStrum';\r\nimport brushReset from './brushReset';\r\nimport w from '../../util/width';\r\nimport h from '../../util/height';\r\n\r\nimport hypothenuse from './util/hypothenuse';\r\nimport consecutive from '../consecutive';\r\n\r\n// returns angles in [-PI/2, PI/2]\r\nconst angle = (p1, p2) => {\r\n  const a = p1[0] - p2[0],\r\n    b = p1[1] - p2[1],\r\n    c = hypothenuse(a, b);\r\n\r\n  return Math.asin(b / c);\r\n};\r\n\r\nconst endAngle = state => id => {\r\n  const arc = state.arcs[id];\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n  let sAngle = angle(arc.p1, arc.p2),\r\n    uAngle = -sAngle + Math.PI / 2;\r\n\r\n  if (arc.p1[0] > arc.p2[0]) {\r\n    uAngle = 2 * Math.PI - uAngle;\r\n  }\r\n\r\n  return uAngle;\r\n};\r\n\r\nconst startAngle = state => id => {\r\n  const arc = state.arcs[id];\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  let sAngle = angle(arc.p1, arc.p3),\r\n    uAngle = -sAngle + Math.PI / 2;\r\n\r\n  if (arc.p1[0] > arc.p3[0]) {\r\n    uAngle = 2 * Math.PI - uAngle;\r\n  }\r\n\r\n  return uAngle;\r\n};\r\n\r\nconst length = state => id => {\r\n  const arc = state.arcs[id];\r\n\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  const a = arc.p1[0] - arc.p2[0],\r\n    b = arc.p1[1] - arc.p2[1];\r\n\r\n  return hypothenuse(a, b);\r\n};\r\n\r\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  const _drag = drag();\r\n\r\n  // Map of current arcs. arcs are stored per segment of the PC. A segment,\r\n  // being the area between two axes. The left most area is indexed at 0.\r\n  state.arcs.active = undefined;\r\n  // Returns the width of the PC segment where currently a arc is being\r\n  // placed. NOTE: even though they are evenly spaced in our current\r\n  // implementation, we keep for when non-even spaced segments are supported as\r\n  // well.\r\n  state.arcs.width = id => {\r\n    const arc = state.arcs[id];\r\n    return arc === undefined ? undefined : arc.maxX - arc.minX;\r\n  };\r\n\r\n  // returns angles in [0, 2 * PI]\r\n  state.arcs.endAngle = endAngle(state);\r\n  state.arcs.startAngle = startAngle(state);\r\n  state.arcs.length = length(state);\r\n\r\n  pc.on('axesreorder.arcs', () => {\r\n    const ids = Object.getOwnPropertyNames(arcs).filter(d => !isNaN(d));\r\n\r\n    if (ids.length > 0) {\r\n      // We have some arcs, which might need to be removed.\r\n      ids.forEach(d => {\r\n        const dims = arcs[d].dims;\r\n        state.arcs.active = d;\r\n        // If the two dimensions of the current arc are not next to each other\r\n        // any more, than we'll need to remove the arc. Otherwise we keep it.\r\n        if (!consecutive(dims)(dims.left, dims.right)) {\r\n          removeStrum(state, pc);\r\n        }\r\n      });\r\n      onDragEnd(brushGroup, state, config, pc, events)();\r\n    }\r\n  });\r\n\r\n  // Add a new svg group in which we draw the arcs.\r\n  pc.selection\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'arcs')\r\n    .attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n  // Install the required brushReset function\r\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\r\n\r\n  _drag\r\n    .on('start', onDragStart(state, config, pc, xscale))\r\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  // NOTE: The styling needs to be done here and not in the css. This is because\r\n  //       for 1D brushing, the canvas layers should not listen to\r\n  //       pointer-events._.\r\n  state.strumRect = pc.selection\r\n    .select('svg')\r\n    .insert('rect', 'g#arcs')\r\n    .attr('id', 'arc-events')\r\n    .attr('x', config.margin.left)\r\n    .attr('y', config.margin.top)\r\n    .attr('width', w(config))\r\n    .attr('height', h(config) + 2)\r\n    .style('opacity', 0)\r\n    .call(_drag);\r\n};\r\n\r\nexport default install;\r\n","import uninstall from './uninstall';\r\nimport install from './install';\r\nimport selected from './selected';\r\n\r\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\r\n  const state = {\r\n    arcs: {},\r\n    strumRect: {},\r\n  };\r\n\r\n  brushGroup.modes['angular'] = {\r\n    install: install(brushGroup, state, config, pc, events, xscale),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(brushGroup, state, config),\r\n    brushState: () => state.arcs,\r\n  };\r\n};\r\n\r\nexport default installAngularBrush;\r\n","// calculate 2d intersection of line a->b with line c->d\r\n// points are objects with x and y properties\r\nconst intersection = (a, b, c, d) => {\r\n  return {\r\n    x:\r\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\r\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\r\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\r\n    y:\r\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\r\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\r\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\r\n  };\r\n};\r\n\r\nexport default intersection;\r\n","import {select, selectAll} from 'd3-selection';\r\n\r\n// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\r\n// (so you can choose to save it to disk, etc.)\r\nconst mergeParcoords = pc => callback => {\r\n  // Retina display, etc.\r\n  const devicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n  // Create a canvas element to store the merged canvases\r\n  const mergedCanvas = document.createElement('canvas');\r\n\r\n  const foregroundCanvas = pc.canvas.foreground;\r\n  // We will need to adjust for canvas margins to align the svg and canvas\r\n  const canvasMarginLeft = Number(foregroundCanvas.style.marginLeft.replace('px',''));\r\n\r\n  const textTopAdjust = 15;\r\n  const canvasMarginTop = Number(foregroundCanvas.style.marginTop.replace('px','')) + textTopAdjust;\r\n  const width = (foregroundCanvas.clientWidth + canvasMarginLeft) * devicePixelRatio;\r\n  const height = (foregroundCanvas.clientHeight + canvasMarginTop) * devicePixelRatio;\r\n  mergedCanvas.width = width + 50; // pad so that svg labels at right will not get cut off\r\n  mergedCanvas.height = height + 30; // pad so that svg labels at bottom will not get cut off\r\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\r\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\r\n\r\n  // Give the canvas a white background\r\n  const context = mergedCanvas.getContext('2d');\r\n  context.fillStyle = '#ffffff';\r\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\r\n\r\n  // Merge all the canvases\r\n  for (const key in pc.canvas) {\r\n    context.drawImage(\r\n      pc.canvas[key],\r\n      canvasMarginLeft * devicePixelRatio,\r\n      canvasMarginTop * devicePixelRatio,\r\n      width - canvasMarginLeft * devicePixelRatio,\r\n      height - canvasMarginTop * devicePixelRatio\r\n    );\r\n  }\r\n\r\n  // Add SVG elements to canvas\r\n  const DOMURL = window.URL || window.webkitURL || window;\r\n  const serializer = new XMLSerializer();\r\n  // axis labels are translated (0,-5) so we will clone the svg\r\n  //   and translate down so the labels are drawn on the canvas\r\n  const svgNodeCopy = pc.selection.select('svg').node().cloneNode(true);\r\n  svgNodeCopy.setAttribute('transform', 'translate(0,' + textTopAdjust + ')');\r\n  svgNodeCopy.setAttribute('height', svgNodeCopy.getAttribute('height') + textTopAdjust);\r\n  // text will need fill attribute since css styles will not get picked up\r\n  //   this is not sophisticated since it doesn't look up css styles\r\n  //   if the user changes\r\n  select(svgNodeCopy).selectAll('text').attr('fill', 'black');\r\n  const svgStr = serializer.serializeToString(\r\n    svgNodeCopy\r\n  );\r\n\r\n  // Create a Data URI.\r\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\r\n  const img = new Image();\r\n  img.onload = () => {\r\n    context.drawImage(\r\n      img,\r\n      0,\r\n      0,\r\n      img.width * devicePixelRatio,\r\n      img.height * devicePixelRatio\r\n    );\r\n    if (typeof callback === 'function') {\r\n      callback(mergedCanvas);\r\n    }\r\n  };\r\n  img.src = src;\r\n};\r\n\r\nexport default mergeParcoords;\r\n","import { brushSelection } from 'd3-brush';\r\nimport { matchArray } from 'searchjs';\r\n\r\nconst selected = (config, pc) => () => {\r\n  let actives = [];\r\n  let extents = [];\r\n  let ranges = {};\r\n  //get brush selections from each node, convert to actual values\r\n  //invert order of values in array to comply with the parcoords architecture\r\n  if (config.brushes.length === 0) {\r\n    let nodes = pc\r\n      .g()\r\n      .selectAll('.brush')\r\n      .nodes();\r\n    for (let k = 0; k < nodes.length; k++) {\r\n      if (brushSelection(nodes[k]) !== null) {\r\n        actives.push(nodes[k].__data__);\r\n        let values = [];\r\n        let ranger = brushSelection(nodes[k]);\r\n        if (\r\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\r\n          'number'\r\n        ) {\r\n          for (let i = 0; i < ranger.length; i++) {\r\n            if (\r\n              actives.includes(nodes[k].__data__) &&\r\n              config.flipAxes.includes(nodes[k].__data__)\r\n            ) {\r\n              values.push(\r\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\r\n              );\r\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\r\n              values.unshift(\r\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\r\n              );\r\n            }\r\n          }\r\n          extents.push(values);\r\n          for (let ii = 0; ii < extents.length; ii++) {\r\n            if (extents[ii].length === 0) {\r\n              extents[ii] = [1, 1];\r\n            }\r\n          }\r\n        } else {\r\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\r\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\r\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\r\n          for (let j = 0; j < dimRange.length; j++) {\r\n            if (\r\n              dimRange[j] >= ranger[0] &&\r\n              dimRange[j] <= ranger[1] &&\r\n              actives.includes(nodes[k].__data__) &&\r\n              config.flipAxes.includes(nodes[k].__data__)\r\n            ) {\r\n              values.push(dimRange[j]);\r\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\r\n              values.unshift(dimRange[j]);\r\n            }\r\n          }\r\n          extents.push(values);\r\n          for (let ii = 0; ii < extents.length; ii++) {\r\n            if (extents[ii].length === 0) {\r\n              extents[ii] = [1, 1];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // test if within range\r\n    const within = {\r\n      date: function(d, p, dimension) {\r\n        let category = d[p];\r\n        let categoryIndex = config.dimensions[p].yscale\r\n          .domain()\r\n          .indexOf(category);\r\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n          categoryIndex\r\n        ];\r\n        return (\r\n          categoryRangeValue >= ranges[p][0] &&\r\n          categoryRangeValue <= ranges[p][1]\r\n        );\r\n      },\r\n      number: function(d, p, dimension) {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      },\r\n      string: function(d, p, dimension) {\r\n        let category = d[p];\r\n        let categoryIndex = config.dimensions[p].yscale\r\n          .domain()\r\n          .indexOf(category);\r\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n          categoryIndex\r\n        ];\r\n        return (\r\n          categoryRangeValue >= ranges[p][0] &&\r\n          categoryRangeValue <= ranges[p][1]\r\n        );\r\n      },\r\n    };\r\n\r\n    return matchArray(config.data, config.filters).filter(d =>\r\n      actives.every((p, dimension) =>\r\n        within[config.dimensions[p].type](d, p, dimension)\r\n      )\r\n    );\r\n  } else {\r\n    // need to get data from each brush instead of each axis\r\n    // first must find active axes by iterating through all brushes\r\n    // then go through similiar process as above.\r\n    let multiBrushData = [];\r\n    for (let idx = 0; idx < config.brushes.length; idx++) {\r\n      let brush = config.brushes[idx];\r\n      let values = [];\r\n      let ranger = brush.extent;\r\n      let actives = [brush.data];\r\n      if (\r\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\r\n      ) {\r\n        for (let i = 0; i < ranger.length; i++) {\r\n          if (\r\n            actives.includes(brush.data) &&\r\n            config.flipAxes.includes(brush.data)\r\n          ) {\r\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\r\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\r\n            values.unshift(\r\n              config.dimensions[brush.data].yscale.invert(ranger[i])\r\n            );\r\n          }\r\n        }\r\n        extents.push(values);\r\n        for (let ii = 0; ii < extents.length; ii++) {\r\n          if (extents[ii].length === 0) {\r\n            extents[ii] = [1, 1];\r\n          }\r\n        }\r\n      } else {\r\n        ranges[brush.data] = brush.extent;\r\n        let dimRange = config.dimensions[brush.data].yscale.range();\r\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\r\n        for (let j = 0; j < dimRange.length; j++) {\r\n          if (\r\n            dimRange[j] >= ranger[0] &&\r\n            dimRange[j] <= ranger[1] &&\r\n            actives.includes(brush.data) &&\r\n            config.flipAxes.includes(brush.data)\r\n          ) {\r\n            values.push(dimRange[j]);\r\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\r\n            values.unshift(dimRange[j]);\r\n          }\r\n        }\r\n        extents.push(values);\r\n        for (let ii = 0; ii < extents.length; ii++) {\r\n          if (extents[ii].length === 0) {\r\n            extents[ii] = [1, 1];\r\n          }\r\n        }\r\n      }\r\n      let within = {\r\n        date: function(d, p, dimension) {\r\n          let category = d[p];\r\n          let categoryIndex = config.dimensions[p].yscale\r\n            .domain()\r\n            .indexOf(category);\r\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n            categoryIndex\r\n          ];\r\n          return (\r\n            categoryRangeValue >= ranges[p][0] &&\r\n            categoryRangeValue <= ranges[p][1]\r\n          );\r\n        },\r\n        number: function(d, p, dimension) {\r\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\r\n        },\r\n        string: function(d, p, dimension) {\r\n          let category = d[p];\r\n          let categoryIndex = config.dimensions[p].yscale\r\n            .domain()\r\n            .indexOf(category);\r\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n            categoryIndex\r\n          ];\r\n          return (\r\n            categoryRangeValue >= ranges[p][0] &&\r\n            categoryRangeValue <= ranges[p][1]\r\n          );\r\n        },\r\n      };\r\n\r\n      // filter data, but instead of returning it now,\r\n      // put it into multiBrush data which is returned after\r\n      // all brushes are iterated through.\r\n      let filtered = matchArray(config.data, config.filters).filter(d =>\r\n        actives.every((p, dimension) =>\r\n          within[config.dimensions[p].type](d, p, dimension)\r\n        )\r\n      );\r\n      for (let z = 0; z < filtered.length; z++) {\r\n        multiBrushData.push(filtered[z]);\r\n      }\r\n      actives = [];\r\n      ranges = {};\r\n    }\r\n    return multiBrushData;\r\n  }\r\n};\r\n\r\nexport default selected;\r\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\r\n  if (predicate === null) {\r\n    return brushGroup.predicate;\r\n  }\r\n\r\n  predicate = String(predicate).toUpperCase();\r\n  if (predicate !== 'AND' && predicate !== 'OR') {\r\n    throw new Error('Invalid predicate ' + predicate);\r\n  }\r\n\r\n  brushGroup.predicate = predicate;\r\n  config.brushed = brushGroup.currentMode().selected();\r\n  pc.renderBrushed();\r\n  return pc;\r\n};\r\n\r\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\r\n  if (mode === null) {\r\n    return brushGroup.mode;\r\n  }\r\n\r\n  if (pc.brushModes().indexOf(mode) === -1) {\r\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\r\n  }\r\n\r\n  // Make sure that we don't trigger unnecessary events by checking if the mode\r\n  // actually changes.\r\n  if (mode !== brushGroup.mode) {\r\n    // When changing brush modes, the first thing we need to do is clearing any\r\n    // brushes from the current mode, if any.\r\n    if (brushGroup.mode !== 'None') {\r\n      pc.brushReset();\r\n    }\r\n\r\n    // Next, we need to 'uninstall' the current brushMode.\r\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\r\n    // Finally, we can install the requested one.\r\n    brushGroup.mode = mode;\r\n    brushGroup.modes[brushGroup.mode].install();\r\n    if (mode === 'None') {\r\n      delete pc.brushPredicate;\r\n    } else {\r\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\r\n    }\r\n  }\r\n\r\n  return pc;\r\n};\r\n\r\nexport default brushMode;\r\n","/**\r\n * dimension display names\r\n *\r\n * @param config\r\n * @param d\r\n * @returns {*}\r\n */\r\nconst dimensionLabels = config => d =>\r\n  config.dimensions[d].title ? config.dimensions[d].title : d;\r\n\r\nexport default dimensionLabels;\r\n","import { select } from 'd3-selection';\r\n\r\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\r\n  function(dimension) {\r\n    pc.flip(dimension);\r\n    pc.brushReset(dimension);\r\n    select(this.parentElement)\r\n      .transition()\r\n      .duration(config.animationTime)\r\n      .call(axis.scale(config.dimensions[dimension].yscale));\r\n    pc.render();\r\n  };\r\n\r\nexport default flipAxisAndUpdatePCP;\r\n","import { event } from 'd3-selection';\r\n\r\nconst rotateLabels = (config, pc) => {\r\n  if (!config.rotateLabels) return;\r\n\r\n  let delta = event.deltaY;\r\n  delta = delta < 0 ? -5 : delta;\r\n  delta = delta > 0 ? 5 : delta;\r\n\r\n  config.dimensionTitleRotation += delta;\r\n  pc.svg\r\n    .selectAll('text.label')\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    );\r\n  event.preventDefault();\r\n};\r\n\r\nexport default rotateLabels;\r\n","import { select } from 'd3-selection';\r\n\r\nimport dimensionLabels from '../util/dimensionLabels';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\nimport rotateLabels from '../util/rotateLabels';\r\n\r\nconst updateAxes = (config, pc, position, axis, flags) => (\r\n  animationTime = null\r\n) => {\r\n  if (animationTime === null) {\r\n    animationTime = config.animationTime;\r\n  }\r\n\r\n  const g_data = pc.svg\r\n    .selectAll('.dimension')\r\n    .data(pc.getOrderedDimensionKeys());\r\n  // Enter\r\n  g_data\r\n    .enter()\r\n    .append('svg:g')\r\n    .attr('class', 'dimension')\r\n    .attr('transform', p => 'translate(' + position(p) + ')')\r\n    .style('opacity', 0)\r\n    .append('svg:g')\r\n    .attr('class', 'axis')\r\n    .attr('transform', 'translate(0,0)')\r\n    .each(function(d) {\r\n      const axisElement = select(this).call(\r\n        pc.applyAxisConfig(axis, config.dimensions[d])\r\n      );\r\n\r\n      axisElement\r\n        .selectAll('path')\r\n        .style('fill', 'none')\r\n        .style('stroke', '#222')\r\n        .style('shape-rendering', 'crispEdges');\r\n\r\n      axisElement\r\n        .selectAll('line')\r\n        .style('fill', 'none')\r\n        .style('stroke', '#222')\r\n        .style('shape-rendering', 'crispEdges');\r\n    })\r\n    .append('svg:text')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('class', 'label')\r\n    .attr('x', 0)\r\n    .attr('y', 0)\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    )\r\n    .text(dimensionLabels(config))\r\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\r\n    .on('wheel', rotateLabels(config, pc));\r\n\r\n  // Update\r\n  g_data.attr('opacity', 0);\r\n  g_data\r\n    .select('.axis')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .each(function(d) {\r\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\r\n    });\r\n  g_data\r\n    .select('.label')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .text(dimensionLabels(config))\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    );\r\n\r\n  // Exit\r\n  g_data.exit().remove();\r\n\r\n  const g = pc.svg.selectAll('.dimension');\r\n  g.transition()\r\n    .duration(animationTime)\r\n    .attr('transform', p => 'translate(' + position(p) + ')')\r\n    .style('opacity', 1);\r\n\r\n  pc.svg\r\n    .selectAll('.axis')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .each(function(d) {\r\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\r\n    });\r\n\r\n  if (flags.brushable) pc.brushable();\r\n  if (flags.reorderable) pc.reorderable();\r\n  if (pc.brushMode() !== 'None') {\r\n    const mode = pc.brushMode();\r\n    pc.brushMode('None');\r\n    pc.brushMode(mode);\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default updateAxes;\r\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\r\nconst getRange = config => {\r\n  const h = config.height - config.margin.top - config.margin.bottom;\r\n\r\n  if (config.nullValueSeparator == 'bottom') {\r\n    return [\r\n      h +\r\n        1 -\r\n        config.nullValueSeparatorPadding.bottom -\r\n        config.nullValueSeparatorPadding.top,\r\n      1,\r\n    ];\r\n  } else if (config.nullValueSeparator == 'top') {\r\n    return [\r\n      h + 1,\r\n      1 +\r\n        config.nullValueSeparatorPadding.bottom +\r\n        config.nullValueSeparatorPadding.top,\r\n    ];\r\n  }\r\n  return [h + 1, 1];\r\n};\r\n\r\nexport default getRange;\r\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\r\nimport { extent } from 'd3-array';\r\n\r\nimport getRange from '../util/getRange';\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\nconst autoscale = (config, pc, xscale, ctx) =>\r\n  function() {\r\n    // yscale\r\n    const defaultScales = {\r\n      date: function(k) {\r\n        let _extent = extent(config.data, d => (d[k] ? d[k].getTime() : null));\r\n        // special case if single value\r\n        if (_extent[0] === _extent[1]) {\r\n          return scalePoint()\r\n            .domain(_extent)\r\n            .range(getRange(config));\r\n        }\r\n        if (config.flipAxes.includes(k)) {\r\n          _extent = _extent.map(val => tempDate.unshift(val));\r\n        }\r\n        return scaleTime()\r\n          .domain(_extent)\r\n          .range(getRange(config));\r\n      },\r\n      number: function(k) {\r\n        let _extent = extent(config.data, d => +d[k]);\r\n        // special case if single value\r\n        if (_extent[0] === _extent[1]) {\r\n          return scalePoint()\r\n            .domain(_extent)\r\n            .range(getRange(config));\r\n        }\r\n        if (config.flipAxes.includes(k)) {\r\n          _extent = _extent.map(val => tempDate.unshift(val));\r\n        }\r\n        return scaleLinear()\r\n          .domain(_extent)\r\n          .range(getRange(config));\r\n      },\r\n      string: function(k) {\r\n        let counts = {},\r\n          domain = [];\r\n        // Let's get the count for each value so that we can sort the domain based\r\n        // on the number of items for each value.\r\n        config.data.map(p => {\r\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\r\n            return null; // null values will be drawn beyond the horizontal null value separator!\r\n          }\r\n          if (counts[p[k]] === undefined) {\r\n            counts[p[k]] = 1;\r\n          } else {\r\n            counts[p[k]] = counts[p[k]] + 1;\r\n          }\r\n        });\r\n        if (config.flipAxes.includes(k)) {\r\n          domain = Object.getOwnPropertyNames(counts).sort();\r\n        } else {\r\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\r\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\r\n            domain.push(tempArr.pop());\r\n          }\r\n        }\r\n\r\n        //need to create an ordinal scale for categorical data\r\n        let categoricalRange = [];\r\n        if (domain.length === 1) {\r\n          //edge case\r\n          domain = [' ', domain[0], ' '];\r\n        }\r\n        let addBy = getRange(config)[0] / (domain.length - 1);\r\n        for (let j = 0; j < domain.length; j++) {\r\n          if (categoricalRange.length === 0) {\r\n            categoricalRange.push(0);\r\n            continue;\r\n          }\r\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\r\n        }\r\n        return scaleOrdinal()\r\n          .domain(domain)\r\n          .range(categoricalRange);\r\n      },\r\n    };\r\n    Object.keys(config.dimensions).forEach(function(k) {\r\n      if (\r\n        config.dimensions[k].yscale === undefined ||\r\n        config.dimensions[k].yscale === null\r\n      ) {\r\n        config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](\r\n          k\r\n        );\r\n      }\r\n    });\r\n\r\n    // xscale\r\n    xscale.range([0, w(config)], 1);\r\n    // Retina display, etc.\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n    // canvas sizes\r\n    pc.selection\r\n      .selectAll('canvas')\r\n      .style('margin-top', config.margin.top + 'px')\r\n      .style('margin-left', config.margin.left + 'px')\r\n      .style('width', w(config) + 2 + 'px')\r\n      .style('height', h(config) + 2 + 'px')\r\n      .attr('width', (w(config) + 2) * devicePixelRatio)\r\n      .attr('height', (h(config) + 2) * devicePixelRatio);\r\n    // default styles, needs to be set when canvas width changes\r\n    ctx.foreground.strokeStyle = config.color;\r\n    ctx.foreground.lineWidth = config.lineWidth;\r\n    ctx.foreground.globalCompositeOperation = config.composite;\r\n    ctx.foreground.globalAlpha = config.alpha;\r\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.brushed.strokeStyle = config.brushedColor;\r\n    ctx.brushed.lineWidth = config.lineWidth;\r\n    ctx.brushed.globalCompositeOperation = config.composite;\r\n    ctx.brushed.globalAlpha = config.alpha;\r\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.highlight.lineWidth = config.highlightedLineWidth;\r\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.marked.lineWidth = config.markedLineWidth;\r\n    ctx.marked.shadowColor = config.markedShadowColor;\r\n    ctx.marked.shadowBlur = config.markedShadowBlur;\r\n    ctx.marked.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    return this;\r\n  };\r\n\r\nexport default autoscale;\r\n","import { brushSelection, brushY } from 'd3-brush';\r\nimport { event, select } from 'd3-selection';\r\n\r\nconst brushable = (config, pc, flags) =>\r\n  function() {\r\n    if (!pc.g()) {\r\n      pc.createAxes();\r\n    }\r\n\r\n    const g = pc.g();\r\n\r\n    // Add and store a brush for each axis.\r\n    g.append('svg:g')\r\n      .attr('class', 'brush')\r\n      .each(function(d) {\r\n        if (config.dimensions[d] !== undefined) {\r\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\r\n            [-15, 0],\r\n            [15, config.dimensions[d].yscale.range()[0]],\r\n          ]);\r\n          select(this).call(\r\n            config.dimensions[d]['brush']\r\n              .on('start', function() {\r\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\r\n                  pc.brushReset();\r\n                }\r\n              })\r\n              .on('brush', function() {\r\n                if (!event.sourceEvent.ctrlKey) {\r\n                  pc.brush();\r\n                }\r\n              })\r\n              .on('end', function() {\r\n                // save brush selection is ctrl key is held\r\n                // store important brush information and\r\n                // the html element of the selection,\r\n                // to make a dummy selection element\r\n                if (event.sourceEvent.ctrlKey) {\r\n                  let html = select(this)\r\n                    .select('.selection')\r\n                    .nodes()[0].outerHTML;\r\n                  html = html.replace(\r\n                    'class=\"selection\"',\r\n                    'class=\"selection dummy' +\r\n                      ' selection-' +\r\n                      config.brushes.length +\r\n                      '\"'\r\n                  );\r\n                  let dat = select(this).nodes()[0].__data__;\r\n                  let brush = {\r\n                    id: config.brushes.length,\r\n                    extent: brushSelection(this),\r\n                    html: html,\r\n                    data: dat,\r\n                  };\r\n                  config.brushes.push(brush);\r\n                  select(select(this).nodes()[0].parentNode)\r\n                    .select('.axis')\r\n                    .nodes()[0].outerHTML += html;\r\n                  pc.brush();\r\n                  config.dimensions[d].brush.move(select(this, null));\r\n                  select(this)\r\n                    .select('.selection')\r\n                    .attr('style', 'display:none');\r\n                  pc.brushable();\r\n                } else {\r\n                  pc.brush();\r\n                }\r\n              })\r\n          );\r\n          select(this).on('dblclick', function() {\r\n            pc.brushReset(d);\r\n          });\r\n        }\r\n      });\r\n\r\n    flags.brushable = true;\r\n    return this;\r\n  };\r\n\r\nexport default brushable;\r\n","import { extent } from 'd3-array';\r\n\r\nconst commonScale = (config, pc) =>\r\n  function(global, type) {\r\n    const t = type || 'number';\r\n    if (typeof global === 'undefined') {\r\n      global = true;\r\n    }\r\n\r\n    // try to autodetect dimensions and create scales\r\n    if (!Object.keys(config.dimensions).length) {\r\n      pc.detectDimensions();\r\n    }\r\n    pc.autoscale();\r\n\r\n    // scales of the same type\r\n    const scales = Object.keys(config.dimensions).filter(\r\n      p => config.dimensions[p].type == t\r\n    );\r\n\r\n    if (global) {\r\n      let _extent = extent(\r\n        scales\r\n          .map(d => config.dimensions[d].yscale.domain())\r\n          .reduce((cur, acc) => cur.concat(acc))\r\n      );\r\n\r\n      scales.forEach(d => {\r\n        config.dimensions[d].yscale.domain(_extent);\r\n      });\r\n    } else {\r\n      scales.forEach(d => {\r\n        config.dimensions[d].yscale.domain(extent(config.data, d => +d[k]));\r\n      });\r\n    }\r\n\r\n    // update centroids\r\n    if (config.bundleDimension !== null) {\r\n      pc.bundleDimension(config.bundleDimension);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\nexport default commonScale;\r\n","const computeRealCentroids = (dimensions, position) => row =>\r\n  Object.keys(dimensions).map(d => {\r\n    const x = position(d);\r\n    const y = dimensions[d].yscale(row[d]);\r\n    return [x, y];\r\n  });\r\n\r\nexport default computeRealCentroids;\r\n","const isValid = d => d !== null && d !== undefined;\r\n\r\nconst applyDimensionDefaults = (config, pc) =>\r\n  function(dims) {\r\n    const types = pc.detectDimensionTypes(config.data);\r\n    dims = dims ? dims : Object.keys(types);\r\n\r\n    return dims.reduce((acc, cur, i) => {\r\n      const k = config.dimensions[cur] ? config.dimensions[cur] : {};\r\n      acc[cur] = {\r\n        ...k,\r\n        orient: isValid(k.orient) ? k.orient : 'left',\r\n        ticks: isValid(k.ticks) ? k.ticks : 5,\r\n        innerTickSize: isValid(k.innerTickSize) ? k.innerTickSize : 6,\r\n        outerTickSize: isValid(k.outerTickSize) ? k.outerTickSize : 0,\r\n        tickPadding: isValid(k.tickPadding) ? k.tickPadding : 3,\r\n        type: isValid(k.type) ? k.type : types[cur],\r\n        index: isValid(k.index) ? k.index : i,\r\n      };\r\n\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\nexport default applyDimensionDefaults;\r\n","import { select } from 'd3-selection';\r\n\r\nimport dimensionLabels from '../util/dimensionLabels';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\nimport rotateLabels from '../util/rotateLabels';\r\n\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\n/**\r\n * Create static SVG axes with dimension names, ticks, and labels.\r\n *\r\n * @param config\r\n * @param pc\r\n * @param xscale\r\n * @param flags\r\n * @param axis\r\n * @returns {Function}\r\n */\r\nconst createAxes = (config, pc, xscale, flags, axis) =>\r\n  function() {\r\n    if (pc.g() !== undefined) {\r\n      pc.removeAxes();\r\n    }\r\n    // Add a group element for each dimension.\r\n    pc._g = pc.svg\r\n      .selectAll('.dimension')\r\n      .data(pc.getOrderedDimensionKeys(), function(d) {\r\n        return d;\r\n      })\r\n      .enter()\r\n      .append('svg:g')\r\n      .attr('class', 'dimension')\r\n      .attr('transform', function(d) {\r\n        return 'translate(' + xscale(d) + ')';\r\n      });\r\n    // Add an axis and title.\r\n    pc._g\r\n      .append('svg:g')\r\n      .attr('class', 'axis')\r\n      .attr('transform', 'translate(0,0)')\r\n      .each(function(d) {\r\n        let axisElement = select(this).call(\r\n          pc.applyAxisConfig(axis, config.dimensions[d])\r\n        );\r\n\r\n        axisElement\r\n          .selectAll('path')\r\n          .style('fill', 'none')\r\n          .style('stroke', '#222')\r\n          .style('shape-rendering', 'crispEdges');\r\n\r\n        axisElement\r\n          .selectAll('line')\r\n          .style('fill', 'none')\r\n          .style('stroke', '#222')\r\n          .style('shape-rendering', 'crispEdges');\r\n      })\r\n\r\n      .append('svg:text')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('y', 0)\r\n      .attr(\r\n        'transform',\r\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n      )\r\n      .attr('x', 0)\r\n      .attr('class', 'label')\r\n      .text(dimensionLabels(config))\r\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\r\n      .on('wheel', rotateLabels(config, pc));\r\n\r\n    if (config.nullValueSeparator === 'top') {\r\n      pc.svg\r\n        .append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\r\n        .attr('x2', w(config))\r\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\r\n        .attr('stroke-width', 1)\r\n        .attr('stroke', '#777')\r\n        .attr('fill', 'none')\r\n        .attr('shape-rendering', 'crispEdges');\r\n    } else if (config.nullValueSeparator === 'bottom') {\r\n      pc.svg\r\n        .append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\r\n        .attr('x2', w(config))\r\n        .attr('y2', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\r\n        .attr('stroke-width', 1)\r\n        .attr('stroke', '#777')\r\n        .attr('fill', 'none')\r\n        .attr('shape-rendering', 'crispEdges');\r\n    }\r\n\r\n    flags.axes = true;\r\n    return this;\r\n  };\r\n\r\nexport default createAxes;\r\n","import { entries } from 'd3-collection';\r\nimport { min } from 'd3-array';\r\n\r\n//draw dots with radius r on the axis line where data intersects\r\nconst axisDots = (config, pc, position) => _r => {\r\n  const r = _r || 0.1;\r\n  const ctx = pc.ctx.dots;\r\n  const startAngle = 0;\r\n  const endAngle = 2 * Math.PI;\r\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\r\n  config.data.forEach(d => {\r\n    entries(config.dimensions).forEach((p, i) => {\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        position(p),\r\n        config.dimensions[p.key].yscale(d[p]),\r\n        r,\r\n        startAngle,\r\n        endAngle\r\n      );\r\n      ctx.stroke();\r\n      ctx.fill();\r\n    });\r\n  });\r\n  return this;\r\n};\r\n\r\nexport default axisDots;\r\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\r\n\r\nconst applyAxisConfig = (axis, dimension) => {\r\n  let axisCfg;\r\n\r\n  switch (dimension.orient) {\r\n    case 'left':\r\n      axisCfg = axisLeft(dimension.yscale);\r\n      break;\r\n    case 'right':\r\n      axisCfg = axisRight(dimension.yscale);\r\n      break;\r\n    case 'top':\r\n      axisCfg = axisTop(dimension.yscale);\r\n      break;\r\n    case 'bottom':\r\n      axisCfg = axisBottom(dimension.yscale);\r\n      break;\r\n    default:\r\n      axisCfg = axisLeft(dimension.yscale);\r\n      break;\r\n  }\r\n\r\n  axisCfg\r\n    .ticks(dimension.ticks)\r\n    .tickValues(dimension.tickValues)\r\n    .tickSizeInner(dimension.innerTickSize)\r\n    .tickSizeOuter(dimension.outerTickSize)\r\n    .tickPadding(dimension.tickPadding)\r\n    .tickFormat(dimension.tickFormat);\r\n\r\n  return axisCfg;\r\n};\r\n\r\nexport default applyAxisConfig;\r\n","import { drag } from 'd3-drag';\r\nimport { event, select } from 'd3-selection';\r\n\r\nimport w from '../util/width';\r\n\r\n// Jason Davies, http://bl.ocks.org/1341281\r\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\r\n  function() {\r\n    if (pc.g() === undefined) pc.createAxes();\r\n    const g = pc.g();\r\n\r\n    g.style('cursor', 'move').call(\r\n      drag()\r\n        .on('start', function(d) {\r\n          dragging[d] = this.__origin__ = xscale(d);\r\n        })\r\n        .on('drag', function(d) {\r\n          dragging[d] = Math.min(\r\n            w(config),\r\n            Math.max(0, (this.__origin__ += event.dx))\r\n          );\r\n          pc.sortDimensions();\r\n          xscale.domain(pc.getOrderedDimensionKeys());\r\n          pc.render();\r\n          g.attr('transform', d => 'translate(' + position(d) + ')');\r\n        })\r\n        .on('end', function(d) {\r\n          delete this.__origin__;\r\n          delete dragging[d];\r\n          select(this)\r\n            .transition()\r\n            .attr('transform', 'translate(' + xscale(d) + ')');\r\n          pc.render();\r\n          pc.renderMarked();\r\n        })\r\n    );\r\n    flags.reorderable = true;\r\n    return this;\r\n  };\r\n\r\nexport default reorderable;\r\n","// rescale for height, width and margins\r\n// TODO currently assumes chart is brushable, and destroys old brushes\r\nconst resize = (config, pc, flags, events) => {\r\n  return function() {\r\n    // selection size\r\n    pc.selection\r\n      .select('svg')\r\n      .attr('width', config.width)\r\n      .attr('height', config.height);\r\n    pc.svg.attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n    // FIXME: the current brush state should pass through\r\n    if (flags.brushable) pc.brushReset();\r\n\r\n    // scales\r\n    pc.autoscale();\r\n\r\n    // axes, destroys old brushes.\r\n    if (pc.g()) pc.createAxes();\r\n    if (flags.brushable) pc.brushable();\r\n    if (flags.reorderable) pc.reorderable();\r\n\r\n    events.call('resize', this, {\r\n      width: config.width,\r\n      height: config.height,\r\n      margin: config.margin,\r\n    });\r\n\r\n    return this;\r\n  };\r\n};\r\n\r\nexport default resize;\r\n","// Reorder dimensions, such that the highest value (visually) is on the left and\r\n// the lowest on the right. Visual values are determined by the data values in\r\n// the given row.\r\nconst reorder = (config, pc, xscale) => rowdata => {\r\n  const firstDim = pc.getOrderedDimensionKeys()[0];\r\n\r\n  pc.sortDimensionsByRowData(rowdata);\r\n  // NOTE: this is relatively cheap given that:\r\n  // number of dimensions < number of data items\r\n  // Thus we check equality of order to prevent rerendering when this is the case.\r\n  const reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\r\n\r\n  if (reordered) {\r\n    xscale.domain(pc.getOrderedDimensionKeys());\r\n    const highlighted = config.highlighted.slice(0);\r\n    pc.unhighlight();\r\n\r\n    const marked = config.marked.slice(0);\r\n    pc.unmark();\r\n\r\n    const g = pc.g();\r\n    g.transition()\r\n      .duration(1500)\r\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\r\n    pc.render();\r\n\r\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\r\n    if (highlighted.length !== 0) {\r\n      pc.highlight(highlighted);\r\n    }\r\n    if (marked.length !== 0) {\r\n      pc.mark(marked);\r\n    }\r\n  }\r\n};\r\n\r\nexport default reorder;\r\n","const sortDimensions = (config, position) => () => {\r\n  const copy = Object.assign({}, config.dimensions);\r\n  const positionSortedKeys = Object.keys(config.dimensions).sort(\r\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\r\n  );\r\n  config.dimensions = {};\r\n  positionSortedKeys.forEach((p, i) => {\r\n    config.dimensions[p] = copy[p];\r\n    config.dimensions[p].index = i;\r\n  });\r\n};\r\n\r\nexport default sortDimensions;\r\n","const sortDimensionsByRowData = config => rowdata => {\r\n  const copy = Object.assign({}, config.dimensions);\r\n  const positionSortedKeys = Object.keys(config.dimensions).sort((a, b) => {\r\n    const pixelDifference =\r\n      config.dimensions[a].yscale(rowdata[a]) -\r\n      config.dimensions[b].yscale(rowdata[b]);\r\n\r\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\r\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\r\n    // variable name in that case.\r\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\r\n  });\r\n  config.dimensions = {};\r\n  positionSortedKeys.forEach((p, i) => {\r\n    config.dimensions[p] = copy[p];\r\n    config.dimensions[p].index = i;\r\n  });\r\n};\r\n\r\nexport default sortDimensionsByRowData;\r\n","const isBrushed = (config, brushGroup) => {\r\n  if (config.brushed && config.brushed.length !== config.data.length)\r\n    return true;\r\n\r\n  const object = brushGroup.currentMode().brushState();\r\n\r\n  for (let key in object) {\r\n    if (object.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default isBrushed;\r\n","import isBrushed from '../util/isBrushed';\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\nconst clear = (config, pc, ctx, brushGroup) =>\r\n  function(layer) {\r\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\r\n\r\n    // This will make sure that the foreground items are transparent\r\n    // without the need for changing the opacity style of the foreground canvas\r\n    // as this would stop the css styling from working\r\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\r\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\r\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\r\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\r\n      ctx.brushed.globalAlpha = config.alpha;\r\n    }\r\n    return this;\r\n  };\r\n\r\nexport default clear;\r\n","const computeCentroids = (config, position, row) => {\r\n  const centroids = [];\r\n\r\n  const p = Object.keys(config.dimensions);\r\n  const cols = p.length;\r\n  const a = 0.5; // center between axes\r\n  for (let i = 0; i < cols; ++i) {\r\n    // centroids on 'real' axes\r\n    const x = position(p[i]);\r\n    const y = config.dimensions[p[i]].yscale(row[p[i]]);\r\n    centroids.push($V([x, y]));\r\n\r\n    // centroids on 'virtual' axes\r\n    if (i < cols - 1) {\r\n      const cx = x + a * (position(p[i + 1]) - x);\r\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\r\n      if (config.bundleDimension !== null) {\r\n        const leftCentroid = config.clusterCentroids\r\n          .get(\r\n            config.dimensions[config.bundleDimension].yscale(\r\n              row[config.bundleDimension]\r\n            )\r\n          )\r\n          .get(p[i]);\r\n        const rightCentroid = config.clusterCentroids\r\n          .get(\r\n            config.dimensions[config.bundleDimension].yscale(\r\n              row[config.bundleDimension]\r\n            )\r\n          )\r\n          .get(p[i + 1]);\r\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\r\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\r\n      }\r\n      centroids.push($V([cx, cy]));\r\n    }\r\n  }\r\n\r\n  return centroids;\r\n};\r\n\r\nexport default computeCentroids;\r\n","const computeControlPoints = (smoothness, centroids) => {\r\n  const cols = centroids.length;\r\n  const a = smoothness;\r\n  const cps = [];\r\n\r\n  cps.push(centroids[0]);\r\n  cps.push(\r\n    $V([\r\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\r\n      centroids[0].e(2),\r\n    ])\r\n  );\r\n  for (let col = 1; col < cols - 1; ++col) {\r\n    let mid = centroids[col];\r\n    let left = centroids[col - 1];\r\n    let right = centroids[col + 1];\r\n\r\n    let diff = left.subtract(right);\r\n    cps.push(mid.add(diff.x(a)));\r\n    cps.push(mid);\r\n    cps.push(mid.subtract(diff.x(a)));\r\n  }\r\n  cps.push(\r\n    $V([\r\n      centroids[cols - 1].e(1) +\r\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\r\n      centroids[cols - 1].e(2),\r\n    ])\r\n  );\r\n  cps.push(centroids[cols - 1]);\r\n\r\n  return cps;\r\n};\r\n\r\nexport default computeControlPoints;\r\n","// draw single cubic bezier curve\r\nimport computeCentroids from './computeCentroids';\r\nimport computeControlPoints from './computeControlPoints';\r\nimport h from './height';\r\n\r\nconst singleCurve = (config, position, d, ctx) => {\r\n  const centroids = computeCentroids(config, position, d);\r\n  const cps = computeControlPoints(config.smoothness, centroids);\r\n\r\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\r\n\r\n  for (let i = 1; i < cps.length; i += 3) {\r\n    if (config.showControlPoints) {\r\n      for (let j = 0; j < 3; j++) {\r\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\r\n      }\r\n    }\r\n    ctx.bezierCurveTo(\r\n      cps[i].e(1),\r\n      cps[i].e(2),\r\n      cps[i + 1].e(1),\r\n      cps[i + 1].e(2),\r\n      cps[i + 2].e(1),\r\n      cps[i + 2].e(2)\r\n    );\r\n  }\r\n};\r\n\r\n// returns the y-position just beyond the separating null value line\r\nconst getNullPosition = config => {\r\n  if (config.nullValueSeparator === 'bottom') {\r\n    return h(config) + 1;\r\n  } else if (config.nullValueSeparator === 'top') {\r\n    return 1;\r\n  } else {\r\n    console.log(\r\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\r\n    );\r\n  }\r\n  return h(config) + 1;\r\n};\r\n\r\nconst singlePath = (config, position, d, ctx) => {\r\n  Object.keys(config.dimensions)\r\n    .map(p => [\r\n      position(p),\r\n      d[p] === undefined\r\n        ? getNullPosition(config)\r\n        : config.dimensions[p].yscale(d[p]),\r\n    ])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .forEach((p, i) => {\r\n      i === 0 ? ctx.moveTo(p[0], p[1]) : ctx.lineTo(p[0], p[1]);\r\n    });\r\n};\r\n\r\n// draw single polyline\r\nconst colorPath = (config, position, d, ctx) => {\r\n  ctx.beginPath();\r\n  if (\r\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\r\n    config.smoothness > 0\r\n  ) {\r\n    singleCurve(config, position, d, ctx);\r\n  } else {\r\n    singlePath(config, position, d, ctx);\r\n  }\r\n  ctx.stroke();\r\n};\r\n\r\nexport default colorPath;\r\n","const _functor = v => (typeof v === 'function' ? v : () => v);\r\n\r\nexport default _functor;\r\n","import colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathMark = (config, ctx, position) => (d, i) => {\r\n  ctx.marked.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.marked);\r\n};\r\n\r\nconst renderMarkedDefault = (config, pc, ctx, position) => () => {\r\n  pc.clear('marked');\r\n\r\n  if (config.marked.length) {\r\n    config.marked.forEach(pathMark(config, ctx, position));\r\n  }\r\n};\r\n\r\nconst renderMarkedQueue = (config, markedQueue) => () => {\r\n  if (config.marked) {\r\n    markedQueue(config.marked);\r\n  } else {\r\n    markedQueue([]); // This is needed to clear the currently marked items\r\n  }\r\n};\r\n\r\nconst renderMarked = (config, pc, events) =>\r\n  function() {\r\n    if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n\r\n    pc.renderMarked[config.mode]();\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport { pathMark, renderMarked, renderMarkedDefault, renderMarkedQueue };\r\n","import isBrushed from '../util/isBrushed';\r\nimport colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathBrushed = (config, ctx, position) => (d, i) => {\r\n  if (config.brushedColor !== null) {\r\n    ctx.brushed.strokeStyle = functor(config.brushedColor)(d, i);\r\n  } else {\r\n    ctx.brushed.strokeStyle = functor(config.color)(d, i);\r\n  }\r\n  return colorPath(config, position, d, ctx.brushed);\r\n};\r\n\r\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\r\n  pc.clear('brushed');\r\n\r\n  if (isBrushed(config, brushGroup) && config.brushed !== false) {\r\n    config.brushed.forEach(pathBrushed(config, ctx, position));\r\n  }\r\n};\r\n\r\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\r\n  if (isBrushed(config, brushGroup)) {\r\n    brushedQueue(config.brushed);\r\n  } else {\r\n    brushedQueue([]); // This is needed to clear the currently brushed items\r\n  }\r\n};\r\n\r\nconst renderBrushed = (config, pc, events) =>\r\n  function() {\r\n    if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n\r\n    pc.renderBrushed[config.mode]();\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\r\n","import { select, selectAll } from 'd3-selection';\r\n\r\nconst brushReset = config =>\r\n  function(dimension) {\r\n    const brushesToKeep = [];\r\n    for (let j = 0; j < config.brushes.length; j++) {\r\n      if (config.brushes[j].data !== dimension) {\r\n        brushesToKeep.push(config.brushes[j]);\r\n      }\r\n    }\r\n\r\n    config.brushes = brushesToKeep;\r\n    config.brushed = false;\r\n\r\n    if (pc.g() !== undefined) {\r\n      const nodes = pc\r\n        .g()\r\n        .selectAll('.brush')\r\n        .nodes();\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].__data__ === dimension) {\r\n          // remove all dummy brushes for this axis or the real brush\r\n          select(select(nodes[i]).nodes()[0].parentNode)\r\n            .selectAll('.dummy')\r\n            .remove();\r\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\nexport default brushReset;\r\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\r\nconst toType = v => {\r\n  return {}.toString\r\n    .call(v)\r\n    .match(/\\s([a-zA-Z]+)/)[1]\r\n    .toLowerCase();\r\n};\r\n\r\nexport default toType;\r\n","// this descriptive text should live with other introspective methods\r\nconst toString = config => () =>\r\n  'Parallel Coordinates: ' +\r\n  Object.keys(config.dimensions).length +\r\n  ' dimensions (' +\r\n  Object.keys(config.data[0]).length +\r\n  ' total) , ' +\r\n  config.data.length +\r\n  ' rows';\r\n\r\nexport default toString;\r\n","// pairs of adjacent dimensions\r\nconst adjacentPairs = arr => {\r\n  let ret = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    ret.push([arr[i], arr[i + 1]]);\r\n  }\r\n  return ret;\r\n};\r\n\r\nexport default adjacentPairs;\r\n","import { selectAll } from 'd3-selection';\r\n\r\nimport colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathHighlight = (config, ctx, position) => (d, i) => {\r\n  ctx.highlight.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.highlight);\r\n};\r\n\r\n// highlight an array of data\r\nconst highlight = (config, pc, canvas, events, ctx, position) =>\r\n  function(data = null) {\r\n    if (data === null) {\r\n      return config.highlighted;\r\n    }\r\n\r\n    config.highlighted = data;\r\n    pc.clear('highlight');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\r\n    data.forEach(pathHighlight(config, ctx, position));\r\n    events.call('highlight', this, data);\r\n    return this;\r\n  };\r\n\r\nexport default highlight;\r\n","import { selectAll } from 'd3-selection';\r\n\r\n// clear highlighting\r\nconst unhighlight = (config, pc, canvas) =>\r\n  function() {\r\n    config.highlighted = [];\r\n    pc.clear('highlight');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\r\n    return this;\r\n  };\r\n\r\nexport default unhighlight;\r\n","import { selectAll } from 'd3-selection';\r\n\r\nimport { pathMark } from './renderMarked';\r\n\r\n// mark an array of data\r\nconst mark = (config, pc, canvas, events, ctx, position) =>\r\n  function(data = null) {\r\n    if (data === null) {\r\n      return config.marked;\r\n    }\r\n\r\n    // add array to already marked data\r\n    config.marked = config.marked.concat(data);\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('dimmed', true);\r\n    data.forEach(pathMark(config, ctx, position));\r\n    events.call('mark', this, data);\r\n    return this;\r\n  };\r\n\r\nexport default mark;\r\n","import { selectAll } from 'd3-selection';\r\n\r\n// clear marked data arrays\r\nconst unmark = (config, pc, canvas) =>\r\n  function() {\r\n    config.marked = [];\r\n    pc.clear('marked');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('dimmed', false);\r\n    return this;\r\n  };\r\n\r\nexport default unmark;\r\n","const removeAxes = pc =>\r\n  function() {\r\n    pc._g.remove();\r\n\r\n    delete pc._g;\r\n    return this;\r\n  };\r\n\r\nexport default removeAxes;\r\n","/**\r\n * Renders the polylines.\r\n * If no dimensions have been specified, it will attempt to detect quantitative\r\n * dimensions based on the first data entry. If scales haven't been set, it will\r\n * autoscale based on the extent for each dimension.\r\n *\r\n * @param config\r\n * @param pc\r\n * @param events\r\n * @returns {Function}\r\n */\r\nconst render = (config, pc, events) =>\r\n  function() {\r\n    // try to autodetect dimensions and create scales\r\n    if (!Object.keys(config.dimensions).length) {\r\n      pc.detectDimensions();\r\n    }\r\n    pc.autoscale();\r\n\r\n    pc.render[config.mode]();\r\n\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport default render;\r\n","import colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathForeground = (config, ctx, position) => (d, i) => {\r\n  ctx.foreground.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.foreground);\r\n};\r\n\r\nconst renderDefault = (config, pc, ctx, position) => () => {\r\n  pc.clear('foreground');\r\n  pc.clear('highlight');\r\n\r\n  pc.renderBrushed.default();\r\n  pc.renderMarked.default();\r\n\r\n  config.data.forEach(pathForeground(config, ctx, position));\r\n};\r\n\r\nconst renderDefaultQueue = (config, pc, foregroundQueue) => () => {\r\n  pc.renderBrushed.queue();\r\n  pc.renderMarked.queue();\r\n  foregroundQueue(config.data);\r\n};\r\n\r\nexport default renderDefault;\r\n\r\nexport { pathForeground, renderDefaultQueue };\r\n","import bresenham from 'bresenham';\r\nimport { scaleQuantize, scaleLinear, scaleSequential } from 'd3-scale';\r\nimport { interpolateViridis } from 'd3-scale-chromatic';\r\nimport { range, merge, max, extent } from 'd3-array';\r\nimport { nest } from 'd3-collection';\r\nimport functor from '../util/functor';\r\n\r\nconst tileForeground = (config, ctx, x, y, gw, gh, color, opacity) => {\r\n  // ctx.foreground.fillStyle = functor(config.color)(d, i);\r\n  //ctx.foreground.fillStyle = 'rgb(100, 100, 100,' + opacity + ')';\r\n  ctx.foreground.fillStyle = color;\r\n  ctx.foreground.fillRect(x, y, gw, gh);\r\n  // draw rects\r\n};\r\n\r\nconst singlePathTile = (config, pc, position) => d => {\r\n  const yrange = extent(\r\n    config.dimensions[Object.keys(config.dimensions)[0]].yscale.range()\r\n  );\r\n  const height = Math.abs(yrange[0] - yrange[1]);\r\n  const points = Object.keys(config.dimensions)\r\n    .map(p => [\r\n      position(p),\r\n      d[p] === undefined\r\n        ? getNullPosition(config)\r\n        : config.dimensions[p].yscale(d[p]),\r\n    ])\r\n    .sort((a, b) => a[0] - b[0]);\r\n\r\n  let bres_grid = [];\r\n  points.forEach((p, i) => {\r\n    if (i === points.length - 1) {\r\n      return;\r\n    }\r\n\r\n    const p2 = points[i + 1];\r\n    const width = pc.xscale.step();\r\n    const resolution = config.resolution || 20;\r\n    const gridh = height / resolution;\r\n    const dim = Object.keys(config.dimensions).filter(\r\n      d => config.dimensions[d].index === i\r\n    )[0];\r\n    const dim2 = Object.keys(config.dimensions).filter(\r\n      d => config.dimensions[d].index === i + 1\r\n    )[0];\r\n    let scalegx = scaleQuantize();\r\n    let scalegy = scaleQuantize();\r\n\r\n    scalegx\r\n      .domain([pc.xscale(dim), pc.xscale(dim2)])\r\n      .range(range(0, width / gridh));\r\n    scalegy.domain([0, height]).range(range(resolution));\r\n\r\n    let bres = bresenham(\r\n      scalegx(p[0]),\r\n      scalegy(p[1]),\r\n      scalegx(p2[0]),\r\n      scalegy(p2[1])\r\n    );\r\n    bres_grid.push(\r\n      bres.map(d => {\r\n        return { x: scalegx.invertExtent(d.x), y: scalegy.invertExtent(d.y) };\r\n      })\r\n    );\r\n  });\r\n\r\n  return bres_grid;\r\n};\r\n\r\nconst aggregatePoints = (config, data, pc, position) => {\r\n  const points = data.map(singlePathTile(config, pc, position));\r\n  const gw = Math.abs(points[0][0][0].x[1] - points[0][0][0].x[0]);\r\n  const gh = Math.abs(points[0][0][0].y[1] - points[0][0][0].y[0]);\r\n\r\n  let points_collector = [];\r\n  points.forEach(d =>\r\n    d.forEach(dd => dd.forEach(ddd => points_collector.push(ddd)))\r\n  );\r\n  // will need to nest aggregate and apply color/opacity\r\n  debugger;\r\n  const grid_aggregate = nest()\r\n    .key(d => d.x[0])\r\n    .key(d => d.y[0])\r\n    .rollup(d => d.length)\r\n    .map(points_collector);\r\n    return {\r\n      grid_aggregate: grid_aggregate,\r\n      gw: gw,\r\n      gh: gh\r\n    };\r\n}\r\n\r\nconst renderTiled = (config, pc, ctx, position) => () => {\r\n  pc.clear('foreground');\r\n  pc.clear('highlight');\r\n\r\n  if(pc.brushed()) {\r\n    pc.renderBrushed.tiled();\r\n    return;\r\n  }\r\n  //pc.renderMarked.default();\r\n\r\n  const aggregated = aggregatePoints(config, config.data, pc, position);\r\n  const grid_aggregate = aggregated.grid_aggregate;\r\n  const gw = aggregated.gw;\r\n  const gh = aggregated.gh;\r\n  const max_count = max(merge(grid_aggregate.values().map(d => d.values())));\r\n\r\n  //const scale_opacity = scaleLinear().domain([0, max_count]);\r\n  const scale_normalize = scaleLinear().domain([0, max_count]);\r\n  grid_aggregate.entries().forEach(d => {\r\n    d.value.entries().forEach(y => {\r\n      //tileForeground( config, ctx, +d.key, +y.key, gw, gh, scale_opacity(y.value) )\r\n      tileForeground(\r\n        config,\r\n        ctx,\r\n        +d.key,\r\n        +y.key,\r\n        gw,\r\n        gh,\r\n        interpolateViridis(scale_normalize(y.value))\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nconst renderTiledQueue = (config, pc, foregroundQueue) => () => {\r\n  //pc.renderBrushed.queue();\r\n  //pc.renderMarked.queue();\r\n  foregroundQueue(config.data);\r\n};\r\n\r\nexport default renderTiled;\r\n\r\nexport { tileForeground, singlePathTile, renderTiledQueue, aggregatePoints };\r\n","import { aggregatePoints } from './renderTiled';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { interpolateViridis } from 'd3-scale-chromatic';\r\nimport { max, merge } from 'd3-array';\r\n\r\nconst tileForegroundBrushed = (config, ctx, x, y, gw, gh, color, opacity) => {\r\n  // ctx.foreground.fillStyle = functor(config.color)(d, i);\r\n  //ctx.foreground.fillStyle = 'rgb(100, 100, 100,' + opacity + ')';\r\n  ctx.brushed.fillStyle = color;\r\n  ctx.brushed.fillRect(x, y, gw, gh);\r\n  // draw rects\r\n};\r\n\r\nconst renderTiledBrushed = (config, pc, ctx, position) => () => {\r\n  pc.clear('brushed');\r\n\r\n  //pc.renderBrushed.default();\r\n  //pc.renderMarked.default();\r\n\r\n  const aggregated = aggregatePoints(config, config.brushed, pc, position);\r\n  const grid_aggregate = aggregated.grid_aggregate;\r\n  const gw = aggregated.gw;\r\n  const gh = aggregated.gh;\r\n  const max_count = max(merge(grid_aggregate.values().map(d => d.values())));\r\n\r\n  //const scale_opacity = scaleLinear().domain([0, max_count]);\r\n  const scale_normalize = scaleLinear().domain([0, max_count]);\r\n  grid_aggregate.entries().forEach(d => {\r\n    d.value.entries().forEach(y => {\r\n      //tileForeground( config, ctx, +d.key, +y.key, gw, gh, scale_opacity(y.value) )\r\n      tileForegroundBrushed(\r\n        config,\r\n        ctx,\r\n        +d.key,\r\n        +y.key,\r\n        gw,\r\n        gh,\r\n        interpolateViridis(scale_normalize(y.value))\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nexport default renderTiledBrushed;\r\n","import toType from './toType';\r\n\r\n// try to coerce to number before returning type\r\nconst toTypeCoerceNumbers = v =>\r\n  parseFloat(v) == v && v !== null ? 'number' : toType(v);\r\n\r\nexport default toTypeCoerceNumbers;\r\n","import toTypeCoerceNumbers from './toTypeCoerceNumbers';\r\n\r\n// attempt to determine types of each dimension based on first row of data\r\nconst detectDimensionTypes = data =>\r\n  Object.keys(data[0]).reduce((acc, cur) => {\r\n    const key = isNaN(Number(cur)) ? cur : parseInt(cur);\r\n    acc[key] = toTypeCoerceNumbers(data[0][cur]);\r\n\r\n    return acc;\r\n  }, {});\r\n\r\nexport default detectDimensionTypes;\r\n","import { ascending } from 'd3-array';\r\n\r\nconst getOrderedDimensionKeys = config => () =>\r\n  Object.keys(config.dimensions).sort((x, y) =>\r\n    ascending(config.dimensions[x].index, config.dimensions[y].index)\r\n  );\r\n\r\nexport default getOrderedDimensionKeys;\r\n","const interactive = flags =>\r\n  function() {\r\n    flags.interactive = true;\r\n    return this;\r\n  };\r\n\r\nexport default interactive;\r\n","const shadows = (flags, pc) =>\r\n  function() {\r\n    flags.shadows = true;\r\n    pc.alphaOnBrushed(0.1);\r\n    pc.render();\r\n    return this;\r\n  };\r\n\r\nexport default shadows;\r\n","import { select } from 'd3-selection';\r\n\r\n/**\r\n * Setup a new parallel coordinates chart.\r\n *\r\n * @param config\r\n * @param canvas\r\n * @param ctx\r\n * @returns {pc} a parcoords closure\r\n */\r\nconst init = (config, canvas, ctx) => {\r\n  /**\r\n   * Create the chart within a container. The selector can also be a d3 selection.\r\n   *\r\n   * @param selection a d3 selection\r\n   * @returns {pc} instance for chained api\r\n   */\r\n  const pc = function(selection) {\r\n    selection = pc.selection = select(selection);\r\n\r\n    config.width = selection.node().clientWidth;\r\n    config.height = selection.node().clientHeight;\r\n    // canvas data layers\r\n    ['dots', 'foreground', 'brushed', 'marked', 'highlight'].forEach(layer => {\r\n      canvas[layer] = selection\r\n        .append('canvas')\r\n        .attr('class', layer)\r\n        .node();\r\n      ctx[layer] = canvas[layer].getContext('2d');\r\n    });\r\n\r\n    // svg tick and brush layers\r\n    pc.svg = selection\r\n      .append('svg')\r\n      .attr('width', config.width)\r\n      .attr('height', config.height)\r\n      .style('font', '14px sans-serif')\r\n      .style('position', 'absolute')\r\n\r\n      .append('svg:g')\r\n      .attr(\r\n        'transform',\r\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n      );\r\n    // for chained api\r\n    return pc;\r\n  };\r\n\r\n  // for partial-application style programming\r\n  return pc;\r\n};\r\n\r\nexport default init;\r\n","const flip = config =>\r\n  function(d) {\r\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\r\n    config.dimensions[d].yscale.domain(\r\n      config.dimensions[d].yscale.domain().reverse()\r\n    ); // works\r\n\r\n    return this;\r\n  };\r\n\r\nexport default flip;\r\n","const detectDimensions = pc =>\r\n  function() {\r\n    pc.dimensions(pc.applyDimensionDefaults());\r\n    return this;\r\n  };\r\n\r\nexport default detectDimensions;\r\n","const scale = (config, pc) =>\r\n  function(d, domain) {\r\n    config.dimensions[d].yscale.domain(domain);\r\n    pc.render.default();\r\n    pc.updateAxes();\r\n\r\n    return this;\r\n  };\r\n\r\nexport default scale;\r\n","import { matchArray } from 'searchjs';\r\n\r\nconst filterUpdated = (config, pc, events) => newSelection => {\r\n  config.brushed = newSelection;\r\n  //events.call('filter', pc, config.brushed);\r\n  pc.renderBrushed();\r\n};\r\n\r\n// filter data much like a brush but from outside of the chart\r\nconst filter = (config, pc, events) =>\r\n  function(filters = null) {\r\n    // will reset if null which goes against most of the API\r\n    //   need to think this through but maybe provide filterReset like brushReset\r\n    //   as a better alternative\r\n    config.filters = filters;\r\n    filterUpdated(config, pc, events)(pc.selected());\r\n\r\n    return this;\r\n  };\r\n\r\nexport default filter;","const DefaultConfig = {\r\n  data: [],\r\n  highlighted: [],\r\n  marked: [],\r\n  dimensions: {},\r\n  dimensionTitleRotation: 0,\r\n  brushes: [],\r\n  brushed: false,\r\n  brushedColor: null,\r\n  alphaOnBrushed: 0.0,\r\n  lineWidth: 1.4,\r\n  highlightedLineWidth: 3,\r\n  mode: 'default',\r\n  markedLineWidth: 3,\r\n  markedShadowColor: '#ffffff',\r\n  markedShadowBlur: 10,\r\n  rate: 20,\r\n  width: 600,\r\n  height: 300,\r\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\r\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\r\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\r\n  color: '#069',\r\n  composite: 'source-over',\r\n  alpha: 0.7,\r\n  bundlingStrength: 0.5,\r\n  bundleDimension: null,\r\n  smoothness: 0.0,\r\n  showControlPoints: false,\r\n  hideAxis: [],\r\n  flipAxes: [],\r\n  animationTime: 1100, // How long it takes to flip the axis when you double click\r\n  rotateLabels: false,\r\n  resolution: false,\r\n  filters: null\r\n};\r\n\r\nexport default DefaultConfig;\r\n","import { entries, keys } from 'd3-collection';\r\nimport { axisLeft } from 'd3-axis';\r\nimport { dispatch } from 'd3-dispatch';\r\nimport { scalePoint } from 'd3-scale';\r\n\r\nimport DefaultConfig from './defaultConfig';\r\n\r\nconst initState = userConfig => {\r\n  const config = Object.assign({}, DefaultConfig, userConfig);\r\n\r\n  if (userConfig && userConfig.dimensionTitles) {\r\n    console.warn(\r\n      'dimensionTitles passed in userConfig is deprecated. Add title to dimension object.'\r\n    );\r\n    entries(userConfig.dimensionTitles).forEach(d => {\r\n      if (config.dimensions[d.key]) {\r\n        config.dimensions[d.key].title = config.dimensions[d.key].title\r\n          ? config.dimensions[d.key].title\r\n          : d.value;\r\n      } else {\r\n        config.dimensions[d.key] = {\r\n          title: d.value,\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  const eventTypes = [\r\n    'render',\r\n    'resize',\r\n    'highlight',\r\n    'mark',\r\n    'brush',\r\n    'brushend',\r\n    'brushstart',\r\n    'axesreorder',\r\n  ].concat(keys(config));\r\n\r\n  const events = dispatch.apply(this, eventTypes),\r\n    flags = {\r\n      brushable: false,\r\n      reorderable: false,\r\n      axes: false,\r\n      interactive: false,\r\n      debug: false,\r\n    },\r\n    xscale = scalePoint(),\r\n    dragging = {},\r\n    axis = axisLeft().ticks(5),\r\n    ctx = {},\r\n    canvas = {};\r\n\r\n  const brush = {\r\n    modes: {\r\n      None: {\r\n        install: function(pc) {}, // Nothing to be done.\r\n        uninstall: function(pc) {}, // Nothing to be done.\r\n        selected: function() {\r\n          return [];\r\n        }, // Nothing to return\r\n        brushState: function() {\r\n          return {};\r\n        },\r\n      },\r\n    },\r\n    mode: 'None',\r\n    predicate: 'AND',\r\n    currentMode: function() {\r\n      return this.modes[this.mode];\r\n    },\r\n  };\r\n\r\n  return {\r\n    config,\r\n    events,\r\n    eventTypes,\r\n    flags,\r\n    xscale,\r\n    dragging,\r\n    axis,\r\n    ctx,\r\n    canvas,\r\n    brush,\r\n  };\r\n};\r\n\r\nexport default initState;\r\n","const computeClusterCentroids = (config, d) => {\r\n  const clusterCentroids = new Map();\r\n  const clusterCounts = new Map();\r\n  // determine clusterCounts\r\n  config.data.forEach(function(row) {\r\n    let scaled = config.dimensions[d].yscale(row[d]);\r\n    if (!clusterCounts.has(scaled)) {\r\n      clusterCounts.set(scaled, 0);\r\n    }\r\n    let count = clusterCounts.get(scaled);\r\n    clusterCounts.set(scaled, count + 1);\r\n  });\r\n\r\n  config.data.forEach(function(row) {\r\n    Object.keys(config.dimensions).map(p => {\r\n      let scaled = config.dimensions[d].yscale(row[d]);\r\n      if (!clusterCentroids.has(scaled)) {\r\n        const _map = new Map();\r\n        clusterCentroids.set(scaled, _map);\r\n      }\r\n      if (!clusterCentroids.get(scaled).has(p)) {\r\n        clusterCentroids.get(scaled).set(p, 0);\r\n      }\r\n      let value = clusterCentroids.get(scaled).get(p);\r\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\r\n      clusterCentroids.get(scaled).set(p, value);\r\n    });\r\n  });\r\n\r\n  return clusterCentroids;\r\n};\r\n\r\nexport default computeClusterCentroids;\r\n","// side effects for setters\r\nimport { dispatch } from 'd3-dispatch';\r\nimport computeClusterCentroids from '../util/computeClusterCentroids';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\n\r\nconst without = (arr, items) => {\r\n  items.forEach(el => {\r\n    delete arr[el];\r\n  });\r\n  return arr;\r\n};\r\n\r\nconst sideEffects = (\r\n  config,\r\n  ctx,\r\n  pc,\r\n  xscale,\r\n  flags,\r\n  brushedQueue,\r\n  markedQueue,\r\n  foregroundQueue\r\n) =>\r\n  dispatch\r\n    .apply(this, Object.keys(config))\r\n    .on('composite', d => {\r\n      ctx.foreground.globalCompositeOperation = d.value;\r\n      ctx.brushed.globalCompositeOperation = d.value;\r\n    })\r\n    .on('alpha', d => {\r\n      ctx.foreground.globalAlpha = d.value;\r\n      ctx.brushed.globalAlpha = d.value;\r\n    })\r\n    .on('brushedColor', d => {\r\n      ctx.brushed.strokeStyle = d.value;\r\n    })\r\n    .on('width', d => pc.resize())\r\n    .on('height', d => pc.resize())\r\n    .on('margin', d => pc.resize())\r\n    .on('rate', d => {\r\n      brushedQueue.rate(d.value);\r\n      markedQueue.rate(d.value);\r\n      foregroundQueue.rate(d.value);\r\n    })\r\n    .on('dimensions', d => {\r\n      config.dimensions = pc.applyDimensionDefaults(Object.keys(d.value));\r\n      xscale.domain(pc.getOrderedDimensionKeys());\r\n      pc.sortDimensions();\r\n      if (flags.interactive) {\r\n        pc.render().updateAxes();\r\n      }\r\n    })\r\n    .on('bundleDimension', d => {\r\n      if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n      pc.autoscale();\r\n      if (typeof d.value === 'number') {\r\n        if (d.value < Object.keys(config.dimensions).length) {\r\n          config.bundleDimension = config.dimensions[d.value];\r\n        } else if (d.value < config.hideAxis.length) {\r\n          config.bundleDimension = config.hideAxis[d.value];\r\n        }\r\n      } else {\r\n        config.bundleDimension = d.value;\r\n      }\r\n\r\n      config.clusterCentroids = computeClusterCentroids(\r\n        config,\r\n        config.bundleDimension\r\n      );\r\n      if (flags.interactive) {\r\n        pc.render();\r\n      }\r\n    })\r\n    .on('hideAxis', d => {\r\n      pc.dimensions(pc.applyDimensionDefaults());\r\n      pc.dimensions(without(config.dimensions, d.value));\r\n    })\r\n    .on('flipAxes', d => {\r\n      if (d.value && d.value.length) {\r\n        d.value.forEach(function(axis) {\r\n          flipAxisAndUpdatePCP(config, pc, axis);\r\n        });\r\n        pc.updateAxes(0);\r\n      }\r\n    });\r\n\r\nexport default sideEffects;\r\n","const getset = (obj, state, events, side_effects) => {\r\n  Object.keys(state).forEach(function(key) {\r\n    obj[key] = function(x) {\r\n      if (!arguments.length) {\r\n        return state[key];\r\n      }\r\n      if (\r\n        key === 'dimensions' &&\r\n        Object.prototype.toString.call(x) === '[object Array]'\r\n      ) {\r\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\r\n        x = obj.applyDimensionDefaults(x);\r\n      }\r\n      let old = state[key];\r\n      state[key] = x;\r\n      side_effects.call(key, obj, { value: x, previous: old });\r\n      events.call(key, obj, { value: x, previous: old });\r\n      return obj;\r\n    };\r\n  });\r\n};\r\n\r\nexport default getset;\r\n","// side effects for setters\r\nimport sideEffects from './state/sideEffects';\r\nimport getset from './util/getset';\r\n\r\nconst d3_rebind = (target, source, method) =>\r\n  function() {\r\n    const value = method.apply(source, arguments);\r\n    return value === source ? target : value;\r\n  };\r\n\r\nconst _rebind = (target, source, method) => {\r\n  target[method] = d3_rebind(target, source, source[method]);\r\n  return target;\r\n};\r\n\r\nconst bindEvents = (\r\n  __,\r\n  ctx,\r\n  pc,\r\n  xscale,\r\n  flags,\r\n  brushedQueue,\r\n  markedQueue,\r\n  foregroundQueue,\r\n  events,\r\n  axis\r\n) => {\r\n  const side_effects = sideEffects(\r\n    __,\r\n    ctx,\r\n    pc,\r\n    xscale,\r\n    flags,\r\n    brushedQueue,\r\n    markedQueue,\r\n    foregroundQueue\r\n  );\r\n\r\n  // create getter/setters\r\n  getset(pc, __, events, side_effects);\r\n\r\n  // expose events\r\n  // getter/setter with event firing\r\n  _rebind(pc, events, 'on');\r\n\r\n  _rebind(\r\n    pc,\r\n    axis,\r\n    'ticks',\r\n    'orient',\r\n    'tickValues',\r\n    'tickSubdivide',\r\n    'tickSize',\r\n    'tickPadding',\r\n    'tickFormat'\r\n  );\r\n};\r\n\r\nexport default bindEvents;\r\n","// misc\r\nimport renderQueue from './util/renderQueue';\r\nimport w from './util/width';\r\n\r\n// brush\r\nimport install1DAxes from './brush/1d';\r\nimport install1DAxesMulti from './brush/1d-multi';\r\nimport install2DStrums from './brush/strums';\r\nimport installAngularBrush from './brush/angular';\r\n\r\n// api\r\nimport intersection from './api/intersection';\r\nimport mergeParcoords from './api/mergeParcoords';\r\nimport selected from './api/selected';\r\nimport brushMode from './api/brushMode';\r\nimport updateAxes from './api/updateAxes';\r\nimport autoscale from './api/autoscale';\r\nimport brushable from './api/brushable';\r\nimport commonScale from './api/commonScale';\r\nimport computeRealCentroids from './api/computeRealCentroids';\r\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\r\nimport createAxes from './api/createAxes';\r\nimport axisDots from './api/axisDots';\r\nimport applyAxisConfig from './api/applyAxisConfig';\r\nimport reorderable from './api/reorderable';\r\nimport resize from './api/resize';\r\nimport reorder from './api/reorder';\r\nimport sortDimensions from './api/sortDimensions';\r\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\r\nimport clear from './api/clear';\r\nimport {\r\n  pathMark,\r\n  renderMarked,\r\n  renderMarkedDefault,\r\n  renderMarkedQueue,\r\n} from './api/renderMarked';\r\nimport {\r\n  pathBrushed,\r\n  renderBrushed,\r\n  renderBrushedDefault,\r\n  renderBrushedQueue,\r\n} from './api/renderBrushed';\r\nimport brushReset from './api/brushReset';\r\nimport toType from './api/toType';\r\nimport toString from './api/toString';\r\nimport adjacentPairs from './api/adjacentPairs';\r\nimport highlight from './api/highlight';\r\nimport unhighlight from './api/unhighlight';\r\nimport mark from './api/mark';\r\nimport unmark from './api/unmark';\r\nimport removeAxes from './api/removeAxes';\r\nimport render from './api/render';\r\nimport renderDefault, {\r\n  pathForeground,\r\n  renderDefaultQueue,\r\n} from './api/renderDefault';\r\nimport renderTiled from './api/renderTiled';\r\nimport renderTiledBrushed from './api/renderTiledBrushed';\r\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\r\nimport detectDimensionTypes from './api/detectDimensionTypes';\r\nimport getOrderedDimensionKeys from './api/getOrderedDimensionKeys';\r\nimport interactive from './api/interactive';\r\nimport shadows from './api/shadows';\r\nimport init from './api/init';\r\nimport flip from './api/flip';\r\nimport detectDimensions from './api/detectDimensions';\r\nimport scale from './api/scale';\r\nimport filter from './api/filter';\r\n\r\nimport { version } from '../package.json';\r\nimport initState from './state';\r\nimport bindEvents from './bindEvents';\r\n\r\n//css\r\nimport './parallel-coordinates.css';\r\n\r\nconst ParCoords = userConfig => {\r\n  const state = initState(userConfig);\r\n  const {\r\n    config,\r\n    events,\r\n    flags,\r\n    xscale,\r\n    dragging,\r\n    axis,\r\n    ctx,\r\n    canvas,\r\n    brush,\r\n  } = state;\r\n\r\n  const pc = init(config, canvas, ctx);\r\n\r\n  const position = d => {\r\n    if (xscale.range().length === 0) {\r\n      xscale.range([0, w(config)], 1);\r\n    }\r\n    return dragging[d] == null ? xscale(d) : dragging[d];\r\n  };\r\n\r\n  const brushedQueue = renderQueue(pathBrushed(config, ctx, position))\r\n    .rate(50)\r\n    .clear(() => pc.clear('brushed'));\r\n\r\n  const markedQueue = renderQueue(pathMark(config, ctx, position))\r\n    .rate(50)\r\n    .clear(() => pc.clear('marked'));\r\n\r\n  const foregroundQueue = renderQueue(pathForeground(config, ctx, position))\r\n    .rate(50)\r\n    .clear(function() {\r\n      pc.clear('foreground');\r\n      pc.clear('highlight');\r\n    });\r\n\r\n  bindEvents(\r\n    config,\r\n    ctx,\r\n    pc,\r\n    xscale,\r\n    flags,\r\n    brushedQueue,\r\n    markedQueue,\r\n    foregroundQueue,\r\n    events,\r\n    axis\r\n  );\r\n\r\n  // expose the state of the chart\r\n  pc.state = config;\r\n  pc.flags = flags;\r\n\r\n  pc.autoscale = autoscale(config, pc, xscale, ctx);\r\n  pc.scale = scale(config, pc);\r\n  pc.flip = flip(config);\r\n  pc.commonScale = commonScale(config, pc);\r\n  pc.detectDimensions = detectDimensions(pc);\r\n  // attempt to determine types of each dimension based on first row of data\r\n  pc.detectDimensionTypes = detectDimensionTypes;\r\n  pc.applyDimensionDefaults = applyDimensionDefaults(config, pc);\r\n  pc.getOrderedDimensionKeys = getOrderedDimensionKeys(config);\r\n\r\n  //Renders the polylines.\r\n  pc.render = render(config, pc, events);\r\n  pc.renderBrushed = renderBrushed(config, pc, events);\r\n  pc.renderMarked = renderMarked(config, pc, events);\r\n  pc.render.default = renderDefault(config, pc, ctx, position);\r\n  pc.render.tiled = renderTiled(config, pc, ctx, position);\r\n  pc.renderBrushed.tiled = renderTiledBrushed(config, pc, ctx, position);\r\n  pc.render.queue = renderDefaultQueue(config, pc, foregroundQueue);\r\n  pc.renderBrushed.default = renderBrushedDefault(\r\n    config,\r\n    ctx,\r\n    position,\r\n    pc,\r\n    brush\r\n  );\r\n  pc.renderBrushed.queue = renderBrushedQueue(config, brush, brushedQueue);\r\n  pc.renderMarked.default = renderMarkedDefault(config, pc, ctx, position);\r\n  pc.renderMarked.queue = renderMarkedQueue(config, markedQueue);\r\n\r\n  pc.compute_real_centroids = computeRealCentroids(config.dimensions, position);\r\n  pc.shadows = shadows(flags, pc);\r\n  pc.axisDots = axisDots(config, pc, position);\r\n  pc.clear = clear(config, pc, ctx, brush);\r\n  pc.createAxes = createAxes(config, pc, xscale, flags, axis);\r\n  pc.removeAxes = removeAxes(pc);\r\n  pc.updateAxes = updateAxes(config, pc, position, axis, flags);\r\n  pc.applyAxisConfig = applyAxisConfig;\r\n  pc.brushable = brushable(config, pc, flags);\r\n  pc.brushReset = brushReset(config);\r\n  pc.selected = selected(config, pc);\r\n  pc.reorderable = reorderable(config, pc, xscale, position, dragging, flags);\r\n\r\n  // Reorder dimensions, such that the highest value (visually) is on the left and\r\n  // the lowest on the right. Visual values are determined by the data values in\r\n  // the given row.\r\n  pc.reorder = reorder(config, pc, xscale);\r\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(config);\r\n  pc.sortDimensions = sortDimensions(config, position);\r\n\r\n  // pairs of adjacent dimensions\r\n  pc.adjacent_pairs = adjacentPairs;\r\n  pc.interactive = interactive(flags);\r\n\r\n  // expose internal state\r\n  pc.xscale = xscale;\r\n  pc.ctx = ctx;\r\n  pc.canvas = canvas;\r\n  pc.g = () => pc._g;\r\n\r\n  // rescale for height, width and margins\r\n  // TODO currently assumes chart is brushable, and destroys old brushes\r\n  pc.resize = resize(config, pc, flags, events);\r\n\r\n  // highlight an array of data\r\n  pc.highlight = highlight(config, pc, canvas, events, ctx, position);\r\n  // clear highlighting\r\n  pc.unhighlight = unhighlight(config, pc, canvas);\r\n\r\n  // mark an array of data\r\n  pc.mark = mark(config, pc, canvas, events, ctx, position);\r\n  // clear marked data\r\n  pc.unmark = unmark(config, pc, canvas);\r\n\r\n  // calculate 2d intersection of line a->b with line c->d\r\n  // points are objects with x and y properties\r\n  pc.intersection = intersection;\r\n\r\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\r\n  // (so you can choose to save it to disk, etc.)\r\n  pc.mergeParcoords = mergeParcoords(pc);\r\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\r\n  pc.brushMode = brushMode(brush, config, pc);\r\n\r\n  // install brushes\r\n  install1DAxes(brush, config, pc, events);\r\n  install2DStrums(brush, config, pc, events, xscale);\r\n  installAngularBrush(brush, config, pc, events, xscale);\r\n  install1DAxesMulti(brush, config, pc, events);\r\n\r\n  // allow outside filters\r\n  pc.filter = filter(config, pc);\r\n\r\n  pc.version = version;\r\n  // this descriptive text should live with other introspective methods\r\n  pc.toString = toString(config);\r\n  pc.toType = toType;\r\n  // try to coerce to number before returning type\r\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\r\n\r\n  return pc;\r\n};\r\n\r\nexport default ParCoords;\r\n"],"names":["renderQueue","func","_queue","rq","data","render","valid","invalidate","doFrame","chunk","splice","_rate","map","slice","add","concat","rate","value","arguments","length","remaining","clear","_invalidate","w","config","width","margin","right","left","brushExtents","state","pc","brushes","brushNodes","extents","Object","keys","dimensions","reduce","acc","cur","brush","undefined","brushSelection","extent","brushSelections","g","selectAll","each","d","select","forEach","dim","yExtent","yscale","call","move","reverse","renderBrushed","brushReset","dimension","brushed","type","event","selected","brushGroup","is_brushed","p","actives","filter","_brushRange","invert","matchArray","filters","within","bandwidth","predicate","every","some","Error","brushPredicate","brushUpdated","events","args","newSelection","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","invertCategorical","selection","domain","found","i","push","convertBrushArguments","args_array","Array","prototype","selection_raw","selection_scaled","on","sourceEvent","stopPropagation","node","install","createAxes","append","attr","style","uninstall","remove","install1DAxes","modes","drawBrushes","selector","id","enter","insert","indexOf","b","brushObject","exit","pos","axisBrushes","document","getElementById","dimExt","e","newBrush","lastBrushID","lastBrush","toString","yExtents","_bs","j","f","k","ext","axisBrush","_this","install1DMultiAxes","strumRect","containmentTest","strum","p1","minX","p2","m1","b1","m2","b2","x","y","y1","y2","Math","min","max","crossesStrum","strums","test","d1","dims","d2","point","ids","getOwnPropertyNames","isNaN","crossTest","removeStrum","active","svg","onDragEnd","drawStrum","activePoint","_svg","points","_line","circles","_drag","drag","ev","maxX","minY","maxY","onDrag","top","h","height","bottom","dimensionsForPoint","xscale","getOrderedDimensionKeys","onDragStart","mouse","consecutive","first","second","install2DStrums","hypothenuse","a","sqrt","signedAngle","angle","PI","startAngle","arc","endAngle","tmp","arcs","c","asin","outerRadius","p3","_path","d3Arc","innerRadius","sAngle","uAngle","installAngularBrush","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","createElement","foregroundCanvas","canvas","foreground","canvasMarginLeft","Number","marginLeft","replace","textTopAdjust","canvasMarginTop","marginTop","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","key","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgNodeCopy","cloneNode","setAttribute","getAttribute","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","__data__","values","ranger","includes","flipAxes","unshift","ii","dimRange","dimDomain","category","categoryIndex","categoryRangeValue","multiBrushData","idx","filtered","z","String","toUpperCase","currentMode","brushMode","mode","brushModes","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","transition","duration","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","text","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","highlightedLineWidth","marked","markedLineWidth","shadowColor","markedShadowColor","shadowBlur","markedShadowBlur","ctrlKey","html","outerHTML","dat","parentNode","commonScale","global","t","detectDimensions","scales","bundleDimension","computeRealCentroids","row","isValid","applyDimensionDefaults","types","detectDimensionTypes","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","dots","pow","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","dx","sortDimensions","renderMarked","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","unmark","mark","copy","assign","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","brushState","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","cols","$V","cx","cy","leftCentroid","clusterCentroids","get","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","log","singlePath","lineTo","colorPath","_functor","v","pathMark","functor","renderMarkedDefault","renderMarkedQueue","markedQueue","pathBrushed","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","match","toLowerCase","adjacentPairs","ret","arr","pathHighlight","classed","pathForeground","renderDefault","default","renderDefaultQueue","foregroundQueue","queue","tileForeground","gw","gh","opacity","singlePathTile","yrange","abs","bres_grid","step","resolution","gridh","dim2","scalegx","scaleQuantize","scalegy","bres","bresenham","invertExtent","aggregatePoints","points_collector","dd","ddd","grid_aggregate","nest","rollup","renderTiled","tiled","aggregated","max_count","merge","scale_normalize","entries","interpolateViridis","tileForegroundBrushed","renderTiledBrushed","toTypeCoerceNumbers","parseFloat","parseInt","ascending","interactive","shadows","init","filterUpdated","DefaultConfig","initState","userConfig","dimensionTitles","warn","eventTypes","dispatch","apply","computeClusterCentroids","Map","clusterCounts","scaled","has","set","count","_map","without","items","el","sideEffects","hideAxis","getset","obj","side_effects","old","previous","d3_rebind","target","source","method","_rebind","bindEvents","__","ParCoords","compute_real_centroids","adjacent_pairs","version"],"mappings":"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"}
