{"version":3,"file":"parcoords.js","sources":["../src/util/renderQueue.js","../src/util/width.js","../src/brush/1d/brushExtents.js","../src/brush/1d/brushReset.js","../src/brush/1d/selected.js","../src/brush/1d/brushFor.js","../src/brush/1d/install.js","../src/brush/1d/uninstall.js","../src/brush/1d/index.js","../src/brush/1d-multi/drawBrushes.js","../src/brush/1d-multi/selected.js","../src/brush/1d-multi/newBrush.js","../src/brush/1d-multi/brushExtents.js","../src/brush/1d-multi/brushReset.js","../src/brush/1d-multi/brushFor.js","../src/brush/1d-multi/install.js","../src/brush/1d-multi/uninstall.js","../src/brush/1d-multi/index.js","../src/brush/strums/uninstall.js","../src/brush/strums/selected.js","../src/brush/strums/removeStrum.js","../src/brush/strums/onDragEnd.js","../src/brush/strums/onDrag.js","../src/util/height.js","../src/brush/dimensionsForPoint.js","../src/brush/strums/onDragStart.js","../src/brush/strums/brushReset.js","../src/brush/consecutive.js","../src/brush/strums/install.js","../src/brush/strums/index.js","../src/brush/angular/uninstall.js","../src/brush/angular/util/hypothenuse.js","../src/brush/angular/selected.js","../src/brush/angular/removeStrum.js","../src/brush/angular/onDragEnd.js","../src/brush/angular/onDrag.js","../src/brush/angular/onDragStart.js","../src/brush/angular/brushReset.js","../src/brush/angular/install.js","../src/brush/angular/index.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/util/functor.js","../src/api/renderMarked.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/mark.js","../src/api/unmark.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/renderTiled.js","../src/api/renderTiledBrushed.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/api/getOrderedDimensionKeys.js","../src/api/interactive.js","../src/api/shadows.js","../src/api/init.js","../src/api/flip.js","../src/api/detectDimensions.js","../src/api/scale.js","../src/api/filter.js","../src/state/defaultConfig.js","../src/state/index.js","../src/util/computeClusterCentroids.js","../src/state/sideEffects.js","../src/util/getset.js","../src/bindEvents.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\r\n\r\nconst renderQueue = function(func) {\r\n  let _queue = [], // data to be rendered\r\n    _rate = 1000, // number of calls per frame\r\n    _invalidate = function() {}, // invalidate last render queue\r\n    _clear = function() {}; // clearing function\r\n\r\n  let rq = function(data) {\r\n    if (data) rq.data(data);\r\n    _invalidate();\r\n    _clear();\r\n    rq.render();\r\n  };\r\n\r\n  rq.render = function() {\r\n    let valid = true;\r\n    _invalidate = rq.invalidate = function() {\r\n      valid = false;\r\n    };\r\n\r\n    function doFrame() {\r\n      if (!valid) return true;\r\n      let chunk = _queue.splice(0, _rate);\r\n      chunk.map(func);\r\n      requestAnimationFrame(doFrame);\r\n    }\r\n\r\n    doFrame();\r\n  };\r\n\r\n  rq.data = function(data) {\r\n    _invalidate();\r\n    _queue = data.slice(0); // creates a copy of the data\r\n    return rq;\r\n  };\r\n\r\n  rq.add = function(data) {\r\n    _queue = _queue.concat(data);\r\n  };\r\n\r\n  rq.rate = function(value) {\r\n    if (!arguments.length) return _rate;\r\n    _rate = value;\r\n    return rq;\r\n  };\r\n\r\n  rq.remaining = function() {\r\n    return _queue.length;\r\n  };\r\n\r\n  // clear the canvas\r\n  rq.clear = function(func) {\r\n    if (!arguments.length) {\r\n      _clear();\r\n      return rq;\r\n    }\r\n    _clear = func;\r\n    return rq;\r\n  };\r\n\r\n  rq.invalidate = _invalidate;\r\n\r\n  return rq;\r\n};\r\n\r\nexport default renderQueue;\r\n","const w = config => config.width - config.margin.right - config.margin.left;\r\n\r\nexport default w;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\n\r\nconst brushExtents = (state, config, pc) => extents => {\r\n  const { brushes, brushNodes } = state;\r\n\r\n  if (typeof extents === 'undefined') {\r\n    return Object.keys(config.dimensions).reduce((acc, cur) => {\r\n      const brush = brushes[cur];\r\n      //todo: brush check\r\n      if (brush !== undefined && brushSelection(brushNodes[cur]) !== null) {\r\n        acc[cur] = brush.extent();\r\n      }\r\n\r\n      return acc;\r\n    }, {});\r\n  } else {\r\n    //first get all the brush selections\r\n    const brushSelections = {};\r\n    pc.g()\r\n      .selectAll('.brush')\r\n      .each(function(d) {\r\n        brushSelections[d] = select(this);\r\n      });\r\n\r\n    // loop over each dimension and update appropriately (if it was passed in through extents)\r\n    Object.keys(config.dimensions).forEach(d => {\r\n      if (extents[d] === undefined) {\r\n        return;\r\n      }\r\n\r\n      const brush = brushes[d];\r\n      if (brush !== undefined) {\r\n        const dim = config.dimensions[d];\r\n        const yExtent = extents[d].map(dim.yscale);\r\n\r\n        //update the extent\r\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\r\n        brush.extent([[-15, yExtent[1]], [15, yExtent[0]]]);\r\n\r\n        //redraw the brush\r\n        //https://github.com/d3/d3-brush#brush_move\r\n        // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\r\n        brushSelections[d].call(brush).call(brush.move, yExtent.reverse());\r\n\r\n        //fire some events\r\n        // brush.event(brushSelections[d]);\r\n      }\r\n    });\r\n\r\n    //redraw the chart\r\n    pc.renderBrushed();\r\n\r\n    return pc;\r\n  }\r\n};\r\n\r\nexport default brushExtents;\r\n","import { select } from 'd3-selection';\r\n\r\nconst brushReset = (state, config, pc) => dimension => {\r\n  const { brushes } = state;\r\n\r\n  if (dimension === undefined) {\r\n    config.brushed = false;\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      pc.g()\r\n        .selectAll('.brush')\r\n        .each(function(d) {\r\n          select(this).call(brushes[d].move, null);\r\n        });\r\n      pc.renderBrushed();\r\n    }\r\n  } else {\r\n    config.brushed = false;\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      pc.g()\r\n        .selectAll('.brush')\r\n        .each(function(d) {\r\n          if (d !== dimension) return;\r\n          select(this).call(brushes[d].move, null);\r\n          if (typeof brushes[d].type === 'function') {\r\n            brushes[d].event(select(this));\r\n          }\r\n        });\r\n      pc.renderBrushed();\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default brushReset;\r\n","import { brushSelection } from 'd3-brush';\r\nimport { matchArray } from 'searchjs';\r\n\r\n//https://github.com/d3/d3-brush/issues/10\r\n\r\n// data within extents\r\nconst selected = (state, config, brushGroup) => () => {\r\n  const { brushNodes } = state;\r\n  const is_brushed = p =>\r\n    brushNodes[p] && brushSelection(brushNodes[p]) !== null;\r\n\r\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\r\n  const extents = actives.map(p => {\r\n    const _brushRange = brushSelection(brushNodes[p]);\r\n\r\n    if (typeof config.dimensions[p].yscale.invert === 'function') {\r\n      return [\r\n        config.dimensions[p].yscale.invert(_brushRange[1]),\r\n        config.dimensions[p].yscale.invert(_brushRange[0]),\r\n      ];\r\n    } else {\r\n      return _brushRange;\r\n    }\r\n  });\r\n  // We don't want to return the full data set when there are no axes brushed.\r\n  // Actually, when there are no axes brushed, by definition, no items are\r\n  // selected. So, let's avoid the filtering and just return false.\r\n  //if (actives.length === 0) return false;\r\n\r\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\r\n  if (actives.length === 0) {\r\n    return matchArray(config.data, config.filters);\r\n  }\r\n\r\n  // test if within range\r\n  const within = {\r\n    date: (d, p, dimension) => {\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        return (\r\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n        );\r\n      } else {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      }\r\n    },\r\n    number: (d, p, dimension) => {\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        return (\r\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n        );\r\n      } else {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      }\r\n    },\r\n    string: (d, p, dimension) => {\r\n      return (\r\n        extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n        config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n      );\r\n    },\r\n  };\r\n\r\n  return matchArray(config.data, config.filters).filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return actives.every(function(p, dimension) {\r\n          return within[config.dimensions[p].type](d, p, dimension);\r\n        });\r\n      case 'OR':\r\n        return actives.some(function(p, dimension) {\r\n          return within[config.dimensions[p].type](d, p, dimension);\r\n        });\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","import { brushY, brushSelection } from 'd3-brush';\r\nimport { event } from 'd3-selection';\r\n\r\nimport selected from './selected';\r\n\r\nconst brushUpdated = (config, pc, events, args) => newSelection => {\r\n  config.brushed = newSelection;\r\n  events.call('brush', pc, config.brushed, args);\r\n  pc.renderBrushed();\r\n};\r\n\r\nconst brushFor = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const brushRangeMax =\r\n    config.dimensions[axis].type === 'string'\r\n      ? config.dimensions[axis].yscale.range()[\r\n          config.dimensions[axis].yscale.range().length - 1\r\n        ]\r\n      : config.dimensions[axis].yscale.range()[0];\r\n\r\n  const _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\r\n\r\n  const invertCategorical = (selection, yscale) => {\r\n    if (selection.length === 0) {\r\n      return [];\r\n    }\r\n    const domain = yscale.domain();\r\n    const range = yscale.range();\r\n    const found = [];\r\n    range.forEach((d, i) => {\r\n      if (d >= selection[0] && d <= selection[1]) {\r\n        found.push(domain[i]);\r\n      }\r\n    });\r\n    return found;\r\n  };\r\n\r\n  const convertBrushArguments = args => {\r\n    const args_array = Array.prototype.slice.call(args);\r\n    const axis = args_array[0];\r\n    const selection_raw = brushSelection(args_array[2][0]) || [];\r\n    // ordinal scales do not have invert\r\n    let selection_scaled = [];\r\n    const yscale = config.dimensions[axis].yscale;\r\n    if (typeof yscale.invert === 'undefined') {\r\n      selection_scaled = invertCategorical(selection_raw, yscale);\r\n    } else {\r\n      selection_scaled = selection_raw.map(d =>\r\n        config.dimensions[axis].yscale.invert(d)\r\n      );\r\n    }\r\n\r\n    return {\r\n      axis: args_array[0],\r\n      node: args_array[2][0],\r\n      selection: {\r\n        raw: selection_raw,\r\n        scaled: selection_scaled,\r\n      },\r\n    };\r\n  };\r\n\r\n  _brush\r\n    .on('start', function() {\r\n      if (event.sourceEvent !== null) {\r\n        events.call(\r\n          'brushstart',\r\n          pc,\r\n          config.brushed,\r\n          convertBrushArguments(arguments)\r\n        );\r\n        if (typeof event.sourceEvent.stopPropagation === 'function') {\r\n          event.sourceEvent.stopPropagation();\r\n        }\r\n      }\r\n    })\r\n    .on('brush', function() {\r\n      brushUpdated(\r\n        config,\r\n        pc,\r\n        events,\r\n        convertBrushArguments(arguments)\r\n      )(selected(state, config, brushGroup)());\r\n    })\r\n    .on('end', function() {\r\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\r\n      events.call(\r\n        'brushend',\r\n        pc,\r\n        config.brushed,\r\n        convertBrushArguments(arguments)\r\n      );\r\n    });\r\n\r\n  state.brushes[axis] = _brush;\r\n  state.brushNodes[axis] = _selector.node();\r\n\r\n  return _brush;\r\n};\r\n\r\nexport default brushFor;\r\n","import { select } from 'd3-selection';\r\nimport brushExtents from './brushExtents';\r\nimport brushReset from './brushReset';\r\nimport brushFor from './brushFor';\r\n\r\nconst install = (state, config, pc, events, brushGroup) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  // Add and store a brush for each axis.\r\n  const brush = pc\r\n    .g()\r\n    .append('svg:g')\r\n    .attr('class', 'brush')\r\n    .each(function(d) {\r\n      select(this).call(\r\n        brushFor(state, config, pc, events, brushGroup)(d, select(this))\r\n      );\r\n    });\r\n  brush\r\n    .selectAll('rect')\r\n    .style('visibility', null)\r\n    .attr('x', -15)\r\n    .attr('width', 30);\r\n\r\n  brush.selectAll('rect.background').style('fill', 'transparent');\r\n\r\n  brush\r\n    .selectAll('rect.extent')\r\n    .style('fill', 'rgba(255,255,255,0.25)')\r\n    .style('stroke', 'rgba(0,0,0,0.6)');\r\n\r\n  brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\r\n\r\n  pc.brushExtents = brushExtents(state, config, pc);\r\n  pc.brushReset = brushReset(state, config, pc);\r\n  return pc;\r\n};\r\n\r\nexport default install;\r\n","const uninstall = (state, pc) => () => {\r\n  if (pc.g() !== undefined && pc.g() !== null)\r\n    pc.g()\r\n      .selectAll('.brush')\r\n      .remove();\r\n\r\n  state.brushes = {};\r\n  delete pc.brushExtents;\r\n  delete pc.brushReset;\r\n};\r\n\r\nexport default uninstall;\r\n","import brushExtents from './brushExtents';\r\nimport install from './install';\r\nimport selected from './selected';\r\nimport uninstall from './uninstall';\r\n\r\nconst install1DAxes = (brushGroup, config, pc, events) => {\r\n  const state = {\r\n    brushes: {},\r\n    brushNodes: {},\r\n  };\r\n\r\n  brushGroup.modes['1D-axes'] = {\r\n    install: install(state, config, pc, events, brushGroup),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(state, config, brushGroup),\r\n    brushState: brushExtents(state, config, pc),\r\n  };\r\n};\r\n\r\nexport default install1DAxes;\r\n","import { select } from 'd3-selection';\r\n\r\nconst drawBrushes = (brushes, config, pc, axis, selector) => {\r\n  const brushSelection = selector.selectAll('.brush').data(brushes, d => d.id);\r\n\r\n  brushSelection\r\n    .enter()\r\n    .insert('g', '.brush')\r\n    .attr('class', 'brush')\r\n    .attr('dimension', axis)\r\n    .attr(\r\n      'id',\r\n      b => 'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + b.id\r\n    )\r\n    .each(function(brushObject) {\r\n      brushObject.brush(select(this));\r\n    });\r\n\r\n  brushSelection.each(function(brushObject) {\r\n    select(this)\r\n      .attr('class', 'brush')\r\n      .selectAll('.overlay')\r\n      .style('pointer-events', function() {\r\n        const brush = brushObject.brush;\r\n        if (brushObject.id === brushes.length - 1 && brush !== undefined) {\r\n          return 'all';\r\n        } else {\r\n          return 'none';\r\n        }\r\n      });\r\n  });\r\n\r\n  brushSelection.exit().remove();\r\n};\r\n\r\nexport default drawBrushes;\r\n","import { brushSelection } from 'd3-brush';\r\n\r\n// data within extents\r\nconst selected = (state, config, pc, events, brushGroup) => {\r\n  const { brushes } = state;\r\n\r\n  const is_brushed = (p, pos) => {\r\n    const axisBrushes = brushes[p];\r\n\r\n    for (let i = 0; i < axisBrushes.length; i++) {\r\n      const brush = document.getElementById('brush-' + pos + '-' + i);\r\n\r\n      if (brushSelection(brush) !== null) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\r\n  const extents = actives.map(p => {\r\n    const axisBrushes = brushes[p];\r\n\r\n    return axisBrushes\r\n      .map((d, i) =>\r\n        brushSelection(\r\n          document.getElementById(\r\n            'brush-' + Object.keys(config.dimensions).indexOf(p) + '-' + i\r\n          )\r\n        )\r\n      )\r\n      .map((d, i) => {\r\n        if (d === null || d === undefined) {\r\n          return null;\r\n        } else if (typeof config.dimensions[p].yscale.invert === 'function') {\r\n          return [\r\n            config.dimensions[p].yscale.invert(d[1]),\r\n            config.dimensions[p].yscale.invert(d[0]),\r\n          ];\r\n        } else {\r\n          return d;\r\n        }\r\n      });\r\n  });\r\n\r\n  // We don't want to return the full data set when there are no axes brushed.\r\n  // Actually, when there are no axes brushed, by definition, no items are\r\n  // selected. So, let's avoid the filtering and just return false.\r\n  //if (actives.length === 0) return false;\r\n\r\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\r\n  if (actives.length === 0) return config.data;\r\n\r\n  // test if within range\r\n  const within = {\r\n    date: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (\r\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n            config.dimensions[p].yscale(d[p]) <= e[1]\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      } else {\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (e[0] <= d[p] && d[p] <= e[1]) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    },\r\n    number: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (\r\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n            config.dimensions[p].yscale(d[p]) <= e[1]\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      } else {\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (e[0] <= d[p] && d[p] <= e[1]) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    },\r\n    string: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      for (const e of dimExt) {\r\n        if (e === null || e === undefined) {\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= e[1]\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n  };\r\n\r\n  return config.data.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return actives.every((p, i) =>\r\n          within[config.dimensions[p].type](d, p, i)\r\n        );\r\n      case 'OR':\r\n        return actives.some((p, i) =>\r\n          within[config.dimensions[p].type](d, p, i)\r\n        );\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","import { brushY, brushSelection } from 'd3-brush';\r\nimport { event, select } from 'd3-selection';\r\nimport drawBrushes from './drawBrushes';\r\nimport selected from './selected';\r\n\r\nconst brushUpdated = (config, pc, events) => newSelection => {\r\n  config.brushed = newSelection;\r\n  events.call('brush', pc, config.brushed);\r\n  pc.renderBrushed();\r\n};\r\n\r\nconst newBrush = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const { brushes, brushNodes } = state;\r\n\r\n  const brushRangeMax =\r\n    config.dimensions[axis].type === 'string'\r\n      ? config.dimensions[axis].yscale.range()[\r\n          config.dimensions[axis].yscale.range().length - 1\r\n        ]\r\n      : config.dimensions[axis].yscale.range()[0];\r\n\r\n  const brush = brushY().extent([[-15, 0], [15, brushRangeMax]]);\r\n  const id = brushes[axis] ? brushes[axis].length : 0;\r\n  const node =\r\n    'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + id;\r\n\r\n  if (brushes[axis]) {\r\n    brushes[axis].push({\r\n      id,\r\n      brush,\r\n      node,\r\n    });\r\n  } else {\r\n    brushes[axis] = [{ id, brush, node }];\r\n  }\r\n\r\n  if (brushNodes[axis]) {\r\n    brushNodes[axis].push({ id, node });\r\n  } else {\r\n    brushNodes[axis] = [{ id, node }];\r\n  }\r\n\r\n  brush\r\n    .on('start', function() {\r\n      if (event.sourceEvent !== null) {\r\n        events.call('brushstart', pc, config.brushed);\r\n        if (typeof event.sourceEvent.stopPropagation === 'function') {\r\n          event.sourceEvent.stopPropagation();\r\n        }\r\n      }\r\n    })\r\n    .on('brush', function(e) {\r\n      // record selections\r\n      brushUpdated(\r\n        config,\r\n        pc,\r\n        events\r\n      )(selected(state, config, pc, events, brushGroup));\r\n    })\r\n    .on('end', function() {\r\n      // Figure out if our latest brush has a selection\r\n      const lastBrushID = brushes[axis][brushes[axis].length - 1].id;\r\n      const lastBrush = document.getElementById(\r\n        'brush-' +\r\n          Object.keys(config.dimensions).indexOf(axis) +\r\n          '-' +\r\n          lastBrushID\r\n      );\r\n      const selection = brushSelection(lastBrush);\r\n\r\n      if (\r\n        selection !== undefined &&\r\n        selection !== null &&\r\n        selection[0] !== selection[1]\r\n      ) {\r\n        newBrush(state, config, pc, events, brushGroup)(axis, _selector);\r\n\r\n        drawBrushes(brushes[axis], config, pc, axis, _selector);\r\n\r\n        brushUpdated(config, pc, events)(\r\n          selected(state, config, pc, events, brushGroup)\r\n        );\r\n      } else {\r\n        if (\r\n          event.sourceEvent &&\r\n          event.sourceEvent.toString() === '[object MouseEvent]' &&\r\n          event.selection === null\r\n        ) {\r\n          pc.brushReset(axis);\r\n        }\r\n      }\r\n\r\n      events.call('brushend', pc, config.brushed);\r\n    });\r\n\r\n  return brush;\r\n};\r\n\r\nexport default newBrush;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\nimport newBrush from './newBrush';\r\nimport drawBrushes from './drawBrushes';\r\n\r\n/**\r\n *\r\n * extents are in format of [[2,6], [3,5]]\r\n *\r\n * * @param state\r\n * @param config\r\n * @param pc\r\n * @returns {Function}\r\n */\r\nconst brushExtents = (state, config, pc, events, brushGroup) => extents => {\r\n  const { brushes } = state;\r\n\r\n  if (typeof extents === 'undefined') {\r\n    return Object.keys(config.dimensions).reduce((acc, cur, pos) => {\r\n      const axisBrushes = brushes[cur];\r\n\r\n      if (axisBrushes === undefined || axisBrushes === null) {\r\n        acc[cur] = [];\r\n      } else {\r\n        acc[cur] = axisBrushes.reduce((d, p, i) => {\r\n          const range = brushSelection(\r\n            document.getElementById('brush-' + pos + '-' + i)\r\n          );\r\n          if (range !== null) {\r\n            d = d.push(range);\r\n          }\r\n\r\n          return d;\r\n        }, []);\r\n      }\r\n\r\n      return acc;\r\n    }, {});\r\n  } else {\r\n    // //first get all the brush selections\r\n    // loop over each dimension and update appropriately (if it was passed in through extents)\r\n    Object.keys(config.dimensions).forEach((d, pos) => {\r\n      if (extents[d] === undefined || extents[d] === null) {\r\n        return;\r\n      }\r\n\r\n      const dim = config.dimensions[d];\r\n\r\n      const yExtents = extents[d].map(e => e.map(dim.yscale));\r\n\r\n      const _bs = yExtents.map((e, j) => {\r\n        const _brush = newBrush(state, config, pc, events, brushGroup)(\r\n          d,\r\n          select('#brush-group-' + pos)\r\n        );\r\n        //update the extent\r\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\r\n        _brush.extent([[-15, e[1]], [15, e[0]]]);\r\n\r\n        return {\r\n          id: j,\r\n          brush: _brush,\r\n          ext: e,\r\n        };\r\n      });\r\n\r\n      brushes[d] = _bs;\r\n\r\n      drawBrushes(_bs, config, pc, d, select('#brush-group-' + pos));\r\n\r\n      //redraw the brush\r\n      //https://github.com/d3/d3-brush#brush_move\r\n      // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\r\n      _bs.forEach((f, k) => {\r\n        select('#brush-' + pos + '-' + k)\r\n          .call(f.brush)\r\n          .call(f.brush.move, f.ext.reverse());\r\n      });\r\n    });\r\n\r\n    //redraw the chart\r\n    pc.renderBrushed();\r\n\r\n    return pc;\r\n  }\r\n};\r\n\r\nexport default brushExtents;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\n\r\nconst brushReset = (state, config, pc) => dimension => {\r\n  const { brushes } = state;\r\n\r\n  if (dimension === undefined) {\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      Object.keys(config.dimensions).forEach((d, pos) => {\r\n        const axisBrush = brushes[d];\r\n\r\n        axisBrush.forEach((e, i) => {\r\n          const brush = document.getElementById('brush-' + pos + '-' + i);\r\n          if (brushSelection(brush) !== null) {\r\n            pc.g()\r\n              .select('#brush-' + pos + '-' + i)\r\n              .call(e.brush.move, null);\r\n          }\r\n        });\r\n      });\r\n\r\n      pc.renderBrushed();\r\n    }\r\n  } else {\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      const axisBrush = brushes[dimension];\r\n      const pos = Object.keys(config.dimensions).indexOf(dimension);\r\n\r\n      axisBrush.forEach((e, i) => {\r\n        const brush = document.getElementById('brush-' + pos + '-' + i);\r\n        if (brushSelection(brush) !== null) {\r\n          pc.g()\r\n            .select('#brush-' + pos + '-' + i)\r\n            .call(e.brush.move, null);\r\n\r\n          if (typeof e.event === 'function') {\r\n            e.event(select('#brush-' + pos + '-' + i));\r\n          }\r\n        }\r\n      });\r\n\r\n      pc.renderBrushed();\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default brushReset;\r\n","import newBrush from './newBrush';\r\nimport drawBrushes from './drawBrushes';\r\n\r\nconst brushFor = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const { brushes } = state;\r\n  newBrush(state, config, pc, events, brushGroup)(axis, _selector);\r\n  drawBrushes(brushes[axis], config, pc, axis, _selector);\r\n};\r\n\r\nexport default brushFor;\r\n","import { select } from 'd3-selection';\r\nimport brushExtents from './brushExtents';\r\nimport brushReset from './brushReset';\r\nimport brushFor from './brushFor';\r\n\r\nconst install = (state, config, pc, events, brushGroup) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  pc.g()\r\n    .append('svg:g')\r\n    .attr('id', (d, i) => 'brush-group-' + i)\r\n    .attr('class', 'brush-group')\r\n    .attr('dimension', d => d)\r\n    .each(function(d) {\r\n      brushFor(state, config, pc, events, brushGroup)(d, select(this));\r\n    });\r\n\r\n  pc.brushExtents = brushExtents(state, config, pc, events, brushGroup);\r\n  pc.brushReset = brushReset(state, config, pc);\r\n  return pc;\r\n};\r\n\r\nexport default install;\r\n","const uninstall = (state, pc) => () => {\r\n  if (pc.g() !== undefined && pc.g() !== null)\r\n    pc.g()\r\n      .selectAll('.brush-group')\r\n      .remove();\r\n\r\n  state.brushes = {};\r\n  delete pc.brushExtents;\r\n  delete pc.brushReset;\r\n};\r\n\r\nexport default uninstall;\r\n","import brushExtents from './brushExtents';\r\nimport install from './install';\r\nimport selected from './selected';\r\nimport uninstall from './uninstall';\r\n\r\nconst install1DMultiAxes = (brushGroup, config, pc, events) => {\r\n  const state = {\r\n    brushes: {},\r\n    brushNodes: {},\r\n  };\r\n\r\n  brushGroup.modes['1D-axes-multi'] = {\r\n    install: install(state, config, pc, events, brushGroup),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(state, config, brushGroup),\r\n    brushState: brushExtents(state, config, pc),\r\n  };\r\n};\r\n\r\nexport default install1DMultiAxes;\r\n","const uninstall = (state, pc) => () => {\r\n  pc.selection\r\n    .select('svg')\r\n    .select('g#strums')\r\n    .remove();\r\n  pc.selection\r\n    .select('svg')\r\n    .select('rect#strum-events')\r\n    .remove();\r\n  pc.on('axesreorder.strums', undefined);\r\n  delete pc.brushReset;\r\n\r\n  state.strumRect = undefined;\r\n};\r\n\r\nexport default uninstall;\r\n","// test if point falls between lines\r\nconst containmentTest = (strum, width) => p => {\r\n  const p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\r\n    p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\r\n    m1 = 1 - width / p1[0],\r\n    b1 = p1[1] * (1 - m1),\r\n    m2 = 1 - width / p2[0],\r\n    b2 = p2[1] * (1 - m2);\r\n\r\n  const x = p[0],\r\n    y = p[1],\r\n    y1 = m1 * x + b1,\r\n    y2 = m2 * x + b2;\r\n\r\n  return y > Math.min(y1, y2) && y < Math.max(y1, y2);\r\n};\r\n\r\nconst crossesStrum = (state, config) => (d, id) => {\r\n  let strum = state.strums[id],\r\n    test = containmentTest(strum, state.strums.width(id)),\r\n    d1 = strum.dims.left,\r\n    d2 = strum.dims.right,\r\n    y1 = config.dimensions[d1].yscale,\r\n    y2 = config.dimensions[d2].yscale,\r\n    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\r\n  return test(point);\r\n};\r\n\r\nconst selected = (brushGroup, state, config) => {\r\n  // Get the ids of the currently active strums.\r\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d)),\r\n    brushed = config.data;\r\n\r\n  if (ids.length === 0) {\r\n    return brushed;\r\n  }\r\n\r\n  const crossTest = crossesStrum(state, config);\r\n\r\n  return brushed.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return ids.every(id => crossTest(d, id));\r\n      case 'OR':\r\n        return ids.some(id => crossTest(d, id));\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","const removeStrum = (state, pc) => {\r\n  const strum = state.strums[state.strums.active],\r\n    svg = pc.selection.select('svg').select('g#strums');\r\n\r\n  delete state.strums[state.strums.active];\r\n  svg.selectAll('line#strum-' + strum.dims.i).remove();\r\n  svg.selectAll('circle#strum-' + strum.dims.i).remove();\r\n};\r\n\r\nexport default removeStrum;\r\n","import selected from './selected';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\r\n  const strum = state.strums[state.strums.active];\r\n\r\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\r\n  // considered a drag without move. So we have to deal with that case\r\n  if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\r\n    removeStrum(state, pc);\r\n  }\r\n\r\n  const brushed = selected(brushGroup, state, config);\r\n  state.strums.active = undefined;\r\n  config.brushed = brushed;\r\n  pc.renderBrushed();\r\n  events.call('brushend', pc, config.brushed);\r\n};\r\n\r\nexport default onDragEnd;\r\n","import { event, select } from 'd3-selection';\r\nimport { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\n\r\nconst drawStrum = (\r\n  brushGroup,\r\n  state,\r\n  config,\r\n  pc,\r\n  events,\r\n  strum,\r\n  activePoint\r\n) => {\r\n  let _svg = pc.selection.select('svg').select('g#strums'),\r\n    id = strum.dims.i,\r\n    points = [strum.p1, strum.p2],\r\n    _line = _svg.selectAll('line#strum-' + id).data([strum]),\r\n    circles = _svg.selectAll('circle#strum-' + id).data(points),\r\n    _drag = drag();\r\n\r\n  _line\r\n    .enter()\r\n    .append('line')\r\n    .attr('id', 'strum-' + id)\r\n    .attr('class', 'strum');\r\n\r\n  _line\r\n    .attr('x1', d => d.p1[0])\r\n    .attr('y1', d => d.p1[1])\r\n    .attr('x2', d => d.p2[0])\r\n    .attr('y2', d => d.p2[1])\r\n    .attr('stroke', 'black')\r\n    .attr('stroke-width', 2);\r\n\r\n  _drag\r\n    .on('drag', function(d, i) {\r\n      const ev = event;\r\n      i = i + 1;\r\n      strum['p' + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\r\n      strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\r\n      drawStrum(brushGroup, state, config, pc, events, strum, i - 1);\r\n    })\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  circles\r\n    .enter()\r\n    .append('circle')\r\n    .attr('id', 'strum-' + id)\r\n    .attr('class', 'strum');\r\n\r\n  circles\r\n    .attr('cx', d => d[0])\r\n    .attr('cy', d => d[1])\r\n    .attr('r', 5)\r\n    .style(\r\n      'opacity',\r\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\r\n    )\r\n    .on('mouseover', function() {\r\n      select(this).style('opacity', 0.8);\r\n    })\r\n    .on('mouseout', function() {\r\n      select(this).style('opacity', 0);\r\n    })\r\n    .call(_drag);\r\n};\r\n\r\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\r\n  const ev = event,\r\n    strum = state.strums[state.strums.active];\r\n\r\n  // Make sure that the point is within the bounds\r\n  strum.p2[0] = Math.min(\r\n    Math.max(strum.minX + 1, ev.x - config.margin.left),\r\n    strum.maxX\r\n  );\r\n  strum.p2[1] = Math.min(\r\n    Math.max(strum.minY, ev.y - config.margin.top),\r\n    strum.maxY\r\n  );\r\n\r\n  drawStrum(brushGroup, state, config, pc, events, strum, 1);\r\n};\r\n\r\nexport default onDrag;\r\n","const h = config => config.height - config.margin.top - config.margin.bottom;\r\n\r\nexport default h;\r\n","const dimensionsForPoint = (config, pc, xscale, p) => {\r\n  const dims = { i: -1, left: undefined, right: undefined };\r\n  Object.keys(config.dimensions).some((dim, i) => {\r\n    if (xscale(dim) < p[0]) {\r\n      dims.i = i;\r\n      dims.left = dim;\r\n      dims.right = Object.keys(config.dimensions)[\r\n        pc.getOrderedDimensionKeys().indexOf(dim) + 1\r\n      ];\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  if (dims.left === undefined) {\r\n    // Event on the left side of the first axis.\r\n    dims.i = 0;\r\n    dims.left = pc.getOrderedDimensionKeys()[0];\r\n    dims.right = pc.getOrderedDimensionKeys()[1];\r\n  } else if (dims.right === undefined) {\r\n    // Event on the right side of the last axis\r\n    dims.i = Object.keys(config.dimensions).length - 1;\r\n    dims.right = dims.left;\r\n    dims.left = pc.getOrderedDimensionKeys()[\r\n      Object.keys(config.dimensions).length - 2\r\n    ];\r\n  }\r\n\r\n  return dims;\r\n};\r\n\r\nexport default dimensionsForPoint;\r\n","import { mouse } from 'd3-selection';\r\nimport h from '../../util/height';\r\nimport dimensionsForPoint from '../dimensionsForPoint';\r\n\r\n// First we need to determine between which two axes the sturm was started.\r\n// This will determine the freedom of movement, because a strum can\r\n// logically only happen between two axes, so no movement outside these axes\r\n// should be allowed.\r\nconst onDragStart = (state, config, pc, xscale) => () => {\r\n  let p = mouse(state.strumRect.node());\r\n\r\n  p[0] = p[0] - config.margin.left;\r\n  p[1] = p[1] - config.margin.top;\r\n\r\n  const dims = dimensionsForPoint(config, pc, xscale, p);\r\n  const strum = {\r\n    p1: p,\r\n    dims: dims,\r\n    minX: xscale(dims.left),\r\n    maxX: xscale(dims.right),\r\n    minY: 0,\r\n    maxY: h(config),\r\n  };\r\n\r\n  // Make sure that the point is within the bounds\r\n  strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\r\n  strum.p2 = strum.p1.slice();\r\n\r\n  state.strums[dims.i] = strum;\r\n  state.strums.active = dims.i;\r\n};\r\n\r\nexport default onDragStart;\r\n","import onDragEnd from './onDragEnd';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\r\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\r\n\r\n  ids.forEach(d => {\r\n    state.strums.active = d;\r\n    removeStrum(state, pc);\r\n  });\r\n  onDragEnd(brushGroup, state, config, pc, events)();\r\n};\r\n\r\nexport default brushReset;\r\n","// Checks if the first dimension is directly left of the second dimension.\r\nconst consecutive = dimensions => (first, second) => {\r\n  const keys = Object.keys(dimensions);\r\n\r\n  return keys.some(\r\n    (d, i) =>\r\n      d === first ? i + i < keys.length && dimensions[i + 1] === second : false\r\n  );\r\n};\r\n\r\nexport default consecutive;\r\n","import { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\nimport onDrag from './onDrag';\r\nimport onDragStart from './onDragStart';\r\nimport removeStrum from './removeStrum';\r\nimport brushReset from './brushReset';\r\nimport w from '../../util/width';\r\nimport h from '../../util/height';\r\nimport consecutive from '../consecutive';\r\n\r\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\r\n  if (pc.g() === undefined || pc.g() === null) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  const _drag = drag();\r\n\r\n  // Map of current strums. Strums are stored per segment of the PC. A segment,\r\n  // being the area between two axes. The left most area is indexed at 0.\r\n  state.strums.active = undefined;\r\n  // Returns the width of the PC segment where currently a strum is being\r\n  // placed. NOTE: even though they are evenly spaced in our current\r\n  // implementation, we keep for when non-even spaced segments are supported as\r\n  // well.\r\n  state.strums.width = id =>\r\n    state.strums[id] === undefined\r\n      ? undefined\r\n      : state.strums[id].maxX - state.strums[id].minX;\r\n\r\n  pc.on('axesreorder.strums', () => {\r\n    const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\r\n\r\n    if (ids.length > 0) {\r\n      // We have some strums, which might need to be removed.\r\n      ids.forEach(d => {\r\n        const dims = state.strums[d].dims;\r\n        state.strums.active = d;\r\n        // If the two dimensions of the current strum are not next to each other\r\n        // any more, than we'll need to remove the strum. Otherwise we keep it.\r\n        if (!consecutive(config.dimensions)(dims.left, dims.right)) {\r\n          removeStrum(state, pc);\r\n        }\r\n      });\r\n      onDragEnd(brushGroup, state, config, pc, events)();\r\n    }\r\n  });\r\n\r\n  // Add a new svg group in which we draw the strums.\r\n  pc.selection\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'strums')\r\n    .attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n  // Install the required brushReset function\r\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\r\n\r\n  _drag\r\n    .on('start', onDragStart(state, config, pc, xscale))\r\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  // NOTE: The styling needs to be done here and not in the css. This is because\r\n  //       for 1D brushing, the canvas layers should not listen to\r\n  //       pointer-events._.\r\n  state.strumRect = pc.selection\r\n    .select('svg')\r\n    .insert('rect', 'g#strums')\r\n    .attr('id', 'strum-events')\r\n    .attr('x', config.margin.left)\r\n    .attr('y', config.margin.top)\r\n    .attr('width', w(config))\r\n    .attr('height', h(config) + 2)\r\n    .style('opacity', 0)\r\n    .call(_drag);\r\n};\r\n\r\nexport default install;\r\n","import uninstall from './uninstall';\r\nimport install from './install';\r\nimport selected from './selected';\r\n\r\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\r\n  const state = {\r\n    strums: {},\r\n    strumRect: {},\r\n  };\r\n\r\n  brushGroup.modes['2D-strums'] = {\r\n    install: install(brushGroup, state, config, pc, events, xscale),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(brushGroup, state, config),\r\n    brushState: () => state.strums,\r\n  };\r\n};\r\n\r\nexport default install2DStrums;\r\n","const uninstall = (state, pc) => () => {\r\n  pc.selection\r\n    .select('svg')\r\n    .select('g#arcs')\r\n    .remove();\r\n  pc.selection\r\n    .select('svg')\r\n    .select('rect#arc-events')\r\n    .remove();\r\n  pc.on('axesreorder.arcs', undefined);\r\n\r\n  delete pc.brushReset;\r\n\r\n  state.strumRect = undefined;\r\n};\r\n\r\nexport default uninstall;\r\n","const hypothenuse = (a, b) => Math.sqrt(a * a + b * b);\r\n\r\nexport default hypothenuse;\r\n","import hypothenuse from './util/hypothenuse';\r\n\r\n// [0, 2*PI] -> [-PI/2, PI/2]\r\nconst signedAngle = angle =>\r\n  angle > Math.PI ? 1.5 * Math.PI - angle : 0.5 * Math.PI - angle;\r\n\r\n/**\r\n * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\r\n * However, one can only select lines from 0 to PI, so we compute the\r\n * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\r\n * are 12 and 6 o'clock respectively.\r\n */\r\nconst containmentTest = arc => a => {\r\n  let startAngle = signedAngle(arc.startAngle);\r\n  let endAngle = signedAngle(arc.endAngle);\r\n\r\n  if (startAngle > endAngle) {\r\n    const tmp = startAngle;\r\n    startAngle = endAngle;\r\n    endAngle = tmp;\r\n  }\r\n\r\n  // test if segment angle is contained in angle interval\r\n  return a >= startAngle && a <= endAngle;\r\n};\r\n\r\nconst crossesStrum = (state, config) => (d, id) => {\r\n  const arc = state.arcs[id],\r\n    test = containmentTest(arc),\r\n    d1 = arc.dims.left,\r\n    d2 = arc.dims.right,\r\n    y1 = config.dimensions[d1].yscale,\r\n    y2 = config.dimensions[d2].yscale,\r\n    a = state.arcs.width(id),\r\n    b = y1(d[d1]) - y2(d[d2]),\r\n    c = hypothenuse(a, b),\r\n    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\r\n  return test(angle);\r\n};\r\n\r\nconst selected = (brushGroup, state, config) => {\r\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\r\n  const brushed = config.data;\r\n\r\n  if (ids.length === 0) {\r\n    return brushed;\r\n  }\r\n\r\n  const crossTest = crossesStrum(state, config);\r\n\r\n  return brushed.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return ids.every(id => crossTest(d, id));\r\n      case 'OR':\r\n        return ids.some(id => crossTest(d, id));\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","const removeStrum = (state, pc) => {\r\n  const arc = state.arcs[state.arcs.active],\r\n    svg = pc.selection.select('svg').select('g#arcs');\r\n\r\n  delete state.arcs[state.arcs.active];\r\n  state.arcs.active = undefined;\r\n  svg.selectAll('line#arc-' + arc.dims.i).remove();\r\n  svg.selectAll('circle#arc-' + arc.dims.i).remove();\r\n  svg.selectAll('path#arc-' + arc.dims.i).remove();\r\n};\r\n\r\nexport default removeStrum;\r\n","import selected from './selected';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\r\n  const arc = state.arcs[state.arcs.active];\r\n\r\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\r\n  // considered a drag without move. So we have to deal with that case\r\n  if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\r\n    removeStrum(state, pc);\r\n  }\r\n\r\n  if (arc) {\r\n    const angle = state.arcs.startAngle(state.arcs.active);\r\n\r\n    arc.startAngle = angle;\r\n    arc.endAngle = angle;\r\n    arc.arc\r\n      .outerRadius(state.arcs.length(state.arcs.active))\r\n      .startAngle(angle)\r\n      .endAngle(angle);\r\n  }\r\n\r\n  state.arcs.active = undefined;\r\n  config.brushed = selected(brushGroup, state, config);\r\n  pc.renderBrushed();\r\n  events.call('brushend', pc, config.brushed);\r\n};\r\n\r\nexport default onDragEnd;\r\n","import { event, select } from 'd3-selection';\r\nimport { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\n\r\nconst drawStrum = (brushGroup, state, config, pc, events, arc, activePoint) => {\r\n  const svg = pc.selection.select('svg').select('g#arcs'),\r\n    id = arc.dims.i,\r\n    points = [arc.p2, arc.p3],\r\n    _line = svg\r\n      .selectAll('line#arc-' + id)\r\n      .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\r\n    circles = svg.selectAll('circle#arc-' + id).data(points),\r\n    _drag = drag(),\r\n    _path = svg.selectAll('path#arc-' + id).data([arc]);\r\n\r\n  _path\r\n    .enter()\r\n    .append('path')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc')\r\n    .style('fill', 'orange')\r\n    .style('opacity', 0.5);\r\n\r\n  _path\r\n    .attr('d', arc.arc)\r\n    .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\r\n\r\n  _line\r\n    .enter()\r\n    .append('line')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc');\r\n\r\n  _line\r\n    .attr('x1', d => d.p1[0])\r\n    .attr('y1', d => d.p1[1])\r\n    .attr('x2', d => d.p2[0])\r\n    .attr('y2', d => d.p2[1])\r\n    .attr('stroke', 'black')\r\n    .attr('stroke-width', 2);\r\n\r\n  _drag\r\n    .on('drag', (d, i) => {\r\n      const ev = event;\r\n      i = i + 2;\r\n\r\n      arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\r\n      arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\r\n\r\n      const angle =\r\n        i === 3 ? state.arcs.startAngle(id) : state.arcs.endAngle(id);\r\n\r\n      if (\r\n        (arc.startAngle < Math.PI &&\r\n          arc.endAngle < Math.PI &&\r\n          angle < Math.PI) ||\r\n        (arc.startAngle >= Math.PI &&\r\n          arc.endAngle >= Math.PI &&\r\n          angle >= Math.PI)\r\n      ) {\r\n        if (i === 2) {\r\n          arc.endAngle = angle;\r\n          arc.arc.endAngle(angle);\r\n        } else if (i === 3) {\r\n          arc.startAngle = angle;\r\n          arc.arc.startAngle(angle);\r\n        }\r\n      }\r\n\r\n      drawStrum(brushGroup, state, config, pc, events, arc, i - 2);\r\n    })\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  circles\r\n    .enter()\r\n    .append('circle')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc');\r\n\r\n  circles\r\n    .attr('cx', d => d[0])\r\n    .attr('cy', d => d[1])\r\n    .attr('r', 5)\r\n    .style(\r\n      'opacity',\r\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\r\n    )\r\n    .on('mouseover', function() {\r\n      select(this).style('opacity', 0.8);\r\n    })\r\n    .on('mouseout', function() {\r\n      select(this).style('opacity', 0);\r\n    })\r\n    .call(_drag);\r\n};\r\n\r\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\r\n  const ev = event,\r\n    arc = state.arcs[state.arcs.active];\r\n\r\n  // Make sure that the point is within the bounds\r\n  arc.p2[0] = Math.min(\r\n    Math.max(arc.minX + 1, ev.x - config.margin.left),\r\n    arc.maxX\r\n  );\r\n  arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - config.margin.top), arc.maxY);\r\n  arc.p3 = arc.p2.slice();\r\n  drawStrum(brushGroup, state, config, pc, events, arc, 1);\r\n};\r\n\r\nexport default onDrag;\r\n","import { mouse } from 'd3-selection';\r\nimport { arc as d3Arc } from 'd3-shape';\r\nimport dimensionsForPoint from '../dimensionsForPoint';\r\nimport h from '../../util/height';\r\n\r\n// First we need to determine between which two axes the arc was started.\r\n// This will determine the freedom of movement, because a arc can\r\n// logically only happen between two axes, so no movement outside these axes\r\n// should be allowed.\r\nconst onDragStart = (state, config, pc, xscale) => () => {\r\n  const p = mouse(state.strumRect.node());\r\n\r\n  p[0] = p[0] - config.margin.left;\r\n  p[1] = p[1] - config.margin.top;\r\n\r\n  const dims = dimensionsForPoint(config, pc, xscale, p);\r\n  const arc = {\r\n    p1: p,\r\n    dims: dims,\r\n    minX: xscale(dims.left),\r\n    maxX: xscale(dims.right),\r\n    minY: 0,\r\n    maxY: h(config),\r\n    startAngle: undefined,\r\n    endAngle: undefined,\r\n    arc: d3Arc().innerRadius(0),\r\n  };\r\n\r\n  // Make sure that the point is within the bounds\r\n  arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\r\n  arc.p2 = arc.p1.slice();\r\n  arc.p3 = arc.p1.slice();\r\n\r\n  state.arcs[dims.i] = arc;\r\n  state.arcs.active = dims.i;\r\n};\r\n\r\nexport default onDragStart;\r\n","import onDragEnd from './onDragEnd';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\r\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\r\n\r\n  ids.forEach(d => {\r\n    state.arcs.active = d;\r\n    removeStrum(state, pc);\r\n  });\r\n  onDragEnd(brushGroup, state, config, pc, events)();\r\n};\r\n\r\nexport default brushReset;\r\n","import { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\nimport onDrag from './onDrag';\r\nimport onDragStart from './onDragStart';\r\nimport removeStrum from './removeStrum';\r\nimport brushReset from './brushReset';\r\nimport w from '../../util/width';\r\nimport h from '../../util/height';\r\n\r\nimport hypothenuse from './util/hypothenuse';\r\nimport consecutive from '../consecutive';\r\n\r\n// returns angles in [-PI/2, PI/2]\r\nconst angle = (p1, p2) => {\r\n  const a = p1[0] - p2[0],\r\n    b = p1[1] - p2[1],\r\n    c = hypothenuse(a, b);\r\n\r\n  return Math.asin(b / c);\r\n};\r\n\r\nconst endAngle = state => id => {\r\n  const arc = state.arcs[id];\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n  let sAngle = angle(arc.p1, arc.p2),\r\n    uAngle = -sAngle + Math.PI / 2;\r\n\r\n  if (arc.p1[0] > arc.p2[0]) {\r\n    uAngle = 2 * Math.PI - uAngle;\r\n  }\r\n\r\n  return uAngle;\r\n};\r\n\r\nconst startAngle = state => id => {\r\n  const arc = state.arcs[id];\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  let sAngle = angle(arc.p1, arc.p3),\r\n    uAngle = -sAngle + Math.PI / 2;\r\n\r\n  if (arc.p1[0] > arc.p3[0]) {\r\n    uAngle = 2 * Math.PI - uAngle;\r\n  }\r\n\r\n  return uAngle;\r\n};\r\n\r\nconst length = state => id => {\r\n  const arc = state.arcs[id];\r\n\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  const a = arc.p1[0] - arc.p2[0],\r\n    b = arc.p1[1] - arc.p2[1];\r\n\r\n  return hypothenuse(a, b);\r\n};\r\n\r\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  const _drag = drag();\r\n\r\n  // Map of current arcs. arcs are stored per segment of the PC. A segment,\r\n  // being the area between two axes. The left most area is indexed at 0.\r\n  state.arcs.active = undefined;\r\n  // Returns the width of the PC segment where currently a arc is being\r\n  // placed. NOTE: even though they are evenly spaced in our current\r\n  // implementation, we keep for when non-even spaced segments are supported as\r\n  // well.\r\n  state.arcs.width = id => {\r\n    const arc = state.arcs[id];\r\n    return arc === undefined ? undefined : arc.maxX - arc.minX;\r\n  };\r\n\r\n  // returns angles in [0, 2 * PI]\r\n  state.arcs.endAngle = endAngle(state);\r\n  state.arcs.startAngle = startAngle(state);\r\n  state.arcs.length = length(state);\r\n\r\n  pc.on('axesreorder.arcs', () => {\r\n    const ids = Object.getOwnPropertyNames(arcs).filter(d => !isNaN(d));\r\n\r\n    if (ids.length > 0) {\r\n      // We have some arcs, which might need to be removed.\r\n      ids.forEach(d => {\r\n        const dims = arcs[d].dims;\r\n        state.arcs.active = d;\r\n        // If the two dimensions of the current arc are not next to each other\r\n        // any more, than we'll need to remove the arc. Otherwise we keep it.\r\n        if (!consecutive(dims)(dims.left, dims.right)) {\r\n          removeStrum(state, pc);\r\n        }\r\n      });\r\n      onDragEnd(brushGroup, state, config, pc, events)();\r\n    }\r\n  });\r\n\r\n  // Add a new svg group in which we draw the arcs.\r\n  pc.selection\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'arcs')\r\n    .attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n  // Install the required brushReset function\r\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\r\n\r\n  _drag\r\n    .on('start', onDragStart(state, config, pc, xscale))\r\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  // NOTE: The styling needs to be done here and not in the css. This is because\r\n  //       for 1D brushing, the canvas layers should not listen to\r\n  //       pointer-events._.\r\n  state.strumRect = pc.selection\r\n    .select('svg')\r\n    .insert('rect', 'g#arcs')\r\n    .attr('id', 'arc-events')\r\n    .attr('x', config.margin.left)\r\n    .attr('y', config.margin.top)\r\n    .attr('width', w(config))\r\n    .attr('height', h(config) + 2)\r\n    .style('opacity', 0)\r\n    .call(_drag);\r\n};\r\n\r\nexport default install;\r\n","import uninstall from './uninstall';\r\nimport install from './install';\r\nimport selected from './selected';\r\n\r\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\r\n  const state = {\r\n    arcs: {},\r\n    strumRect: {},\r\n  };\r\n\r\n  brushGroup.modes['angular'] = {\r\n    install: install(brushGroup, state, config, pc, events, xscale),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(brushGroup, state, config),\r\n    brushState: () => state.arcs,\r\n  };\r\n};\r\n\r\nexport default installAngularBrush;\r\n","// calculate 2d intersection of line a->b with line c->d\r\n// points are objects with x and y properties\r\nconst intersection = (a, b, c, d) => {\r\n  return {\r\n    x:\r\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\r\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\r\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\r\n    y:\r\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\r\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\r\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\r\n  };\r\n};\r\n\r\nexport default intersection;\r\n","import {select, selectAll} from 'd3-selection';\r\n\r\n// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\r\n// (so you can choose to save it to disk, etc.)\r\nconst mergeParcoords = pc => callback => {\r\n  // Retina display, etc.\r\n  const devicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n  // Create a canvas element to store the merged canvases\r\n  const mergedCanvas = document.createElement('canvas');\r\n\r\n  const foregroundCanvas = pc.canvas.foreground;\r\n  // We will need to adjust for canvas margins to align the svg and canvas\r\n  const canvasMarginLeft = Number(foregroundCanvas.style.marginLeft.replace('px',''));\r\n\r\n  const textTopAdjust = 15;\r\n  const canvasMarginTop = Number(foregroundCanvas.style.marginTop.replace('px','')) + textTopAdjust;\r\n  const width = (foregroundCanvas.clientWidth + canvasMarginLeft) * devicePixelRatio;\r\n  const height = (foregroundCanvas.clientHeight + canvasMarginTop) * devicePixelRatio;\r\n  mergedCanvas.width = width + 50; // pad so that svg labels at right will not get cut off\r\n  mergedCanvas.height = height + 30; // pad so that svg labels at bottom will not get cut off\r\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\r\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\r\n\r\n  // Give the canvas a white background\r\n  const context = mergedCanvas.getContext('2d');\r\n  context.fillStyle = '#ffffff';\r\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\r\n\r\n  // Merge all the canvases\r\n  for (const key in pc.canvas) {\r\n    context.drawImage(\r\n      pc.canvas[key],\r\n      canvasMarginLeft * devicePixelRatio,\r\n      canvasMarginTop * devicePixelRatio,\r\n      width - canvasMarginLeft * devicePixelRatio,\r\n      height - canvasMarginTop * devicePixelRatio\r\n    );\r\n  }\r\n\r\n  // Add SVG elements to canvas\r\n  const DOMURL = window.URL || window.webkitURL || window;\r\n  const serializer = new XMLSerializer();\r\n  // axis labels are translated (0,-5) so we will clone the svg\r\n  //   and translate down so the labels are drawn on the canvas\r\n  const svgNodeCopy = pc.selection.select('svg').node().cloneNode(true);\r\n  svgNodeCopy.setAttribute('transform', 'translate(0,' + textTopAdjust + ')');\r\n  svgNodeCopy.setAttribute('height', svgNodeCopy.getAttribute('height') + textTopAdjust);\r\n  // text will need fill attribute since css styles will not get picked up\r\n  //   this is not sophisticated since it doesn't look up css styles\r\n  //   if the user changes\r\n  select(svgNodeCopy).selectAll('text').attr('fill', 'black');\r\n  const svgStr = serializer.serializeToString(\r\n    svgNodeCopy\r\n  );\r\n\r\n  // Create a Data URI.\r\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\r\n  const img = new Image();\r\n  img.onload = () => {\r\n    context.drawImage(\r\n      img,\r\n      0,\r\n      0,\r\n      img.width * devicePixelRatio,\r\n      img.height * devicePixelRatio\r\n    );\r\n    if (typeof callback === 'function') {\r\n      callback(mergedCanvas);\r\n    }\r\n  };\r\n  img.src = src;\r\n};\r\n\r\nexport default mergeParcoords;\r\n","import { brushSelection } from 'd3-brush';\r\nimport { matchArray } from 'searchjs';\r\n\r\nconst selected = (config, pc) => () => {\r\n  let actives = [];\r\n  let extents = [];\r\n  let ranges = {};\r\n  //get brush selections from each node, convert to actual values\r\n  //invert order of values in array to comply with the parcoords architecture\r\n  if (config.brushes.length === 0) {\r\n    let nodes = pc\r\n      .g()\r\n      .selectAll('.brush')\r\n      .nodes();\r\n    for (let k = 0; k < nodes.length; k++) {\r\n      if (brushSelection(nodes[k]) !== null) {\r\n        actives.push(nodes[k].__data__);\r\n        let values = [];\r\n        let ranger = brushSelection(nodes[k]);\r\n        if (\r\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\r\n          'number'\r\n        ) {\r\n          for (let i = 0; i < ranger.length; i++) {\r\n            if (\r\n              actives.includes(nodes[k].__data__) &&\r\n              config.flipAxes.includes(nodes[k].__data__)\r\n            ) {\r\n              values.push(\r\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\r\n              );\r\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\r\n              values.unshift(\r\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\r\n              );\r\n            }\r\n          }\r\n          extents.push(values);\r\n          for (let ii = 0; ii < extents.length; ii++) {\r\n            if (extents[ii].length === 0) {\r\n              extents[ii] = [1, 1];\r\n            }\r\n          }\r\n        } else {\r\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\r\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\r\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\r\n          for (let j = 0; j < dimRange.length; j++) {\r\n            if (\r\n              dimRange[j] >= ranger[0] &&\r\n              dimRange[j] <= ranger[1] &&\r\n              actives.includes(nodes[k].__data__) &&\r\n              config.flipAxes.includes(nodes[k].__data__)\r\n            ) {\r\n              values.push(dimRange[j]);\r\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\r\n              values.unshift(dimRange[j]);\r\n            }\r\n          }\r\n          extents.push(values);\r\n          for (let ii = 0; ii < extents.length; ii++) {\r\n            if (extents[ii].length === 0) {\r\n              extents[ii] = [1, 1];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // test if within range\r\n    const within = {\r\n      date: function(d, p, dimension) {\r\n        let category = d[p];\r\n        let categoryIndex = config.dimensions[p].yscale\r\n          .domain()\r\n          .indexOf(category);\r\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n          categoryIndex\r\n        ];\r\n        return (\r\n          categoryRangeValue >= ranges[p][0] &&\r\n          categoryRangeValue <= ranges[p][1]\r\n        );\r\n      },\r\n      number: function(d, p, dimension) {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      },\r\n      string: function(d, p, dimension) {\r\n        let category = d[p];\r\n        let categoryIndex = config.dimensions[p].yscale\r\n          .domain()\r\n          .indexOf(category);\r\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n          categoryIndex\r\n        ];\r\n        return (\r\n          categoryRangeValue >= ranges[p][0] &&\r\n          categoryRangeValue <= ranges[p][1]\r\n        );\r\n      },\r\n    };\r\n\r\n    return matchArray(config.data, config.filters).filter(d =>\r\n      actives.every((p, dimension) =>\r\n        within[config.dimensions[p].type](d, p, dimension)\r\n      )\r\n    );\r\n  } else {\r\n    // need to get data from each brush instead of each axis\r\n    // first must find active axes by iterating through all brushes\r\n    // then go through similiar process as above.\r\n    let multiBrushData = [];\r\n    for (let idx = 0; idx < config.brushes.length; idx++) {\r\n      let brush = config.brushes[idx];\r\n      let values = [];\r\n      let ranger = brush.extent;\r\n      let actives = [brush.data];\r\n      if (\r\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\r\n      ) {\r\n        for (let i = 0; i < ranger.length; i++) {\r\n          if (\r\n            actives.includes(brush.data) &&\r\n            config.flipAxes.includes(brush.data)\r\n          ) {\r\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\r\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\r\n            values.unshift(\r\n              config.dimensions[brush.data].yscale.invert(ranger[i])\r\n            );\r\n          }\r\n        }\r\n        extents.push(values);\r\n        for (let ii = 0; ii < extents.length; ii++) {\r\n          if (extents[ii].length === 0) {\r\n            extents[ii] = [1, 1];\r\n          }\r\n        }\r\n      } else {\r\n        ranges[brush.data] = brush.extent;\r\n        let dimRange = config.dimensions[brush.data].yscale.range();\r\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\r\n        for (let j = 0; j < dimRange.length; j++) {\r\n          if (\r\n            dimRange[j] >= ranger[0] &&\r\n            dimRange[j] <= ranger[1] &&\r\n            actives.includes(brush.data) &&\r\n            config.flipAxes.includes(brush.data)\r\n          ) {\r\n            values.push(dimRange[j]);\r\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\r\n            values.unshift(dimRange[j]);\r\n          }\r\n        }\r\n        extents.push(values);\r\n        for (let ii = 0; ii < extents.length; ii++) {\r\n          if (extents[ii].length === 0) {\r\n            extents[ii] = [1, 1];\r\n          }\r\n        }\r\n      }\r\n      let within = {\r\n        date: function(d, p, dimension) {\r\n          let category = d[p];\r\n          let categoryIndex = config.dimensions[p].yscale\r\n            .domain()\r\n            .indexOf(category);\r\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n            categoryIndex\r\n          ];\r\n          return (\r\n            categoryRangeValue >= ranges[p][0] &&\r\n            categoryRangeValue <= ranges[p][1]\r\n          );\r\n        },\r\n        number: function(d, p, dimension) {\r\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\r\n        },\r\n        string: function(d, p, dimension) {\r\n          let category = d[p];\r\n          let categoryIndex = config.dimensions[p].yscale\r\n            .domain()\r\n            .indexOf(category);\r\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n            categoryIndex\r\n          ];\r\n          return (\r\n            categoryRangeValue >= ranges[p][0] &&\r\n            categoryRangeValue <= ranges[p][1]\r\n          );\r\n        },\r\n      };\r\n\r\n      // filter data, but instead of returning it now,\r\n      // put it into multiBrush data which is returned after\r\n      // all brushes are iterated through.\r\n      let filtered = matchArray(config.data, config.filters).filter(d =>\r\n        actives.every((p, dimension) =>\r\n          within[config.dimensions[p].type](d, p, dimension)\r\n        )\r\n      );\r\n      for (let z = 0; z < filtered.length; z++) {\r\n        multiBrushData.push(filtered[z]);\r\n      }\r\n      actives = [];\r\n      ranges = {};\r\n    }\r\n    return multiBrushData;\r\n  }\r\n};\r\n\r\nexport default selected;\r\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\r\n  if (predicate === null) {\r\n    return brushGroup.predicate;\r\n  }\r\n\r\n  predicate = String(predicate).toUpperCase();\r\n  if (predicate !== 'AND' && predicate !== 'OR') {\r\n    throw new Error('Invalid predicate ' + predicate);\r\n  }\r\n\r\n  brushGroup.predicate = predicate;\r\n  config.brushed = brushGroup.currentMode().selected();\r\n  pc.renderBrushed();\r\n  return pc;\r\n};\r\n\r\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\r\n  if (mode === null) {\r\n    return brushGroup.mode;\r\n  }\r\n\r\n  if (pc.brushModes().indexOf(mode) === -1) {\r\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\r\n  }\r\n\r\n  // Make sure that we don't trigger unnecessary events by checking if the mode\r\n  // actually changes.\r\n  if (mode !== brushGroup.mode) {\r\n    // When changing brush modes, the first thing we need to do is clearing any\r\n    // brushes from the current mode, if any.\r\n    if (brushGroup.mode !== 'None') {\r\n      pc.brushReset();\r\n    }\r\n\r\n    // Next, we need to 'uninstall' the current brushMode.\r\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\r\n    // Finally, we can install the requested one.\r\n    brushGroup.mode = mode;\r\n    brushGroup.modes[brushGroup.mode].install();\r\n    if (mode === 'None') {\r\n      delete pc.brushPredicate;\r\n    } else {\r\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\r\n    }\r\n  }\r\n\r\n  return pc;\r\n};\r\n\r\nexport default brushMode;\r\n","/**\r\n * dimension display names\r\n *\r\n * @param config\r\n * @param d\r\n * @returns {*}\r\n */\r\nconst dimensionLabels = config => d =>\r\n  config.dimensions[d].title ? config.dimensions[d].title : d;\r\n\r\nexport default dimensionLabels;\r\n","import { select } from 'd3-selection';\r\n\r\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\r\n  function(dimension) {\r\n    pc.flip(dimension);\r\n    pc.brushReset(dimension);\r\n    select(this.parentElement)\r\n      .transition()\r\n      .duration(config.animationTime)\r\n      .call(axis.scale(config.dimensions[dimension].yscale));\r\n    pc.render();\r\n  };\r\n\r\nexport default flipAxisAndUpdatePCP;\r\n","import { event } from 'd3-selection';\r\n\r\nconst rotateLabels = (config, pc) => {\r\n  if (!config.rotateLabels) return;\r\n\r\n  let delta = event.deltaY;\r\n  delta = delta < 0 ? -5 : delta;\r\n  delta = delta > 0 ? 5 : delta;\r\n\r\n  config.dimensionTitleRotation += delta;\r\n  pc.svg\r\n    .selectAll('text.label')\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    );\r\n  event.preventDefault();\r\n};\r\n\r\nexport default rotateLabels;\r\n","import { select } from 'd3-selection';\r\n\r\nimport dimensionLabels from '../util/dimensionLabels';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\nimport rotateLabels from '../util/rotateLabels';\r\n\r\nconst updateAxes = (config, pc, position, axis, flags) => (\r\n  animationTime = null\r\n) => {\r\n  if (animationTime === null) {\r\n    animationTime = config.animationTime;\r\n  }\r\n\r\n  const g_data = pc.svg\r\n    .selectAll('.dimension')\r\n    .data(pc.getOrderedDimensionKeys());\r\n  // Enter\r\n  g_data\r\n    .enter()\r\n    .append('svg:g')\r\n    .attr('class', 'dimension')\r\n    .attr('transform', p => 'translate(' + position(p) + ')')\r\n    .style('opacity', 0)\r\n    .append('svg:g')\r\n    .attr('class', 'axis')\r\n    .attr('transform', 'translate(0,0)')\r\n    .each(function(d) {\r\n      const axisElement = select(this).call(\r\n        pc.applyAxisConfig(axis, config.dimensions[d])\r\n      );\r\n\r\n      axisElement\r\n        .selectAll('path')\r\n        .style('fill', 'none')\r\n        .style('stroke', '#222')\r\n        .style('shape-rendering', 'crispEdges');\r\n\r\n      axisElement\r\n        .selectAll('line')\r\n        .style('fill', 'none')\r\n        .style('stroke', '#222')\r\n        .style('shape-rendering', 'crispEdges');\r\n    })\r\n    .append('svg:text')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('class', 'label')\r\n    .attr('x', 0)\r\n    .attr('y', 0)\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    )\r\n    .text(dimensionLabels(config))\r\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\r\n    .on('wheel', rotateLabels(config, pc));\r\n\r\n  // Update\r\n  g_data.attr('opacity', 0);\r\n  g_data\r\n    .select('.axis')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .each(function(d) {\r\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\r\n    });\r\n  g_data\r\n    .select('.label')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .text(dimensionLabels(config))\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    );\r\n\r\n  // Exit\r\n  g_data.exit().remove();\r\n\r\n  const g = pc.svg.selectAll('.dimension');\r\n  g.transition()\r\n    .duration(animationTime)\r\n    .attr('transform', p => 'translate(' + position(p) + ')')\r\n    .style('opacity', 1);\r\n\r\n  pc.svg\r\n    .selectAll('.axis')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .each(function(d) {\r\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\r\n    });\r\n\r\n  if (flags.brushable) pc.brushable();\r\n  if (flags.reorderable) pc.reorderable();\r\n  if (pc.brushMode() !== 'None') {\r\n    const mode = pc.brushMode();\r\n    pc.brushMode('None');\r\n    pc.brushMode(mode);\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default updateAxes;\r\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\r\nconst getRange = config => {\r\n  const h = config.height - config.margin.top - config.margin.bottom;\r\n\r\n  if (config.nullValueSeparator == 'bottom') {\r\n    return [\r\n      h +\r\n        1 -\r\n        config.nullValueSeparatorPadding.bottom -\r\n        config.nullValueSeparatorPadding.top,\r\n      1,\r\n    ];\r\n  } else if (config.nullValueSeparator == 'top') {\r\n    return [\r\n      h + 1,\r\n      1 +\r\n        config.nullValueSeparatorPadding.bottom +\r\n        config.nullValueSeparatorPadding.top,\r\n    ];\r\n  }\r\n  return [h + 1, 1];\r\n};\r\n\r\nexport default getRange;\r\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\r\nimport { extent } from 'd3-array';\r\n\r\nimport getRange from '../util/getRange';\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\nconst autoscale = (config, pc, xscale, ctx) =>\r\n  function() {\r\n    // yscale\r\n    const defaultScales = {\r\n      date: function(k) {\r\n        let _extent = extent(config.data, d => (d[k] ? d[k].getTime() : null));\r\n        // special case if single value\r\n        if (_extent[0] === _extent[1]) {\r\n          return scalePoint()\r\n            .domain(_extent)\r\n            .range(getRange(config));\r\n        }\r\n        if (config.flipAxes.includes(k)) {\r\n          _extent = _extent.map(val => tempDate.unshift(val));\r\n        }\r\n        return scaleTime()\r\n          .domain(_extent)\r\n          .range(getRange(config));\r\n      },\r\n      number: function(k) {\r\n        let _extent = extent(config.data, d => +d[k]);\r\n        // special case if single value\r\n        if (_extent[0] === _extent[1]) {\r\n          return scalePoint()\r\n            .domain(_extent)\r\n            .range(getRange(config));\r\n        }\r\n        if (config.flipAxes.includes(k)) {\r\n          _extent = _extent.map(val => tempDate.unshift(val));\r\n        }\r\n        return scaleLinear()\r\n          .domain(_extent)\r\n          .range(getRange(config));\r\n      },\r\n      string: function(k) {\r\n        let counts = {},\r\n          domain = [];\r\n        // Let's get the count for each value so that we can sort the domain based\r\n        // on the number of items for each value.\r\n        config.data.map(p => {\r\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\r\n            return null; // null values will be drawn beyond the horizontal null value separator!\r\n          }\r\n          if (counts[p[k]] === undefined) {\r\n            counts[p[k]] = 1;\r\n          } else {\r\n            counts[p[k]] = counts[p[k]] + 1;\r\n          }\r\n        });\r\n        if (config.flipAxes.includes(k)) {\r\n          domain = Object.getOwnPropertyNames(counts).sort();\r\n        } else {\r\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\r\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\r\n            domain.push(tempArr.pop());\r\n          }\r\n        }\r\n\r\n        //need to create an ordinal scale for categorical data\r\n        let categoricalRange = [];\r\n        if (domain.length === 1) {\r\n          //edge case\r\n          domain = [' ', domain[0], ' '];\r\n        }\r\n        let addBy = getRange(config)[0] / (domain.length - 1);\r\n        for (let j = 0; j < domain.length; j++) {\r\n          if (categoricalRange.length === 0) {\r\n            categoricalRange.push(0);\r\n            continue;\r\n          }\r\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\r\n        }\r\n        return scaleOrdinal()\r\n          .domain(domain)\r\n          .range(categoricalRange);\r\n      },\r\n    };\r\n    Object.keys(config.dimensions).forEach(function(k) {\r\n      if (\r\n        config.dimensions[k].yscale === undefined ||\r\n        config.dimensions[k].yscale === null\r\n      ) {\r\n        config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](\r\n          k\r\n        );\r\n      }\r\n    });\r\n\r\n    // xscale\r\n    xscale.range([0, w(config)], 1);\r\n    // Retina display, etc.\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n    // canvas sizes\r\n    pc.selection\r\n      .selectAll('canvas')\r\n      .style('margin-top', config.margin.top + 'px')\r\n      .style('margin-left', config.margin.left + 'px')\r\n      .style('width', w(config) + 2 + 'px')\r\n      .style('height', h(config) + 2 + 'px')\r\n      .attr('width', (w(config) + 2) * devicePixelRatio)\r\n      .attr('height', (h(config) + 2) * devicePixelRatio);\r\n    // default styles, needs to be set when canvas width changes\r\n    ctx.foreground.strokeStyle = config.color;\r\n    ctx.foreground.lineWidth = config.lineWidth;\r\n    ctx.foreground.globalCompositeOperation = config.composite;\r\n    ctx.foreground.globalAlpha = config.alpha;\r\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.brushed.strokeStyle = config.brushedColor;\r\n    ctx.brushed.lineWidth = config.lineWidth;\r\n    ctx.brushed.globalCompositeOperation = config.composite;\r\n    ctx.brushed.globalAlpha = config.alpha;\r\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.highlight.lineWidth = config.highlightedLineWidth;\r\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.marked.lineWidth = config.markedLineWidth;\r\n    ctx.marked.shadowColor = config.markedShadowColor;\r\n    ctx.marked.shadowBlur = config.markedShadowBlur;\r\n    ctx.marked.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    return this;\r\n  };\r\n\r\nexport default autoscale;\r\n","import { brushSelection, brushY } from 'd3-brush';\r\nimport { event, select } from 'd3-selection';\r\n\r\nconst brushable = (config, pc, flags) =>\r\n  function() {\r\n    if (!pc.g()) {\r\n      pc.createAxes();\r\n    }\r\n\r\n    const g = pc.g();\r\n\r\n    // Add and store a brush for each axis.\r\n    g.append('svg:g')\r\n      .attr('class', 'brush')\r\n      .each(function(d) {\r\n        if (config.dimensions[d] !== undefined) {\r\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\r\n            [-15, 0],\r\n            [15, config.dimensions[d].yscale.range()[0]],\r\n          ]);\r\n          select(this).call(\r\n            config.dimensions[d]['brush']\r\n              .on('start', function() {\r\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\r\n                  pc.brushReset();\r\n                }\r\n              })\r\n              .on('brush', function() {\r\n                if (!event.sourceEvent.ctrlKey) {\r\n                  pc.brush();\r\n                }\r\n              })\r\n              .on('end', function() {\r\n                // save brush selection is ctrl key is held\r\n                // store important brush information and\r\n                // the html element of the selection,\r\n                // to make a dummy selection element\r\n                if (event.sourceEvent.ctrlKey) {\r\n                  let html = select(this)\r\n                    .select('.selection')\r\n                    .nodes()[0].outerHTML;\r\n                  html = html.replace(\r\n                    'class=\"selection\"',\r\n                    'class=\"selection dummy' +\r\n                      ' selection-' +\r\n                      config.brushes.length +\r\n                      '\"'\r\n                  );\r\n                  let dat = select(this).nodes()[0].__data__;\r\n                  let brush = {\r\n                    id: config.brushes.length,\r\n                    extent: brushSelection(this),\r\n                    html: html,\r\n                    data: dat,\r\n                  };\r\n                  config.brushes.push(brush);\r\n                  select(select(this).nodes()[0].parentNode)\r\n                    .select('.axis')\r\n                    .nodes()[0].outerHTML += html;\r\n                  pc.brush();\r\n                  config.dimensions[d].brush.move(select(this, null));\r\n                  select(this)\r\n                    .select('.selection')\r\n                    .attr('style', 'display:none');\r\n                  pc.brushable();\r\n                } else {\r\n                  pc.brush();\r\n                }\r\n              })\r\n          );\r\n          select(this).on('dblclick', function() {\r\n            pc.brushReset(d);\r\n          });\r\n        }\r\n      });\r\n\r\n    flags.brushable = true;\r\n    return this;\r\n  };\r\n\r\nexport default brushable;\r\n","import { extent } from 'd3-array';\r\n\r\nconst commonScale = (config, pc) =>\r\n  function(global, type) {\r\n    const t = type || 'number';\r\n    if (typeof global === 'undefined') {\r\n      global = true;\r\n    }\r\n\r\n    // try to autodetect dimensions and create scales\r\n    if (!Object.keys(config.dimensions).length) {\r\n      pc.detectDimensions();\r\n    }\r\n    pc.autoscale();\r\n\r\n    // scales of the same type\r\n    const scales = Object.keys(config.dimensions).filter(\r\n      p => config.dimensions[p].type == t\r\n    );\r\n\r\n    if (global) {\r\n      let _extent = extent(\r\n        scales\r\n          .map(d => config.dimensions[d].yscale.domain())\r\n          .reduce((cur, acc) => cur.concat(acc))\r\n      );\r\n\r\n      scales.forEach(d => {\r\n        config.dimensions[d].yscale.domain(_extent);\r\n      });\r\n    } else {\r\n      scales.forEach(d => {\r\n        config.dimensions[d].yscale.domain(extent(config.data, d => +d[k]));\r\n      });\r\n    }\r\n\r\n    // update centroids\r\n    if (config.bundleDimension !== null) {\r\n      pc.bundleDimension(config.bundleDimension);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\nexport default commonScale;\r\n","const computeRealCentroids = (dimensions, position) => row =>\r\n  Object.keys(dimensions).map(d => {\r\n    const x = position(d);\r\n    const y = dimensions[d].yscale(row[d]);\r\n    return [x, y];\r\n  });\r\n\r\nexport default computeRealCentroids;\r\n","const isValid = d => d !== null && d !== undefined;\r\n\r\nconst applyDimensionDefaults = (config, pc) =>\r\n  function(dims) {\r\n    const types = pc.detectDimensionTypes(config.data);\r\n    dims = dims ? dims : Object.keys(types);\r\n\r\n    return dims.reduce((acc, cur, i) => {\r\n      const k = config.dimensions[cur] ? config.dimensions[cur] : {};\r\n      acc[cur] = {\r\n        ...k,\r\n        orient: isValid(k.orient) ? k.orient : 'left',\r\n        ticks: isValid(k.ticks) ? k.ticks : 5,\r\n        innerTickSize: isValid(k.innerTickSize) ? k.innerTickSize : 6,\r\n        outerTickSize: isValid(k.outerTickSize) ? k.outerTickSize : 0,\r\n        tickPadding: isValid(k.tickPadding) ? k.tickPadding : 3,\r\n        type: isValid(k.type) ? k.type : types[cur],\r\n        index: isValid(k.index) ? k.index : i,\r\n      };\r\n\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\nexport default applyDimensionDefaults;\r\n","import { select } from 'd3-selection';\r\n\r\nimport dimensionLabels from '../util/dimensionLabels';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\nimport rotateLabels from '../util/rotateLabels';\r\n\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\n/**\r\n * Create static SVG axes with dimension names, ticks, and labels.\r\n *\r\n * @param config\r\n * @param pc\r\n * @param xscale\r\n * @param flags\r\n * @param axis\r\n * @returns {Function}\r\n */\r\nconst createAxes = (config, pc, xscale, flags, axis) =>\r\n  function() {\r\n    if (pc.g() !== undefined) {\r\n      pc.removeAxes();\r\n    }\r\n    // Add a group element for each dimension.\r\n    pc._g = pc.svg\r\n      .selectAll('.dimension')\r\n      .data(pc.getOrderedDimensionKeys(), function(d) {\r\n        return d;\r\n      })\r\n      .enter()\r\n      .append('svg:g')\r\n      .attr('class', 'dimension')\r\n      .attr('transform', function(d) {\r\n        return 'translate(' + xscale(d) + ')';\r\n      });\r\n    // Add an axis and title.\r\n    pc._g\r\n      .append('svg:g')\r\n      .attr('class', 'axis')\r\n      .attr('transform', 'translate(0,0)')\r\n      .each(function(d) {\r\n        let axisElement = select(this).call(\r\n          pc.applyAxisConfig(axis, config.dimensions[d])\r\n        );\r\n\r\n        axisElement\r\n          .selectAll('path')\r\n          .style('fill', 'none')\r\n          .style('stroke', '#222')\r\n          .style('shape-rendering', 'crispEdges');\r\n\r\n        axisElement\r\n          .selectAll('line')\r\n          .style('fill', 'none')\r\n          .style('stroke', '#222')\r\n          .style('shape-rendering', 'crispEdges');\r\n      })\r\n\r\n      .append('svg:text')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('y', 0)\r\n      .attr(\r\n        'transform',\r\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n      )\r\n      .attr('x', 0)\r\n      .attr('class', 'label')\r\n      .text(dimensionLabels(config))\r\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\r\n      .on('wheel', rotateLabels(config, pc));\r\n\r\n    if (config.nullValueSeparator === 'top') {\r\n      pc.svg\r\n        .append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\r\n        .attr('x2', w(config))\r\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\r\n        .attr('stroke-width', 1)\r\n        .attr('stroke', '#777')\r\n        .attr('fill', 'none')\r\n        .attr('shape-rendering', 'crispEdges');\r\n    } else if (config.nullValueSeparator === 'bottom') {\r\n      pc.svg\r\n        .append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\r\n        .attr('x2', w(config))\r\n        .attr('y2', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\r\n        .attr('stroke-width', 1)\r\n        .attr('stroke', '#777')\r\n        .attr('fill', 'none')\r\n        .attr('shape-rendering', 'crispEdges');\r\n    }\r\n\r\n    flags.axes = true;\r\n    return this;\r\n  };\r\n\r\nexport default createAxes;\r\n","import { entries } from 'd3-collection';\r\nimport { min } from 'd3-array';\r\n\r\n//draw dots with radius r on the axis line where data intersects\r\nconst axisDots = (config, pc, position) => _r => {\r\n  const r = _r || 0.1;\r\n  const ctx = pc.ctx.dots;\r\n  const startAngle = 0;\r\n  const endAngle = 2 * Math.PI;\r\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\r\n  config.data.forEach(d => {\r\n    entries(config.dimensions).forEach((p, i) => {\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        position(p),\r\n        config.dimensions[p.key].yscale(d[p]),\r\n        r,\r\n        startAngle,\r\n        endAngle\r\n      );\r\n      ctx.stroke();\r\n      ctx.fill();\r\n    });\r\n  });\r\n  return this;\r\n};\r\n\r\nexport default axisDots;\r\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\r\n\r\nconst applyAxisConfig = (axis, dimension) => {\r\n  let axisCfg;\r\n\r\n  switch (dimension.orient) {\r\n    case 'left':\r\n      axisCfg = axisLeft(dimension.yscale);\r\n      break;\r\n    case 'right':\r\n      axisCfg = axisRight(dimension.yscale);\r\n      break;\r\n    case 'top':\r\n      axisCfg = axisTop(dimension.yscale);\r\n      break;\r\n    case 'bottom':\r\n      axisCfg = axisBottom(dimension.yscale);\r\n      break;\r\n    default:\r\n      axisCfg = axisLeft(dimension.yscale);\r\n      break;\r\n  }\r\n\r\n  axisCfg\r\n    .ticks(dimension.ticks)\r\n    .tickValues(dimension.tickValues)\r\n    .tickSizeInner(dimension.innerTickSize)\r\n    .tickSizeOuter(dimension.outerTickSize)\r\n    .tickPadding(dimension.tickPadding)\r\n    .tickFormat(dimension.tickFormat);\r\n\r\n  return axisCfg;\r\n};\r\n\r\nexport default applyAxisConfig;\r\n","import { drag } from 'd3-drag';\r\nimport { event, select } from 'd3-selection';\r\n\r\nimport w from '../util/width';\r\n\r\n// Jason Davies, http://bl.ocks.org/1341281\r\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\r\n  function() {\r\n    if (pc.g() === undefined) pc.createAxes();\r\n    const g = pc.g();\r\n\r\n    g.style('cursor', 'move').call(\r\n      drag()\r\n        .on('start', function(d) {\r\n          dragging[d] = this.__origin__ = xscale(d);\r\n        })\r\n        .on('drag', function(d) {\r\n          dragging[d] = Math.min(\r\n            w(config),\r\n            Math.max(0, (this.__origin__ += event.dx))\r\n          );\r\n          pc.sortDimensions();\r\n          xscale.domain(pc.getOrderedDimensionKeys());\r\n          pc.render();\r\n          g.attr('transform', d => 'translate(' + position(d) + ')');\r\n        })\r\n        .on('end', function(d) {\r\n          delete this.__origin__;\r\n          delete dragging[d];\r\n          select(this)\r\n            .transition()\r\n            .attr('transform', 'translate(' + xscale(d) + ')');\r\n          pc.render();\r\n          pc.renderMarked();\r\n        })\r\n    );\r\n    flags.reorderable = true;\r\n    return this;\r\n  };\r\n\r\nexport default reorderable;\r\n","// rescale for height, width and margins\r\n// TODO currently assumes chart is brushable, and destroys old brushes\r\nconst resize = (config, pc, flags, events) => {\r\n  return function() {\r\n    // selection size\r\n    pc.selection\r\n      .select('svg')\r\n      .attr('width', config.width)\r\n      .attr('height', config.height);\r\n    pc.svg.attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n    // FIXME: the current brush state should pass through\r\n    if (flags.brushable) pc.brushReset();\r\n\r\n    // scales\r\n    pc.autoscale();\r\n\r\n    // axes, destroys old brushes.\r\n    if (pc.g()) pc.createAxes();\r\n    if (flags.brushable) pc.brushable();\r\n    if (flags.reorderable) pc.reorderable();\r\n\r\n    events.call('resize', this, {\r\n      width: config.width,\r\n      height: config.height,\r\n      margin: config.margin,\r\n    });\r\n\r\n    return this;\r\n  };\r\n};\r\n\r\nexport default resize;\r\n","// Reorder dimensions, such that the highest value (visually) is on the left and\r\n// the lowest on the right. Visual values are determined by the data values in\r\n// the given row.\r\nconst reorder = (config, pc, xscale) => rowdata => {\r\n  const firstDim = pc.getOrderedDimensionKeys()[0];\r\n\r\n  pc.sortDimensionsByRowData(rowdata);\r\n  // NOTE: this is relatively cheap given that:\r\n  // number of dimensions < number of data items\r\n  // Thus we check equality of order to prevent rerendering when this is the case.\r\n  const reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\r\n\r\n  if (reordered) {\r\n    xscale.domain(pc.getOrderedDimensionKeys());\r\n    const highlighted = config.highlighted.slice(0);\r\n    pc.unhighlight();\r\n\r\n    const marked = config.marked.slice(0);\r\n    pc.unmark();\r\n\r\n    const g = pc.g();\r\n    g.transition()\r\n      .duration(1500)\r\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\r\n    pc.render();\r\n\r\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\r\n    if (highlighted.length !== 0) {\r\n      pc.highlight(highlighted);\r\n    }\r\n    if (marked.length !== 0) {\r\n      pc.mark(marked);\r\n    }\r\n  }\r\n};\r\n\r\nexport default reorder;\r\n","const sortDimensions = (config, position) => () => {\r\n  const copy = Object.assign({}, config.dimensions);\r\n  const positionSortedKeys = Object.keys(config.dimensions).sort(\r\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\r\n  );\r\n  config.dimensions = {};\r\n  positionSortedKeys.forEach((p, i) => {\r\n    config.dimensions[p] = copy[p];\r\n    config.dimensions[p].index = i;\r\n  });\r\n};\r\n\r\nexport default sortDimensions;\r\n","const sortDimensionsByRowData = config => rowdata => {\r\n  const copy = Object.assign({}, config.dimensions);\r\n  const positionSortedKeys = Object.keys(config.dimensions).sort((a, b) => {\r\n    const pixelDifference =\r\n      config.dimensions[a].yscale(rowdata[a]) -\r\n      config.dimensions[b].yscale(rowdata[b]);\r\n\r\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\r\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\r\n    // variable name in that case.\r\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\r\n  });\r\n  config.dimensions = {};\r\n  positionSortedKeys.forEach((p, i) => {\r\n    config.dimensions[p] = copy[p];\r\n    config.dimensions[p].index = i;\r\n  });\r\n};\r\n\r\nexport default sortDimensionsByRowData;\r\n","const isBrushed = (config, brushGroup) => {\r\n  if (config.brushed && config.brushed.length !== config.data.length)\r\n    return true;\r\n\r\n  const object = brushGroup.currentMode().brushState();\r\n\r\n  for (let key in object) {\r\n    if (object.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default isBrushed;\r\n","import isBrushed from '../util/isBrushed';\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\nconst clear = (config, pc, ctx, brushGroup) =>\r\n  function(layer) {\r\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\r\n\r\n    // This will make sure that the foreground items are transparent\r\n    // without the need for changing the opacity style of the foreground canvas\r\n    // as this would stop the css styling from working\r\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\r\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\r\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\r\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\r\n      ctx.brushed.globalAlpha = config.alpha;\r\n    }\r\n    return this;\r\n  };\r\n\r\nexport default clear;\r\n","const computeCentroids = (config, position, row) => {\r\n  const centroids = [];\r\n\r\n  const p = Object.keys(config.dimensions);\r\n  const cols = p.length;\r\n  const a = 0.5; // center between axes\r\n  for (let i = 0; i < cols; ++i) {\r\n    // centroids on 'real' axes\r\n    const x = position(p[i]);\r\n    const y = config.dimensions[p[i]].yscale(row[p[i]]);\r\n    centroids.push($V([x, y]));\r\n\r\n    // centroids on 'virtual' axes\r\n    if (i < cols - 1) {\r\n      const cx = x + a * (position(p[i + 1]) - x);\r\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\r\n      if (config.bundleDimension !== null) {\r\n        const leftCentroid = config.clusterCentroids\r\n          .get(\r\n            config.dimensions[config.bundleDimension].yscale(\r\n              row[config.bundleDimension]\r\n            )\r\n          )\r\n          .get(p[i]);\r\n        const rightCentroid = config.clusterCentroids\r\n          .get(\r\n            config.dimensions[config.bundleDimension].yscale(\r\n              row[config.bundleDimension]\r\n            )\r\n          )\r\n          .get(p[i + 1]);\r\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\r\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\r\n      }\r\n      centroids.push($V([cx, cy]));\r\n    }\r\n  }\r\n\r\n  return centroids;\r\n};\r\n\r\nexport default computeCentroids;\r\n","const computeControlPoints = (smoothness, centroids) => {\r\n  const cols = centroids.length;\r\n  const a = smoothness;\r\n  const cps = [];\r\n\r\n  cps.push(centroids[0]);\r\n  cps.push(\r\n    $V([\r\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\r\n      centroids[0].e(2),\r\n    ])\r\n  );\r\n  for (let col = 1; col < cols - 1; ++col) {\r\n    let mid = centroids[col];\r\n    let left = centroids[col - 1];\r\n    let right = centroids[col + 1];\r\n\r\n    let diff = left.subtract(right);\r\n    cps.push(mid.add(diff.x(a)));\r\n    cps.push(mid);\r\n    cps.push(mid.subtract(diff.x(a)));\r\n  }\r\n  cps.push(\r\n    $V([\r\n      centroids[cols - 1].e(1) +\r\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\r\n      centroids[cols - 1].e(2),\r\n    ])\r\n  );\r\n  cps.push(centroids[cols - 1]);\r\n\r\n  return cps;\r\n};\r\n\r\nexport default computeControlPoints;\r\n","// draw single cubic bezier curve\r\nimport computeCentroids from './computeCentroids';\r\nimport computeControlPoints from './computeControlPoints';\r\nimport h from './height';\r\n\r\nconst singleCurve = (config, position, d, ctx) => {\r\n  const centroids = computeCentroids(config, position, d);\r\n  const cps = computeControlPoints(config.smoothness, centroids);\r\n\r\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\r\n\r\n  for (let i = 1; i < cps.length; i += 3) {\r\n    if (config.showControlPoints) {\r\n      for (let j = 0; j < 3; j++) {\r\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\r\n      }\r\n    }\r\n    ctx.bezierCurveTo(\r\n      cps[i].e(1),\r\n      cps[i].e(2),\r\n      cps[i + 1].e(1),\r\n      cps[i + 1].e(2),\r\n      cps[i + 2].e(1),\r\n      cps[i + 2].e(2)\r\n    );\r\n  }\r\n};\r\n\r\n// returns the y-position just beyond the separating null value line\r\nconst getNullPosition = config => {\r\n  if (config.nullValueSeparator === 'bottom') {\r\n    return h(config) + 1;\r\n  } else if (config.nullValueSeparator === 'top') {\r\n    return 1;\r\n  } else {\r\n    console.log(\r\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\r\n    );\r\n  }\r\n  return h(config) + 1;\r\n};\r\n\r\nconst singlePath = (config, position, d, ctx) => {\r\n  Object.keys(config.dimensions)\r\n    .map(p => [\r\n      position(p),\r\n      d[p] === undefined\r\n        ? getNullPosition(config)\r\n        : config.dimensions[p].yscale(d[p]),\r\n    ])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .forEach((p, i) => {\r\n      i === 0 ? ctx.moveTo(p[0], p[1]) : ctx.lineTo(p[0], p[1]);\r\n    });\r\n};\r\n\r\n// draw single polyline\r\nconst colorPath = (config, position, d, ctx) => {\r\n  ctx.beginPath();\r\n  if (\r\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\r\n    config.smoothness > 0\r\n  ) {\r\n    singleCurve(config, position, d, ctx);\r\n  } else {\r\n    singlePath(config, position, d, ctx);\r\n  }\r\n  ctx.stroke();\r\n};\r\n\r\nexport default colorPath;\r\n","const _functor = v => (typeof v === 'function' ? v : () => v);\r\n\r\nexport default _functor;\r\n","import colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathMark = (config, ctx, position) => (d, i) => {\r\n  ctx.marked.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.marked);\r\n};\r\n\r\nconst renderMarkedDefault = (config, pc, ctx, position) => () => {\r\n  pc.clear('marked');\r\n\r\n  if (config.marked.length) {\r\n    config.marked.forEach(pathMark(config, ctx, position));\r\n  }\r\n};\r\n\r\nconst renderMarkedQueue = (config, markedQueue) => () => {\r\n  if (config.marked) {\r\n    markedQueue(config.marked);\r\n  } else {\r\n    markedQueue([]); // This is needed to clear the currently marked items\r\n  }\r\n};\r\n\r\nconst renderMarked = (config, pc, events) =>\r\n  function() {\r\n    if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n\r\n    pc.renderMarked[config.mode]();\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport { pathMark, renderMarked, renderMarkedDefault, renderMarkedQueue };\r\n","import isBrushed from '../util/isBrushed';\r\nimport colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathBrushed = (config, ctx, position) => (d, i) => {\r\n  if (config.brushedColor !== null) {\r\n    ctx.brushed.strokeStyle = functor(config.brushedColor)(d, i);\r\n  } else {\r\n    ctx.brushed.strokeStyle = functor(config.color)(d, i);\r\n  }\r\n  return colorPath(config, position, d, ctx.brushed);\r\n};\r\n\r\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\r\n  pc.clear('brushed');\r\n\r\n  if (isBrushed(config, brushGroup) && config.brushed !== false) {\r\n    config.brushed.forEach(pathBrushed(config, ctx, position));\r\n  }\r\n};\r\n\r\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\r\n  if (isBrushed(config, brushGroup)) {\r\n    brushedQueue(config.brushed);\r\n  } else {\r\n    brushedQueue([]); // This is needed to clear the currently brushed items\r\n  }\r\n};\r\n\r\nconst renderBrushed = (config, pc, events) =>\r\n  function() {\r\n    if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n\r\n    pc.renderBrushed[config.mode]();\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\r\n","import { select, selectAll } from 'd3-selection';\r\n\r\nconst brushReset = config =>\r\n  function(dimension) {\r\n    const brushesToKeep = [];\r\n    for (let j = 0; j < config.brushes.length; j++) {\r\n      if (config.brushes[j].data !== dimension) {\r\n        brushesToKeep.push(config.brushes[j]);\r\n      }\r\n    }\r\n\r\n    config.brushes = brushesToKeep;\r\n    config.brushed = false;\r\n\r\n    if (pc.g() !== undefined) {\r\n      const nodes = pc\r\n        .g()\r\n        .selectAll('.brush')\r\n        .nodes();\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].__data__ === dimension) {\r\n          // remove all dummy brushes for this axis or the real brush\r\n          select(select(nodes[i]).nodes()[0].parentNode)\r\n            .selectAll('.dummy')\r\n            .remove();\r\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\nexport default brushReset;\r\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\r\nconst toType = v => {\r\n  return {}.toString\r\n    .call(v)\r\n    .match(/\\s([a-zA-Z]+)/)[1]\r\n    .toLowerCase();\r\n};\r\n\r\nexport default toType;\r\n","// this descriptive text should live with other introspective methods\r\nconst toString = config => () =>\r\n  'Parallel Coordinates: ' +\r\n  Object.keys(config.dimensions).length +\r\n  ' dimensions (' +\r\n  Object.keys(config.data[0]).length +\r\n  ' total) , ' +\r\n  config.data.length +\r\n  ' rows';\r\n\r\nexport default toString;\r\n","// pairs of adjacent dimensions\r\nconst adjacentPairs = arr => {\r\n  let ret = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    ret.push([arr[i], arr[i + 1]]);\r\n  }\r\n  return ret;\r\n};\r\n\r\nexport default adjacentPairs;\r\n","import { selectAll } from 'd3-selection';\r\n\r\nimport colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathHighlight = (config, ctx, position) => (d, i) => {\r\n  ctx.highlight.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.highlight);\r\n};\r\n\r\n// highlight an array of data\r\nconst highlight = (config, pc, canvas, events, ctx, position) =>\r\n  function(data = null) {\r\n    if (data === null) {\r\n      return config.highlighted;\r\n    }\r\n\r\n    config.highlighted = data;\r\n    pc.clear('highlight');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\r\n    data.forEach(pathHighlight(config, ctx, position));\r\n    events.call('highlight', this, data);\r\n    return this;\r\n  };\r\n\r\nexport default highlight;\r\n","import { selectAll } from 'd3-selection';\r\n\r\n// clear highlighting\r\nconst unhighlight = (config, pc, canvas) =>\r\n  function() {\r\n    config.highlighted = [];\r\n    pc.clear('highlight');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\r\n    return this;\r\n  };\r\n\r\nexport default unhighlight;\r\n","import { selectAll } from 'd3-selection';\r\n\r\nimport { pathMark } from './renderMarked';\r\n\r\n// mark an array of data\r\nconst mark = (config, pc, canvas, events, ctx, position) =>\r\n  function(data = null) {\r\n    if (data === null) {\r\n      return config.marked;\r\n    }\r\n\r\n    // add array to already marked data\r\n    config.marked = config.marked.concat(data);\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('dimmed', true);\r\n    data.forEach(pathMark(config, ctx, position));\r\n    events.call('mark', this, data);\r\n    return this;\r\n  };\r\n\r\nexport default mark;\r\n","import { selectAll } from 'd3-selection';\r\n\r\n// clear marked data arrays\r\nconst unmark = (config, pc, canvas) =>\r\n  function() {\r\n    config.marked = [];\r\n    pc.clear('marked');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('dimmed', false);\r\n    return this;\r\n  };\r\n\r\nexport default unmark;\r\n","const removeAxes = pc =>\r\n  function() {\r\n    pc._g.remove();\r\n\r\n    delete pc._g;\r\n    return this;\r\n  };\r\n\r\nexport default removeAxes;\r\n","/**\r\n * Renders the polylines.\r\n * If no dimensions have been specified, it will attempt to detect quantitative\r\n * dimensions based on the first data entry. If scales haven't been set, it will\r\n * autoscale based on the extent for each dimension.\r\n *\r\n * @param config\r\n * @param pc\r\n * @param events\r\n * @returns {Function}\r\n */\r\nconst render = (config, pc, events) =>\r\n  function() {\r\n    // try to autodetect dimensions and create scales\r\n    if (!Object.keys(config.dimensions).length) {\r\n      pc.detectDimensions();\r\n    }\r\n    pc.autoscale();\r\n\r\n    pc.render[config.mode]();\r\n\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport default render;\r\n","import colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathForeground = (config, ctx, position) => (d, i) => {\r\n  ctx.foreground.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.foreground);\r\n};\r\n\r\nconst renderDefault = (config, pc, ctx, position) => () => {\r\n  pc.clear('foreground');\r\n  pc.clear('highlight');\r\n\r\n  pc.renderBrushed.default();\r\n  pc.renderMarked.default();\r\n\r\n  config.data.forEach(pathForeground(config, ctx, position));\r\n};\r\n\r\nconst renderDefaultQueue = (config, pc, foregroundQueue) => () => {\r\n  pc.renderBrushed.queue();\r\n  pc.renderMarked.queue();\r\n  foregroundQueue(config.data);\r\n};\r\n\r\nexport default renderDefault;\r\n\r\nexport { pathForeground, renderDefaultQueue };\r\n","import bresenham from 'bresenham';\r\nimport { scaleQuantize, scaleLinear, scaleSequential } from 'd3-scale';\r\nimport { interpolateViridis } from 'd3-scale-chromatic';\r\nimport { range, merge, max, extent } from 'd3-array';\r\nimport { nest } from 'd3-collection';\r\nimport functor from '../util/functor';\r\n\r\nconst tileForeground = (config, ctx, x, y, gw, gh, color, opacity) => {\r\n  // ctx.foreground.fillStyle = functor(config.color)(d, i);\r\n  //ctx.foreground.fillStyle = 'rgb(100, 100, 100,' + opacity + ')';\r\n  ctx.foreground.fillStyle = color;\r\n  ctx.foreground.fillRect(x, y, gw, gh);\r\n  // draw rects\r\n};\r\n\r\nconst singlePathTile = (config, pc, position) => d => {\r\n  const yrange = extent(\r\n    config.dimensions[Object.keys(config.dimensions)[0]].yscale.range()\r\n  );\r\n  const height = Math.abs(yrange[0] - yrange[1]);\r\n  const points = Object.keys(config.dimensions)\r\n    .map(p => [\r\n      position(p),\r\n      d[p] === undefined\r\n        ? getNullPosition(config)\r\n        : config.dimensions[p].yscale(d[p]),\r\n    ])\r\n    .sort((a, b) => a[0] - b[0]);\r\n\r\n  let bres_grid = [];\r\n  points.forEach((p, i) => {\r\n    if (i === points.length - 1) {\r\n      return;\r\n    }\r\n\r\n    const p2 = points[i + 1];\r\n    const width = pc.xscale.step();\r\n    const resolution = config.resolution || 20;\r\n    const gridh = height / resolution;\r\n    const dim = Object.keys(config.dimensions).filter(\r\n      d => config.dimensions[d].index === i\r\n    )[0];\r\n    const dim2 = Object.keys(config.dimensions).filter(\r\n      d => config.dimensions[d].index === i + 1\r\n    )[0];\r\n    let scalegx = scaleQuantize();\r\n    let scalegy = scaleQuantize();\r\n\r\n    scalegx\r\n      .domain([pc.xscale(dim), pc.xscale(dim2)])\r\n      .range(range(0, width / gridh));\r\n    scalegy.domain([0, height]).range(range(resolution));\r\n\r\n    let bres = bresenham(\r\n      scalegx(p[0]),\r\n      scalegy(p[1]),\r\n      scalegx(p2[0]),\r\n      scalegy(p2[1])\r\n    );\r\n    bres_grid.push(\r\n      bres.map(d => {\r\n        return { x: scalegx.invertExtent(d.x), y: scalegy.invertExtent(d.y) };\r\n      })\r\n    );\r\n  });\r\n\r\n  return bres_grid;\r\n};\r\n\r\nconst aggregatePoints = (config, data, pc, position) => {\r\n  const points = data.map(singlePathTile(config, pc, position));\r\n  const gw = Math.abs(points[0][0][0].x[1] - points[0][0][0].x[0]);\r\n  const gh = Math.abs(points[0][0][0].y[1] - points[0][0][0].y[0]);\r\n\r\n  let points_collector = [];\r\n  points.forEach(d =>\r\n    d.forEach(dd => dd.forEach(ddd => points_collector.push(ddd)))\r\n  );\r\n  // will need to nest aggregate and apply color/opacity\r\n  debugger;\r\n  const grid_aggregate = nest()\r\n    .key(d => d.x[0])\r\n    .key(d => d.y[0])\r\n    .rollup(d => d.length)\r\n    .map(points_collector);\r\n    return {\r\n      grid_aggregate: grid_aggregate,\r\n      gw: gw,\r\n      gh: gh\r\n    };\r\n}\r\n\r\nconst renderTiled = (config, pc, ctx, position) => () => {\r\n  pc.clear('foreground');\r\n  pc.clear('highlight');\r\n\r\n  if(pc.brushed()) {\r\n    pc.renderBrushed.tiled();\r\n    return;\r\n  }\r\n  //pc.renderMarked.default();\r\n\r\n  const aggregated = aggregatePoints(config, config.data, pc, position);\r\n  const grid_aggregate = aggregated.grid_aggregate;\r\n  const gw = aggregated.gw;\r\n  const gh = aggregated.gh;\r\n  const max_count = max(merge(grid_aggregate.values().map(d => d.values())));\r\n\r\n  //const scale_opacity = scaleLinear().domain([0, max_count]);\r\n  const scale_normalize = scaleLinear().domain([0, max_count]);\r\n  grid_aggregate.entries().forEach(d => {\r\n    d.value.entries().forEach(y => {\r\n      //tileForeground( config, ctx, +d.key, +y.key, gw, gh, scale_opacity(y.value) )\r\n      tileForeground(\r\n        config,\r\n        ctx,\r\n        +d.key,\r\n        +y.key,\r\n        gw,\r\n        gh,\r\n        interpolateViridis(scale_normalize(y.value))\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nconst renderTiledQueue = (config, pc, foregroundQueue) => () => {\r\n  //pc.renderBrushed.queue();\r\n  //pc.renderMarked.queue();\r\n  foregroundQueue(config.data);\r\n};\r\n\r\nexport default renderTiled;\r\n\r\nexport { tileForeground, singlePathTile, renderTiledQueue, aggregatePoints };\r\n","import { aggregatePoints } from './renderTiled';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { interpolateViridis } from 'd3-scale-chromatic';\r\nimport { max, merge } from 'd3-array';\r\n\r\nconst tileForegroundBrushed = (config, ctx, x, y, gw, gh, color, opacity) => {\r\n  // ctx.foreground.fillStyle = functor(config.color)(d, i);\r\n  //ctx.foreground.fillStyle = 'rgb(100, 100, 100,' + opacity + ')';\r\n  ctx.brushed.fillStyle = color;\r\n  ctx.brushed.fillRect(x, y, gw, gh);\r\n  // draw rects\r\n};\r\n\r\nconst renderTiledBrushed = (config, pc, ctx, position) => () => {\r\n  pc.clear('brushed');\r\n\r\n  //pc.renderBrushed.default();\r\n  //pc.renderMarked.default();\r\n\r\n  const aggregated = aggregatePoints(config, config.brushed, pc, position);\r\n  const grid_aggregate = aggregated.grid_aggregate;\r\n  const gw = aggregated.gw;\r\n  const gh = aggregated.gh;\r\n  const max_count = max(merge(grid_aggregate.values().map(d => d.values())));\r\n\r\n  //const scale_opacity = scaleLinear().domain([0, max_count]);\r\n  const scale_normalize = scaleLinear().domain([0, max_count]);\r\n  grid_aggregate.entries().forEach(d => {\r\n    d.value.entries().forEach(y => {\r\n      //tileForeground( config, ctx, +d.key, +y.key, gw, gh, scale_opacity(y.value) )\r\n      tileForegroundBrushed(\r\n        config,\r\n        ctx,\r\n        +d.key,\r\n        +y.key,\r\n        gw,\r\n        gh,\r\n        interpolateViridis(scale_normalize(y.value))\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nexport default renderTiledBrushed;\r\n","import toType from './toType';\r\n\r\n// try to coerce to number before returning type\r\nconst toTypeCoerceNumbers = v =>\r\n  parseFloat(v) == v && v !== null ? 'number' : toType(v);\r\n\r\nexport default toTypeCoerceNumbers;\r\n","import toTypeCoerceNumbers from './toTypeCoerceNumbers';\r\n\r\n// attempt to determine types of each dimension based on first row of data\r\nconst detectDimensionTypes = data =>\r\n  Object.keys(data[0]).reduce((acc, cur) => {\r\n    const key = isNaN(Number(cur)) ? cur : parseInt(cur);\r\n    acc[key] = toTypeCoerceNumbers(data[0][cur]);\r\n\r\n    return acc;\r\n  }, {});\r\n\r\nexport default detectDimensionTypes;\r\n","import { ascending } from 'd3-array';\r\n\r\nconst getOrderedDimensionKeys = config => () =>\r\n  Object.keys(config.dimensions).sort((x, y) =>\r\n    ascending(config.dimensions[x].index, config.dimensions[y].index)\r\n  );\r\n\r\nexport default getOrderedDimensionKeys;\r\n","const interactive = flags =>\r\n  function() {\r\n    flags.interactive = true;\r\n    return this;\r\n  };\r\n\r\nexport default interactive;\r\n","const shadows = (flags, pc) =>\r\n  function() {\r\n    flags.shadows = true;\r\n    pc.alphaOnBrushed(0.1);\r\n    pc.render();\r\n    return this;\r\n  };\r\n\r\nexport default shadows;\r\n","import { select } from 'd3-selection';\r\n\r\n/**\r\n * Setup a new parallel coordinates chart.\r\n *\r\n * @param config\r\n * @param canvas\r\n * @param ctx\r\n * @returns {pc} a parcoords closure\r\n */\r\nconst init = (config, canvas, ctx) => {\r\n  /**\r\n   * Create the chart within a container. The selector can also be a d3 selection.\r\n   *\r\n   * @param selection a d3 selection\r\n   * @returns {pc} instance for chained api\r\n   */\r\n  const pc = function(selection) {\r\n    selection = pc.selection = select(selection);\r\n\r\n    config.width = selection.node().clientWidth;\r\n    config.height = selection.node().clientHeight;\r\n    // canvas data layers\r\n    ['dots', 'foreground', 'brushed', 'marked', 'highlight'].forEach(layer => {\r\n      canvas[layer] = selection\r\n        .append('canvas')\r\n        .attr('class', layer)\r\n        .node();\r\n      ctx[layer] = canvas[layer].getContext('2d');\r\n    });\r\n\r\n    // svg tick and brush layers\r\n    pc.svg = selection\r\n      .append('svg')\r\n      .attr('width', config.width)\r\n      .attr('height', config.height)\r\n      .style('font', '14px sans-serif')\r\n      .style('position', 'absolute')\r\n\r\n      .append('svg:g')\r\n      .attr(\r\n        'transform',\r\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n      );\r\n    // for chained api\r\n    return pc;\r\n  };\r\n\r\n  // for partial-application style programming\r\n  return pc;\r\n};\r\n\r\nexport default init;\r\n","const flip = config =>\r\n  function(d) {\r\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\r\n    config.dimensions[d].yscale.domain(\r\n      config.dimensions[d].yscale.domain().reverse()\r\n    ); // works\r\n\r\n    return this;\r\n  };\r\n\r\nexport default flip;\r\n","const detectDimensions = pc =>\r\n  function() {\r\n    pc.dimensions(pc.applyDimensionDefaults());\r\n    return this;\r\n  };\r\n\r\nexport default detectDimensions;\r\n","const scale = (config, pc) =>\r\n  function(d, domain) {\r\n    config.dimensions[d].yscale.domain(domain);\r\n    pc.render.default();\r\n    pc.updateAxes();\r\n\r\n    return this;\r\n  };\r\n\r\nexport default scale;\r\n","import { matchArray } from 'searchjs';\r\n\r\nconst filterUpdated = (config, pc, events) => newSelection => {\r\n  config.brushed = newSelection;\r\n  //events.call('filter', pc, config.brushed);\r\n  pc.renderBrushed();\r\n};\r\n\r\n// filter data much like a brush but from outside of the chart\r\nconst filter = (config, pc, events) =>\r\n  function(filters = null) {\r\n    // will reset if null which goes against most of the API\r\n    //   need to think this through but maybe provide filterReset like brushReset\r\n    //   as a better alternative\r\n    config.filters = filters;\r\n    filterUpdated(config, pc, events)(pc.selected());\r\n\r\n    return this;\r\n  };\r\n\r\nexport default filter;","const DefaultConfig = {\r\n  data: [],\r\n  highlighted: [],\r\n  marked: [],\r\n  dimensions: {},\r\n  dimensionTitleRotation: 0,\r\n  brushes: [],\r\n  brushed: false,\r\n  brushedColor: null,\r\n  alphaOnBrushed: 0.0,\r\n  lineWidth: 1.4,\r\n  highlightedLineWidth: 3,\r\n  mode: 'default',\r\n  markedLineWidth: 3,\r\n  markedShadowColor: '#ffffff',\r\n  markedShadowBlur: 10,\r\n  rate: 20,\r\n  width: 600,\r\n  height: 300,\r\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\r\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\r\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\r\n  color: '#069',\r\n  composite: 'source-over',\r\n  alpha: 0.7,\r\n  bundlingStrength: 0.5,\r\n  bundleDimension: null,\r\n  smoothness: 0.0,\r\n  showControlPoints: false,\r\n  hideAxis: [],\r\n  flipAxes: [],\r\n  animationTime: 1100, // How long it takes to flip the axis when you double click\r\n  rotateLabels: false,\r\n  resolution: false,\r\n  filters: null\r\n};\r\n\r\nexport default DefaultConfig;\r\n","import { entries, keys } from 'd3-collection';\r\nimport { axisLeft } from 'd3-axis';\r\nimport { dispatch } from 'd3-dispatch';\r\nimport { scalePoint } from 'd3-scale';\r\n\r\nimport DefaultConfig from './defaultConfig';\r\n\r\nconst initState = userConfig => {\r\n  const config = Object.assign({}, DefaultConfig, userConfig);\r\n\r\n  if (userConfig && userConfig.dimensionTitles) {\r\n    console.warn(\r\n      'dimensionTitles passed in userConfig is deprecated. Add title to dimension object.'\r\n    );\r\n    entries(userConfig.dimensionTitles).forEach(d => {\r\n      if (config.dimensions[d.key]) {\r\n        config.dimensions[d.key].title = config.dimensions[d.key].title\r\n          ? config.dimensions[d.key].title\r\n          : d.value;\r\n      } else {\r\n        config.dimensions[d.key] = {\r\n          title: d.value,\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  const eventTypes = [\r\n    'render',\r\n    'resize',\r\n    'highlight',\r\n    'mark',\r\n    'brush',\r\n    'brushend',\r\n    'brushstart',\r\n    'axesreorder',\r\n  ].concat(keys(config));\r\n\r\n  const events = dispatch.apply(this, eventTypes),\r\n    flags = {\r\n      brushable: false,\r\n      reorderable: false,\r\n      axes: false,\r\n      interactive: false,\r\n      debug: false,\r\n    },\r\n    xscale = scalePoint(),\r\n    dragging = {},\r\n    axis = axisLeft().ticks(5),\r\n    ctx = {},\r\n    canvas = {};\r\n\r\n  const brush = {\r\n    modes: {\r\n      None: {\r\n        install: function(pc) {}, // Nothing to be done.\r\n        uninstall: function(pc) {}, // Nothing to be done.\r\n        selected: function() {\r\n          return [];\r\n        }, // Nothing to return\r\n        brushState: function() {\r\n          return {};\r\n        },\r\n      },\r\n    },\r\n    mode: 'None',\r\n    predicate: 'AND',\r\n    currentMode: function() {\r\n      return this.modes[this.mode];\r\n    },\r\n  };\r\n\r\n  return {\r\n    config,\r\n    events,\r\n    eventTypes,\r\n    flags,\r\n    xscale,\r\n    dragging,\r\n    axis,\r\n    ctx,\r\n    canvas,\r\n    brush,\r\n  };\r\n};\r\n\r\nexport default initState;\r\n","const computeClusterCentroids = (config, d) => {\r\n  const clusterCentroids = new Map();\r\n  const clusterCounts = new Map();\r\n  // determine clusterCounts\r\n  config.data.forEach(function(row) {\r\n    let scaled = config.dimensions[d].yscale(row[d]);\r\n    if (!clusterCounts.has(scaled)) {\r\n      clusterCounts.set(scaled, 0);\r\n    }\r\n    let count = clusterCounts.get(scaled);\r\n    clusterCounts.set(scaled, count + 1);\r\n  });\r\n\r\n  config.data.forEach(function(row) {\r\n    Object.keys(config.dimensions).map(p => {\r\n      let scaled = config.dimensions[d].yscale(row[d]);\r\n      if (!clusterCentroids.has(scaled)) {\r\n        const _map = new Map();\r\n        clusterCentroids.set(scaled, _map);\r\n      }\r\n      if (!clusterCentroids.get(scaled).has(p)) {\r\n        clusterCentroids.get(scaled).set(p, 0);\r\n      }\r\n      let value = clusterCentroids.get(scaled).get(p);\r\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\r\n      clusterCentroids.get(scaled).set(p, value);\r\n    });\r\n  });\r\n\r\n  return clusterCentroids;\r\n};\r\n\r\nexport default computeClusterCentroids;\r\n","// side effects for setters\r\nimport { dispatch } from 'd3-dispatch';\r\nimport computeClusterCentroids from '../util/computeClusterCentroids';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\n\r\nconst without = (arr, items) => {\r\n  items.forEach(el => {\r\n    delete arr[el];\r\n  });\r\n  return arr;\r\n};\r\n\r\nconst sideEffects = (\r\n  config,\r\n  ctx,\r\n  pc,\r\n  xscale,\r\n  flags,\r\n  brushedQueue,\r\n  markedQueue,\r\n  foregroundQueue\r\n) =>\r\n  dispatch\r\n    .apply(this, Object.keys(config))\r\n    .on('composite', d => {\r\n      ctx.foreground.globalCompositeOperation = d.value;\r\n      ctx.brushed.globalCompositeOperation = d.value;\r\n    })\r\n    .on('alpha', d => {\r\n      ctx.foreground.globalAlpha = d.value;\r\n      ctx.brushed.globalAlpha = d.value;\r\n    })\r\n    .on('brushedColor', d => {\r\n      ctx.brushed.strokeStyle = d.value;\r\n    })\r\n    .on('width', d => pc.resize())\r\n    .on('height', d => pc.resize())\r\n    .on('margin', d => pc.resize())\r\n    .on('rate', d => {\r\n      brushedQueue.rate(d.value);\r\n      markedQueue.rate(d.value);\r\n      foregroundQueue.rate(d.value);\r\n    })\r\n    .on('dimensions', d => {\r\n      config.dimensions = pc.applyDimensionDefaults(Object.keys(d.value));\r\n      xscale.domain(pc.getOrderedDimensionKeys());\r\n      pc.sortDimensions();\r\n      if (flags.interactive) {\r\n        pc.render().updateAxes();\r\n      }\r\n    })\r\n    .on('bundleDimension', d => {\r\n      if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n      pc.autoscale();\r\n      if (typeof d.value === 'number') {\r\n        if (d.value < Object.keys(config.dimensions).length) {\r\n          config.bundleDimension = config.dimensions[d.value];\r\n        } else if (d.value < config.hideAxis.length) {\r\n          config.bundleDimension = config.hideAxis[d.value];\r\n        }\r\n      } else {\r\n        config.bundleDimension = d.value;\r\n      }\r\n\r\n      config.clusterCentroids = computeClusterCentroids(\r\n        config,\r\n        config.bundleDimension\r\n      );\r\n      if (flags.interactive) {\r\n        pc.render();\r\n      }\r\n    })\r\n    .on('hideAxis', d => {\r\n      pc.dimensions(pc.applyDimensionDefaults());\r\n      pc.dimensions(without(config.dimensions, d.value));\r\n    })\r\n    .on('flipAxes', d => {\r\n      if (d.value && d.value.length) {\r\n        d.value.forEach(function(axis) {\r\n          flipAxisAndUpdatePCP(config, pc, axis);\r\n        });\r\n        pc.updateAxes(0);\r\n      }\r\n    });\r\n\r\nexport default sideEffects;\r\n","const getset = (obj, state, events, side_effects) => {\r\n  Object.keys(state).forEach(function(key) {\r\n    obj[key] = function(x) {\r\n      if (!arguments.length) {\r\n        return state[key];\r\n      }\r\n      if (\r\n        key === 'dimensions' &&\r\n        Object.prototype.toString.call(x) === '[object Array]'\r\n      ) {\r\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\r\n        x = obj.applyDimensionDefaults(x);\r\n      }\r\n      let old = state[key];\r\n      state[key] = x;\r\n      side_effects.call(key, obj, { value: x, previous: old });\r\n      events.call(key, obj, { value: x, previous: old });\r\n      return obj;\r\n    };\r\n  });\r\n};\r\n\r\nexport default getset;\r\n","// side effects for setters\r\nimport sideEffects from './state/sideEffects';\r\nimport getset from './util/getset';\r\n\r\nconst d3_rebind = (target, source, method) =>\r\n  function() {\r\n    const value = method.apply(source, arguments);\r\n    return value === source ? target : value;\r\n  };\r\n\r\nconst _rebind = (target, source, method) => {\r\n  target[method] = d3_rebind(target, source, source[method]);\r\n  return target;\r\n};\r\n\r\nconst bindEvents = (\r\n  __,\r\n  ctx,\r\n  pc,\r\n  xscale,\r\n  flags,\r\n  brushedQueue,\r\n  markedQueue,\r\n  foregroundQueue,\r\n  events,\r\n  axis\r\n) => {\r\n  const side_effects = sideEffects(\r\n    __,\r\n    ctx,\r\n    pc,\r\n    xscale,\r\n    flags,\r\n    brushedQueue,\r\n    markedQueue,\r\n    foregroundQueue\r\n  );\r\n\r\n  // create getter/setters\r\n  getset(pc, __, events, side_effects);\r\n\r\n  // expose events\r\n  // getter/setter with event firing\r\n  _rebind(pc, events, 'on');\r\n\r\n  _rebind(\r\n    pc,\r\n    axis,\r\n    'ticks',\r\n    'orient',\r\n    'tickValues',\r\n    'tickSubdivide',\r\n    'tickSize',\r\n    'tickPadding',\r\n    'tickFormat'\r\n  );\r\n};\r\n\r\nexport default bindEvents;\r\n","// misc\r\nimport renderQueue from './util/renderQueue';\r\nimport w from './util/width';\r\n\r\n// brush\r\nimport install1DAxes from './brush/1d';\r\nimport install1DAxesMulti from './brush/1d-multi';\r\nimport install2DStrums from './brush/strums';\r\nimport installAngularBrush from './brush/angular';\r\n\r\n// api\r\nimport intersection from './api/intersection';\r\nimport mergeParcoords from './api/mergeParcoords';\r\nimport selected from './api/selected';\r\nimport brushMode from './api/brushMode';\r\nimport updateAxes from './api/updateAxes';\r\nimport autoscale from './api/autoscale';\r\nimport brushable from './api/brushable';\r\nimport commonScale from './api/commonScale';\r\nimport computeRealCentroids from './api/computeRealCentroids';\r\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\r\nimport createAxes from './api/createAxes';\r\nimport axisDots from './api/axisDots';\r\nimport applyAxisConfig from './api/applyAxisConfig';\r\nimport reorderable from './api/reorderable';\r\nimport resize from './api/resize';\r\nimport reorder from './api/reorder';\r\nimport sortDimensions from './api/sortDimensions';\r\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\r\nimport clear from './api/clear';\r\nimport {\r\n  pathMark,\r\n  renderMarked,\r\n  renderMarkedDefault,\r\n  renderMarkedQueue,\r\n} from './api/renderMarked';\r\nimport {\r\n  pathBrushed,\r\n  renderBrushed,\r\n  renderBrushedDefault,\r\n  renderBrushedQueue,\r\n} from './api/renderBrushed';\r\nimport brushReset from './api/brushReset';\r\nimport toType from './api/toType';\r\nimport toString from './api/toString';\r\nimport adjacentPairs from './api/adjacentPairs';\r\nimport highlight from './api/highlight';\r\nimport unhighlight from './api/unhighlight';\r\nimport mark from './api/mark';\r\nimport unmark from './api/unmark';\r\nimport removeAxes from './api/removeAxes';\r\nimport render from './api/render';\r\nimport renderDefault, {\r\n  pathForeground,\r\n  renderDefaultQueue,\r\n} from './api/renderDefault';\r\nimport renderTiled from './api/renderTiled';\r\nimport renderTiledBrushed from './api/renderTiledBrushed';\r\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\r\nimport detectDimensionTypes from './api/detectDimensionTypes';\r\nimport getOrderedDimensionKeys from './api/getOrderedDimensionKeys';\r\nimport interactive from './api/interactive';\r\nimport shadows from './api/shadows';\r\nimport init from './api/init';\r\nimport flip from './api/flip';\r\nimport detectDimensions from './api/detectDimensions';\r\nimport scale from './api/scale';\r\nimport filter from './api/filter';\r\n\r\nimport { version } from '../package.json';\r\nimport initState from './state';\r\nimport bindEvents from './bindEvents';\r\n\r\n//css\r\nimport './parallel-coordinates.css';\r\n\r\nconst ParCoords = userConfig => {\r\n  const state = initState(userConfig);\r\n  const {\r\n    config,\r\n    events,\r\n    flags,\r\n    xscale,\r\n    dragging,\r\n    axis,\r\n    ctx,\r\n    canvas,\r\n    brush,\r\n  } = state;\r\n\r\n  const pc = init(config, canvas, ctx);\r\n\r\n  const position = d => {\r\n    if (xscale.range().length === 0) {\r\n      xscale.range([0, w(config)], 1);\r\n    }\r\n    return dragging[d] == null ? xscale(d) : dragging[d];\r\n  };\r\n\r\n  const brushedQueue = renderQueue(pathBrushed(config, ctx, position))\r\n    .rate(50)\r\n    .clear(() => pc.clear('brushed'));\r\n\r\n  const markedQueue = renderQueue(pathMark(config, ctx, position))\r\n    .rate(50)\r\n    .clear(() => pc.clear('marked'));\r\n\r\n  const foregroundQueue = renderQueue(pathForeground(config, ctx, position))\r\n    .rate(50)\r\n    .clear(function() {\r\n      pc.clear('foreground');\r\n      pc.clear('highlight');\r\n    });\r\n\r\n  bindEvents(\r\n    config,\r\n    ctx,\r\n    pc,\r\n    xscale,\r\n    flags,\r\n    brushedQueue,\r\n    markedQueue,\r\n    foregroundQueue,\r\n    events,\r\n    axis\r\n  );\r\n\r\n  // expose the state of the chart\r\n  pc.state = config;\r\n  pc.flags = flags;\r\n\r\n  pc.autoscale = autoscale(config, pc, xscale, ctx);\r\n  pc.scale = scale(config, pc);\r\n  pc.flip = flip(config);\r\n  pc.commonScale = commonScale(config, pc);\r\n  pc.detectDimensions = detectDimensions(pc);\r\n  // attempt to determine types of each dimension based on first row of data\r\n  pc.detectDimensionTypes = detectDimensionTypes;\r\n  pc.applyDimensionDefaults = applyDimensionDefaults(config, pc);\r\n  pc.getOrderedDimensionKeys = getOrderedDimensionKeys(config);\r\n\r\n  //Renders the polylines.\r\n  pc.render = render(config, pc, events);\r\n  pc.renderBrushed = renderBrushed(config, pc, events);\r\n  pc.renderMarked = renderMarked(config, pc, events);\r\n  pc.render.default = renderDefault(config, pc, ctx, position);\r\n  pc.render.tiled = renderTiled(config, pc, ctx, position);\r\n  pc.renderBrushed.tiled = renderTiledBrushed(config, pc, ctx, position);\r\n  pc.render.queue = renderDefaultQueue(config, pc, foregroundQueue);\r\n  pc.renderBrushed.default = renderBrushedDefault(\r\n    config,\r\n    ctx,\r\n    position,\r\n    pc,\r\n    brush\r\n  );\r\n  pc.renderBrushed.queue = renderBrushedQueue(config, brush, brushedQueue);\r\n  pc.renderMarked.default = renderMarkedDefault(config, pc, ctx, position);\r\n  pc.renderMarked.queue = renderMarkedQueue(config, markedQueue);\r\n\r\n  pc.compute_real_centroids = computeRealCentroids(config.dimensions, position);\r\n  pc.shadows = shadows(flags, pc);\r\n  pc.axisDots = axisDots(config, pc, position);\r\n  pc.clear = clear(config, pc, ctx, brush);\r\n  pc.createAxes = createAxes(config, pc, xscale, flags, axis);\r\n  pc.removeAxes = removeAxes(pc);\r\n  pc.updateAxes = updateAxes(config, pc, position, axis, flags);\r\n  pc.applyAxisConfig = applyAxisConfig;\r\n  pc.brushable = brushable(config, pc, flags);\r\n  pc.brushReset = brushReset(config);\r\n  pc.selected = selected(config, pc);\r\n  pc.reorderable = reorderable(config, pc, xscale, position, dragging, flags);\r\n\r\n  // Reorder dimensions, such that the highest value (visually) is on the left and\r\n  // the lowest on the right. Visual values are determined by the data values in\r\n  // the given row.\r\n  pc.reorder = reorder(config, pc, xscale);\r\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(config);\r\n  pc.sortDimensions = sortDimensions(config, position);\r\n\r\n  // pairs of adjacent dimensions\r\n  pc.adjacent_pairs = adjacentPairs;\r\n  pc.interactive = interactive(flags);\r\n\r\n  // expose internal state\r\n  pc.xscale = xscale;\r\n  pc.ctx = ctx;\r\n  pc.canvas = canvas;\r\n  pc.g = () => pc._g;\r\n\r\n  // rescale for height, width and margins\r\n  // TODO currently assumes chart is brushable, and destroys old brushes\r\n  pc.resize = resize(config, pc, flags, events);\r\n\r\n  // highlight an array of data\r\n  pc.highlight = highlight(config, pc, canvas, events, ctx, position);\r\n  // clear highlighting\r\n  pc.unhighlight = unhighlight(config, pc, canvas);\r\n\r\n  // mark an array of data\r\n  pc.mark = mark(config, pc, canvas, events, ctx, position);\r\n  // clear marked data\r\n  pc.unmark = unmark(config, pc, canvas);\r\n\r\n  // calculate 2d intersection of line a->b with line c->d\r\n  // points are objects with x and y properties\r\n  pc.intersection = intersection;\r\n\r\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\r\n  // (so you can choose to save it to disk, etc.)\r\n  pc.mergeParcoords = mergeParcoords(pc);\r\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\r\n  pc.brushMode = brushMode(brush, config, pc);\r\n\r\n  // install brushes\r\n  install1DAxes(brush, config, pc, events);\r\n  install2DStrums(brush, config, pc, events, xscale);\r\n  installAngularBrush(brush, config, pc, events, xscale);\r\n  install1DAxesMulti(brush, config, pc, events);\r\n\r\n  // allow outside filters\r\n  pc.filter = filter(config, pc);\r\n\r\n  pc.version = version;\r\n  // this descriptive text should live with other introspective methods\r\n  pc.toString = toString(config);\r\n  pc.toType = toType;\r\n  // try to coerce to number before returning type\r\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\r\n\r\n  return pc;\r\n};\r\n\r\nexport default ParCoords;\r\n"],"names":["renderQueue","func","_queue","_rate","_invalidate","_clear","rq","data","render","valid","invalidate","doFrame","chunk","splice","map","requestAnimationFrame","slice","add","concat","rate","value","arguments","length","remaining","clear","w","config","width","margin","right","left","brushExtents","state","pc","brushes","brushNodes","extents","Object","keys","dimensions","reduce","acc","cur","brush","undefined","brushSelection","extent","brushSelections","g","selectAll","each","d","select","forEach","dim","yExtent","yscale","call","move","reverse","renderBrushed","brushReset","dimension","brushed","type","event","selected","brushGroup","is_brushed","p","actives","filter","_brushRange","invert","matchArray","filters","within","date","bandwidth","number","string","predicate","every","some","Error","brushPredicate","brushUpdated","events","args","newSelection","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","invertCategorical","selection","domain","found","i","push","convertBrushArguments","args_array","Array","prototype","selection_raw","selection_scaled","node","raw","scaled","on","sourceEvent","stopPropagation","install","createAxes","append","attr","style","uninstall","remove","install1DAxes","modes","brushState","drawBrushes","selector","id","enter","insert","indexOf","b","brushObject","exit","pos","axisBrushes","document","getElementById","dimExt","e","newBrush","lastBrushID","lastBrush","toString","yExtents","_bs","j","ext","f","k","axisBrush","_this","install1DMultiAxes","strumRect","containmentTest","strum","p1","minX","p2","m1","b1","m2","b2","x","y","y1","y2","Math","min","max","crossesStrum","strums","test","d1","dims","d2","point","ids","getOwnPropertyNames","isNaN","crossTest","removeStrum","active","svg","onDragEnd","drawStrum","activePoint","_svg","points","_line","circles","_drag","drag","ev","maxX","minY","maxY","onDrag","top","h","height","bottom","dimensionsForPoint","xscale","getOrderedDimensionKeys","onDragStart","mouse","consecutive","first","second","install2DStrums","hypothenuse","a","sqrt","signedAngle","angle","PI","startAngle","arc","endAngle","tmp","arcs","c","asin","outerRadius","p3","_path","d3Arc","innerRadius","sAngle","uAngle","installAngularBrush","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","createElement","foregroundCanvas","canvas","foreground","canvasMarginLeft","Number","marginLeft","replace","textTopAdjust","canvasMarginTop","marginTop","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","key","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgNodeCopy","cloneNode","setAttribute","getAttribute","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","__data__","values","ranger","includes","flipAxes","unshift","ii","dimRange","dimDomain","category","categoryIndex","categoryRangeValue","multiBrushData","idx","filtered","z","String","toUpperCase","currentMode","brushMode","mode","brushModes","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","transition","duration","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","text","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","highlightedLineWidth","marked","markedLineWidth","shadowColor","markedShadowColor","shadowBlur","markedShadowBlur","ctrlKey","html","outerHTML","dat","parentNode","commonScale","global","t","detectDimensions","scales","bundleDimension","computeRealCentroids","row","isValid","applyDimensionDefaults","types","detectDimensionTypes","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","dots","pow","entries","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","dx","sortDimensions","renderMarked","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","unmark","mark","copy","assign","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","cols","$V","cx","cy","leftCentroid","clusterCentroids","get","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","console","log","singlePath","lineTo","colorPath","_functor","v","pathMark","functor","renderMarkedDefault","renderMarkedQueue","markedQueue","pathBrushed","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","match","toLowerCase","adjacentPairs","ret","arr","pathHighlight","classed","pathForeground","renderDefault","default","renderDefaultQueue","foregroundQueue","queue","tileForeground","gw","gh","opacity","singlePathTile","yrange","abs","bres_grid","step","resolution","gridh","dim2","scalegx","scaleQuantize","scalegy","bres","bresenham","invertExtent","aggregatePoints","points_collector","dd","ddd","grid_aggregate","nest","rollup","renderTiled","tiled","aggregated","max_count","merge","scale_normalize","interpolateViridis","tileForegroundBrushed","renderTiledBrushed","toTypeCoerceNumbers","parseFloat","parseInt","ascending","interactive","shadows","init","filterUpdated","DefaultConfig","hideAxis","initState","userConfig","dimensionTitles","warn","eventTypes","dispatch","apply","debug","None","computeClusterCentroids","Map","clusterCounts","has","set","count","_map","without","items","el","sideEffects","getset","obj","side_effects","old","previous","d3_rebind","target","source","method","_rebind","bindEvents","__","ParCoords","compute_real_centroids","adjacent_pairs","install1DAxesMulti","version"],"mappings":"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"}