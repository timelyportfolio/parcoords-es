{"version":3,"file":"parcoords.js","sources":["../src/util/renderQueue.js","../src/util/width.js","../src/brush/1d/brushExtents.js","../src/brush/1d/brushReset.js","../src/brush/1d/selected.js","../src/brush/1d/brushFor.js","../src/brush/1d/install.js","../src/brush/1d/uninstall.js","../src/brush/1d/index.js","../src/brush/1d-multi/drawBrushes.js","../src/brush/1d-multi/selected.js","../src/brush/1d-multi/newBrush.js","../src/brush/1d-multi/brushExtents.js","../src/brush/1d-multi/brushReset.js","../src/brush/1d-multi/brushFor.js","../src/brush/1d-multi/install.js","../src/brush/1d-multi/uninstall.js","../src/brush/1d-multi/index.js","../src/brush/strums/uninstall.js","../src/brush/strums/selected.js","../src/brush/strums/removeStrum.js","../src/brush/strums/onDragEnd.js","../src/brush/strums/onDrag.js","../src/util/height.js","../src/brush/dimensionsForPoint.js","../src/brush/strums/onDragStart.js","../src/brush/strums/brushReset.js","../src/brush/consecutive.js","../src/brush/strums/install.js","../src/brush/strums/index.js","../src/brush/angular/uninstall.js","../src/brush/angular/util/hypothenuse.js","../src/brush/angular/selected.js","../src/brush/angular/removeStrum.js","../src/brush/angular/onDragEnd.js","../src/brush/angular/onDrag.js","../src/brush/angular/onDragStart.js","../src/brush/angular/brushReset.js","../src/brush/angular/install.js","../src/brush/angular/index.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/util/functor.js","../src/api/renderMarked.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/mark.js","../src/api/unmark.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/api/getOrderedDimensionKeys.js","../src/api/interactive.js","../src/api/shadows.js","../src/api/init.js","../src/api/flip.js","../src/api/detectDimensions.js","../src/api/scale.js","../src/api/filter.js","../src/state/defaultConfig.js","../src/state/index.js","../src/util/computeClusterCentroids.js","../src/state/sideEffects.js","../src/util/getset.js","../src/bindEvents.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\r\n\r\nconst renderQueue = function(func) {\r\n  let _queue = [], // data to be rendered\r\n    _rate = 1000, // number of calls per frame\r\n    _invalidate = function() {}, // invalidate last render queue\r\n    _clear = function() {}; // clearing function\r\n\r\n  let rq = function(data) {\r\n    if (data) rq.data(data);\r\n    _invalidate();\r\n    _clear();\r\n    rq.render();\r\n  };\r\n\r\n  rq.render = function() {\r\n    let valid = true;\r\n    _invalidate = rq.invalidate = function() {\r\n      valid = false;\r\n    };\r\n\r\n    function doFrame() {\r\n      if (!valid) return true;\r\n      let chunk = _queue.splice(0, _rate);\r\n      chunk.map(func);\r\n      requestAnimationFrame(doFrame);\r\n    }\r\n\r\n    doFrame();\r\n  };\r\n\r\n  rq.data = function(data) {\r\n    _invalidate();\r\n    _queue = data.slice(0); // creates a copy of the data\r\n    return rq;\r\n  };\r\n\r\n  rq.add = function(data) {\r\n    _queue = _queue.concat(data);\r\n  };\r\n\r\n  rq.rate = function(value) {\r\n    if (!arguments.length) return _rate;\r\n    _rate = value;\r\n    return rq;\r\n  };\r\n\r\n  rq.remaining = function() {\r\n    return _queue.length;\r\n  };\r\n\r\n  // clear the canvas\r\n  rq.clear = function(func) {\r\n    if (!arguments.length) {\r\n      _clear();\r\n      return rq;\r\n    }\r\n    _clear = func;\r\n    return rq;\r\n  };\r\n\r\n  rq.invalidate = _invalidate;\r\n\r\n  return rq;\r\n};\r\n\r\nexport default renderQueue;\r\n","const w = config => config.width - config.margin.right - config.margin.left;\r\n\r\nexport default w;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\n\r\nconst brushExtents = (state, config, pc) => extents => {\r\n  const { brushes, brushNodes } = state;\r\n\r\n  if (typeof extents === 'undefined') {\r\n    return Object.keys(config.dimensions).reduce((acc, cur) => {\r\n      const brush = brushes[cur];\r\n      //todo: brush check\r\n      if (brush !== undefined && brushSelection(brushNodes[cur]) !== null) {\r\n        acc[cur] = brush.extent();\r\n      }\r\n\r\n      return acc;\r\n    }, {});\r\n  } else {\r\n    //first get all the brush selections\r\n    const brushSelections = {};\r\n    pc.g()\r\n      .selectAll('.brush')\r\n      .each(function(d) {\r\n        brushSelections[d] = select(this);\r\n      });\r\n\r\n    // loop over each dimension and update appropriately (if it was passed in through extents)\r\n    Object.keys(config.dimensions).forEach(d => {\r\n      if (extents[d] === undefined) {\r\n        return;\r\n      }\r\n\r\n      const brush = brushes[d];\r\n      if (brush !== undefined) {\r\n        const dim = config.dimensions[d];\r\n        const yExtent = extents[d].map(dim.yscale);\r\n\r\n        //update the extent\r\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\r\n        brush.extent([[-15, yExtent[1]], [15, yExtent[0]]]);\r\n\r\n        //redraw the brush\r\n        //https://github.com/d3/d3-brush#brush_move\r\n        // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\r\n        brushSelections[d].call(brush).call(brush.move, yExtent.reverse());\r\n\r\n        //fire some events\r\n        // brush.event(brushSelections[d]);\r\n      }\r\n    });\r\n\r\n    //redraw the chart\r\n    pc.renderBrushed();\r\n\r\n    return pc;\r\n  }\r\n};\r\n\r\nexport default brushExtents;\r\n","import { select } from 'd3-selection';\r\n\r\nconst brushReset = (state, config, pc) => dimension => {\r\n  const { brushes } = state;\r\n\r\n  if (dimension === undefined) {\r\n    config.brushed = false;\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      pc.g()\r\n        .selectAll('.brush')\r\n        .each(function(d) {\r\n          select(this).call(brushes[d].move, null);\r\n        });\r\n      pc.renderBrushed();\r\n    }\r\n  } else {\r\n    config.brushed = false;\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      pc.g()\r\n        .selectAll('.brush')\r\n        .each(function(d) {\r\n          if (d !== dimension) return;\r\n          select(this).call(brushes[d].move, null);\r\n          if (typeof brushes[d].type === 'function') {\r\n            brushes[d].event(select(this));\r\n          }\r\n        });\r\n      pc.renderBrushed();\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default brushReset;\r\n","import { brushSelection } from 'd3-brush';\r\n//https://github.com/d3/d3-brush/issues/10\r\n\r\n// data within extents\r\nconst selected = (state, config, brushGroup) => () => {\r\n  const { brushNodes } = state;\r\n  const is_brushed = p =>\r\n    brushNodes[p] && brushSelection(brushNodes[p]) !== null;\r\n\r\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\r\n  const extents = actives.map(p => {\r\n    const _brushRange = brushSelection(brushNodes[p]);\r\n\r\n    if (typeof config.dimensions[p].yscale.invert === 'function') {\r\n      return [\r\n        config.dimensions[p].yscale.invert(_brushRange[1]),\r\n        config.dimensions[p].yscale.invert(_brushRange[0]),\r\n      ];\r\n    } else {\r\n      return _brushRange;\r\n    }\r\n  });\r\n  // We don't want to return the full data set when there are no axes brushed.\r\n  // Actually, when there are no axes brushed, by definition, no items are\r\n  // selected. So, let's avoid the filtering and just return false.\r\n  //if (actives.length === 0) return false;\r\n\r\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\r\n  if (actives.length === 0) return config.data;\r\n\r\n  // test if within range\r\n  const within = {\r\n    date: (d, p, dimension) => {\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        return (\r\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n        );\r\n      } else {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      }\r\n    },\r\n    number: (d, p, dimension) => {\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        return (\r\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n        );\r\n      } else {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      }\r\n    },\r\n    string: (d, p, dimension) => {\r\n      return (\r\n        extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n        config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n      );\r\n    },\r\n  };\r\n\r\n  return config.data.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return actives.every(function(p, dimension) {\r\n          return within[config.dimensions[p].type](d, p, dimension);\r\n        });\r\n      case 'OR':\r\n        return actives.some(function(p, dimension) {\r\n          return within[config.dimensions[p].type](d, p, dimension);\r\n        });\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","import { brushY, brushSelection } from 'd3-brush';\r\nimport { event } from 'd3-selection';\r\n\r\nimport selected from './selected';\r\n\r\nconst brushUpdated = (config, pc, events, args) => newSelection => {\r\n  config.brushed = newSelection;\r\n  events.call('brush', pc, config.brushed, args);\r\n  pc.renderBrushed();\r\n};\r\n\r\nconst brushFor = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const brushRangeMax =\r\n    config.dimensions[axis].type === 'string'\r\n      ? config.dimensions[axis].yscale.range()[\r\n          config.dimensions[axis].yscale.range().length - 1\r\n        ]\r\n      : config.dimensions[axis].yscale.range()[0];\r\n\r\n  const _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\r\n\r\n  const convertBrushArguments = args => {\r\n    const args_array = Array.prototype.slice.call(args);\r\n    const axis = args_array[0];\r\n    const selection_raw = brushSelection(args_array[2][0]);\r\n    const selection_scaled = selection_raw.map(d =>\r\n      config.dimensions[axis].yscale.invert(d)\r\n    );\r\n\r\n    return {\r\n      axis: args_array[0],\r\n      node: args_array[2][0],\r\n      selection: {\r\n        raw: selection_raw,\r\n        scaled: selection_scaled,\r\n      },\r\n    };\r\n  };\r\n\r\n  _brush\r\n    .on('start', function() {\r\n      if (event.sourceEvent !== null) {\r\n        events.call(\r\n          'brushstart',\r\n          pc,\r\n          config.brushed,\r\n          convertBrushArguments(arguments)\r\n        );\r\n        if (typeof event.sourceEvent.stopPropagation === 'function') {\r\n          event.sourceEvent.stopPropagation();\r\n        }\r\n      }\r\n    })\r\n    .on('brush', function() {\r\n      brushUpdated(\r\n        config,\r\n        pc,\r\n        events,\r\n        convertBrushArguments(arguments)\r\n      )(selected(state, config, brushGroup)());\r\n    })\r\n    .on('end', function() {\r\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\r\n      events.call(\r\n        'brushend',\r\n        pc,\r\n        config.brushed,\r\n        convertBrushArguments(arguments)\r\n      );\r\n    });\r\n\r\n  state.brushes[axis] = _brush;\r\n  state.brushNodes[axis] = _selector.node();\r\n\r\n  return _brush;\r\n};\r\n\r\nexport default brushFor;\r\n","import { select } from 'd3-selection';\r\nimport brushExtents from './brushExtents';\r\nimport brushReset from './brushReset';\r\nimport brushFor from './brushFor';\r\n\r\nconst install = (state, config, pc, events, brushGroup) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  // Add and store a brush for each axis.\r\n  const brush = pc\r\n    .g()\r\n    .append('svg:g')\r\n    .attr('class', 'brush')\r\n    .each(function(d) {\r\n      select(this).call(\r\n        brushFor(state, config, pc, events, brushGroup)(d, select(this))\r\n      );\r\n    });\r\n  brush\r\n    .selectAll('rect')\r\n    .style('visibility', null)\r\n    .attr('x', -15)\r\n    .attr('width', 30);\r\n\r\n  brush.selectAll('rect.background').style('fill', 'transparent');\r\n\r\n  brush\r\n    .selectAll('rect.extent')\r\n    .style('fill', 'rgba(255,255,255,0.25)')\r\n    .style('stroke', 'rgba(0,0,0,0.6)');\r\n\r\n  brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\r\n\r\n  pc.brushExtents = brushExtents(state, config, pc);\r\n  pc.brushReset = brushReset(state, config, pc);\r\n  return pc;\r\n};\r\n\r\nexport default install;\r\n","const uninstall = (state, pc) => () => {\r\n  if (pc.g() !== undefined && pc.g() !== null)\r\n    pc.g()\r\n      .selectAll('.brush')\r\n      .remove();\r\n\r\n  state.brushes = {};\r\n  delete pc.brushExtents;\r\n  delete pc.brushReset;\r\n};\r\n\r\nexport default uninstall;\r\n","import brushExtents from './brushExtents';\r\nimport install from './install';\r\nimport selected from './selected';\r\nimport uninstall from './uninstall';\r\n\r\nconst install1DAxes = (brushGroup, config, pc, events) => {\r\n  const state = {\r\n    brushes: {},\r\n    brushNodes: {},\r\n  };\r\n\r\n  brushGroup.modes['1D-axes'] = {\r\n    install: install(state, config, pc, events, brushGroup),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(state, config, brushGroup),\r\n    brushState: brushExtents(state, config, pc),\r\n  };\r\n};\r\n\r\nexport default install1DAxes;\r\n","import { select } from 'd3-selection';\r\n\r\nconst drawBrushes = (brushes, config, pc, axis, selector) => {\r\n  const brushSelection = selector.selectAll('.brush').data(brushes, d => d.id);\r\n\r\n  brushSelection\r\n    .enter()\r\n    .insert('g', '.brush')\r\n    .attr('class', 'brush')\r\n    .attr('dimension', axis)\r\n    .attr(\r\n      'id',\r\n      b => 'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + b.id\r\n    )\r\n    .each(function(brushObject) {\r\n      brushObject.brush(select(this));\r\n    });\r\n\r\n  brushSelection.each(function(brushObject) {\r\n    select(this)\r\n      .attr('class', 'brush')\r\n      .selectAll('.overlay')\r\n      .style('pointer-events', function() {\r\n        const brush = brushObject.brush;\r\n        if (brushObject.id === brushes.length - 1 && brush !== undefined) {\r\n          return 'all';\r\n        } else {\r\n          return 'none';\r\n        }\r\n      });\r\n  });\r\n\r\n  brushSelection.exit().remove();\r\n};\r\n\r\nexport default drawBrushes;\r\n","import { brushSelection } from 'd3-brush';\r\n\r\n// data within extents\r\nconst selected = (state, config, pc, events, brushGroup) => {\r\n  const { brushes } = state;\r\n\r\n  const is_brushed = (p, pos) => {\r\n    const axisBrushes = brushes[p];\r\n\r\n    for (let i = 0; i < axisBrushes.length; i++) {\r\n      const brush = document.getElementById('brush-' + pos + '-' + i);\r\n\r\n      if (brushSelection(brush) !== null) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\r\n  const extents = actives.map(p => {\r\n    const axisBrushes = brushes[p];\r\n\r\n    return axisBrushes\r\n      .map((d, i) =>\r\n        brushSelection(\r\n          document.getElementById(\r\n            'brush-' + Object.keys(config.dimensions).indexOf(p) + '-' + i\r\n          )\r\n        )\r\n      )\r\n      .map((d, i) => {\r\n        if (d === null || d === undefined) {\r\n          return null;\r\n        } else if (typeof config.dimensions[p].yscale.invert === 'function') {\r\n          return [\r\n            config.dimensions[p].yscale.invert(d[1]),\r\n            config.dimensions[p].yscale.invert(d[0]),\r\n          ];\r\n        } else {\r\n          return d;\r\n        }\r\n      });\r\n  });\r\n\r\n  // We don't want to return the full data set when there are no axes brushed.\r\n  // Actually, when there are no axes brushed, by definition, no items are\r\n  // selected. So, let's avoid the filtering and just return false.\r\n  //if (actives.length === 0) return false;\r\n\r\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\r\n  if (actives.length === 0) return config.data;\r\n\r\n  // test if within range\r\n  const within = {\r\n    date: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (\r\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n            config.dimensions[p].yscale(d[p]) <= e[1]\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      } else {\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (e[0] <= d[p] && d[p] <= e[1]) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    },\r\n    number: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (\r\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n            config.dimensions[p].yscale(d[p]) <= e[1]\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      } else {\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (e[0] <= d[p] && d[p] <= e[1]) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    },\r\n    string: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      for (const e of dimExt) {\r\n        if (e === null || e === undefined) {\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= e[1]\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n  };\r\n\r\n  return config.data.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return actives.every((p, i) =>\r\n          within[config.dimensions[p].type](d, p, i)\r\n        );\r\n      case 'OR':\r\n        return actives.some((p, i) =>\r\n          within[config.dimensions[p].type](d, p, i)\r\n        );\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","import { brushY, brushSelection } from 'd3-brush';\r\nimport { event, select } from 'd3-selection';\r\nimport drawBrushes from './drawBrushes';\r\nimport selected from './selected';\r\n\r\nconst brushUpdated = (config, pc, events) => newSelection => {\r\n  config.brushed = newSelection;\r\n  events.call('brush', pc, config.brushed);\r\n  pc.renderBrushed();\r\n};\r\n\r\nconst newBrush = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const { brushes, brushNodes } = state;\r\n\r\n  const brushRangeMax =\r\n    config.dimensions[axis].type === 'string'\r\n      ? config.dimensions[axis].yscale.range()[\r\n          config.dimensions[axis].yscale.range().length - 1\r\n        ]\r\n      : config.dimensions[axis].yscale.range()[0];\r\n\r\n  const brush = brushY().extent([[-15, 0], [15, brushRangeMax]]);\r\n  const id = brushes[axis] ? brushes[axis].length : 0;\r\n  const node =\r\n    'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + id;\r\n\r\n  if (brushes[axis]) {\r\n    brushes[axis].push({\r\n      id,\r\n      brush,\r\n      node,\r\n    });\r\n  } else {\r\n    brushes[axis] = [{ id, brush, node }];\r\n  }\r\n\r\n  if (brushNodes[axis]) {\r\n    brushNodes[axis].push({ id, node });\r\n  } else {\r\n    brushNodes[axis] = [{ id, node }];\r\n  }\r\n\r\n  brush\r\n    .on('start', function() {\r\n      if (event.sourceEvent !== null) {\r\n        events.call('brushstart', pc, config.brushed);\r\n        if (typeof event.sourceEvent.stopPropagation === 'function') {\r\n          event.sourceEvent.stopPropagation();\r\n        }\r\n      }\r\n    })\r\n    .on('brush', function(e) {\r\n      // record selections\r\n      brushUpdated(\r\n        config,\r\n        pc,\r\n        events\r\n      )(selected(state, config, pc, events, brushGroup));\r\n    })\r\n    .on('end', function() {\r\n      // Figure out if our latest brush has a selection\r\n      const lastBrushID = brushes[axis][brushes[axis].length - 1].id;\r\n      const lastBrush = document.getElementById(\r\n        'brush-' +\r\n          Object.keys(config.dimensions).indexOf(axis) +\r\n          '-' +\r\n          lastBrushID\r\n      );\r\n      const selection = brushSelection(lastBrush);\r\n\r\n      if (\r\n        selection !== undefined &&\r\n        selection !== null &&\r\n        selection[0] !== selection[1]\r\n      ) {\r\n        newBrush(state, config, pc, events, brushGroup)(axis, _selector);\r\n\r\n        drawBrushes(brushes[axis], config, pc, axis, _selector);\r\n\r\n        brushUpdated(config, pc, events)(\r\n          selected(state, config, pc, events, brushGroup)\r\n        );\r\n      } else {\r\n        if (\r\n          event.sourceEvent &&\r\n          event.sourceEvent.toString() === '[object MouseEvent]' &&\r\n          event.selection === null\r\n        ) {\r\n          pc.brushReset(axis);\r\n        }\r\n      }\r\n\r\n      events.call('brushend', pc, config.brushed);\r\n    });\r\n\r\n  return brush;\r\n};\r\n\r\nexport default newBrush;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\nimport newBrush from './newBrush';\r\nimport drawBrushes from './drawBrushes';\r\n\r\n/**\r\n *\r\n * extents are in format of [[2,6], [3,5]]\r\n *\r\n * * @param state\r\n * @param config\r\n * @param pc\r\n * @returns {Function}\r\n */\r\nconst brushExtents = (state, config, pc, events, brushGroup) => extents => {\r\n  const { brushes } = state;\r\n\r\n  if (typeof extents === 'undefined') {\r\n    return Object.keys(config.dimensions).reduce((acc, cur, pos) => {\r\n      const axisBrushes = brushes[cur];\r\n\r\n      if (axisBrushes === undefined || axisBrushes === null) {\r\n        acc[cur] = [];\r\n      } else {\r\n        acc[cur] = axisBrushes.reduce((d, p, i) => {\r\n          const range = brushSelection(\r\n            document.getElementById('brush-' + pos + '-' + i)\r\n          );\r\n          if (range !== null) {\r\n            d = d.push(range);\r\n          }\r\n\r\n          return d;\r\n        }, []);\r\n      }\r\n\r\n      return acc;\r\n    }, {});\r\n  } else {\r\n    // //first get all the brush selections\r\n    // loop over each dimension and update appropriately (if it was passed in through extents)\r\n    Object.keys(config.dimensions).forEach((d, pos) => {\r\n      if (extents[d] === undefined || extents[d] === null) {\r\n        return;\r\n      }\r\n\r\n      const dim = config.dimensions[d];\r\n\r\n      const yExtents = extents[d].map(e => e.map(dim.yscale));\r\n\r\n      const _bs = yExtents.map((e, j) => {\r\n        const _brush = newBrush(state, config, pc, events, brushGroup)(\r\n          d,\r\n          select('#brush-group-' + pos)\r\n        );\r\n        //update the extent\r\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\r\n        _brush.extent([[-15, e[1]], [15, e[0]]]);\r\n\r\n        return {\r\n          id: j,\r\n          brush: _brush,\r\n          ext: e,\r\n        };\r\n      });\r\n\r\n      brushes[d] = _bs;\r\n\r\n      drawBrushes(_bs, config, pc, d, select('#brush-group-' + pos));\r\n\r\n      //redraw the brush\r\n      //https://github.com/d3/d3-brush#brush_move\r\n      // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\r\n      _bs.forEach((f, k) => {\r\n        select('#brush-' + pos + '-' + k)\r\n          .call(f.brush)\r\n          .call(f.brush.move, f.ext.reverse());\r\n      });\r\n    });\r\n\r\n    //redraw the chart\r\n    pc.renderBrushed();\r\n\r\n    return pc;\r\n  }\r\n};\r\n\r\nexport default brushExtents;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\n\r\nconst brushReset = (state, config, pc) => dimension => {\r\n  const { brushes } = state;\r\n\r\n  if (dimension === undefined) {\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      Object.keys(config.dimensions).forEach((d, pos) => {\r\n        const axisBrush = brushes[d];\r\n\r\n        axisBrush.forEach((e, i) => {\r\n          const brush = document.getElementById('brush-' + pos + '-' + i);\r\n          if (brushSelection(brush) !== null) {\r\n            pc.g()\r\n              .select('#brush-' + pos + '-' + i)\r\n              .call(e.brush.move, null);\r\n          }\r\n        });\r\n      });\r\n\r\n      pc.renderBrushed();\r\n    }\r\n  } else {\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      const axisBrush = brushes[dimension];\r\n      const pos = Object.keys(config.dimensions).indexOf(dimension);\r\n\r\n      axisBrush.forEach((e, i) => {\r\n        const brush = document.getElementById('brush-' + pos + '-' + i);\r\n        if (brushSelection(brush) !== null) {\r\n          pc.g()\r\n            .select('#brush-' + pos + '-' + i)\r\n            .call(e.brush.move, null);\r\n\r\n          if (typeof e.event === 'function') {\r\n            e.event(select('#brush-' + pos + '-' + i));\r\n          }\r\n        }\r\n      });\r\n\r\n      pc.renderBrushed();\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default brushReset;\r\n","import newBrush from './newBrush';\r\nimport drawBrushes from './drawBrushes';\r\n\r\nconst brushFor = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const { brushes } = state;\r\n  newBrush(state, config, pc, events, brushGroup)(axis, _selector);\r\n  drawBrushes(brushes[axis], config, pc, axis, _selector);\r\n};\r\n\r\nexport default brushFor;\r\n","import { select } from 'd3-selection';\r\nimport brushExtents from './brushExtents';\r\nimport brushReset from './brushReset';\r\nimport brushFor from './brushFor';\r\n\r\nconst install = (state, config, pc, events, brushGroup) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  pc.g()\r\n    .append('svg:g')\r\n    .attr('id', (d, i) => 'brush-group-' + i)\r\n    .attr('class', 'brush-group')\r\n    .attr('dimension', d => d)\r\n    .each(function(d) {\r\n      brushFor(state, config, pc, events, brushGroup)(d, select(this));\r\n    });\r\n\r\n  pc.brushExtents = brushExtents(state, config, pc, events, brushGroup);\r\n  pc.brushReset = brushReset(state, config, pc);\r\n  return pc;\r\n};\r\n\r\nexport default install;\r\n","const uninstall = (state, pc) => () => {\r\n  if (pc.g() !== undefined && pc.g() !== null)\r\n    pc.g()\r\n      .selectAll('.brush-group')\r\n      .remove();\r\n\r\n  state.brushes = {};\r\n  delete pc.brushExtents;\r\n  delete pc.brushReset;\r\n};\r\n\r\nexport default uninstall;\r\n","import brushExtents from './brushExtents';\r\nimport install from './install';\r\nimport selected from './selected';\r\nimport uninstall from './uninstall';\r\n\r\nconst install1DMultiAxes = (brushGroup, config, pc, events) => {\r\n  const state = {\r\n    brushes: {},\r\n    brushNodes: {},\r\n  };\r\n\r\n  brushGroup.modes['1D-axes-multi'] = {\r\n    install: install(state, config, pc, events, brushGroup),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(state, config, brushGroup),\r\n    brushState: brushExtents(state, config, pc),\r\n  };\r\n};\r\n\r\nexport default install1DMultiAxes;\r\n","const uninstall = (state, pc) => () => {\r\n  pc.selection\r\n    .select('svg')\r\n    .select('g#strums')\r\n    .remove();\r\n  pc.selection\r\n    .select('svg')\r\n    .select('rect#strum-events')\r\n    .remove();\r\n  pc.on('axesreorder.strums', undefined);\r\n  delete pc.brushReset;\r\n\r\n  state.strumRect = undefined;\r\n};\r\n\r\nexport default uninstall;\r\n","// test if point falls between lines\r\nconst containmentTest = (strum, width) => p => {\r\n  const p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\r\n    p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\r\n    m1 = 1 - width / p1[0],\r\n    b1 = p1[1] * (1 - m1),\r\n    m2 = 1 - width / p2[0],\r\n    b2 = p2[1] * (1 - m2);\r\n\r\n  const x = p[0],\r\n    y = p[1],\r\n    y1 = m1 * x + b1,\r\n    y2 = m2 * x + b2;\r\n\r\n  return y > Math.min(y1, y2) && y < Math.max(y1, y2);\r\n};\r\n\r\nconst crossesStrum = (state, config) => (d, id) => {\r\n  let strum = state.strums[id],\r\n    test = containmentTest(strum, state.strums.width(id)),\r\n    d1 = strum.dims.left,\r\n    d2 = strum.dims.right,\r\n    y1 = config.dimensions[d1].yscale,\r\n    y2 = config.dimensions[d2].yscale,\r\n    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\r\n  return test(point);\r\n};\r\n\r\nconst selected = (brushGroup, state, config) => {\r\n  // Get the ids of the currently active strums.\r\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d)),\r\n    brushed = config.data;\r\n\r\n  if (ids.length === 0) {\r\n    return brushed;\r\n  }\r\n\r\n  const crossTest = crossesStrum(state, config);\r\n\r\n  return brushed.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return ids.every(id => crossTest(d, id));\r\n      case 'OR':\r\n        return ids.some(id => crossTest(d, id));\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","const removeStrum = (state, pc) => {\r\n  const strum = state.strums[state.strums.active],\r\n    svg = pc.selection.select('svg').select('g#strums');\r\n\r\n  delete state.strums[state.strums.active];\r\n  svg.selectAll('line#strum-' + strum.dims.i).remove();\r\n  svg.selectAll('circle#strum-' + strum.dims.i).remove();\r\n};\r\n\r\nexport default removeStrum;\r\n","import selected from './selected';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\r\n  const strum = state.strums[state.strums.active];\r\n\r\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\r\n  // considered a drag without move. So we have to deal with that case\r\n  if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\r\n    removeStrum(state, pc);\r\n  }\r\n\r\n  const brushed = selected(brushGroup, state, config);\r\n  state.strums.active = undefined;\r\n  config.brushed = brushed;\r\n  pc.renderBrushed();\r\n  events.call('brushend', pc, config.brushed);\r\n};\r\n\r\nexport default onDragEnd;\r\n","import { event, select } from 'd3-selection';\r\nimport { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\n\r\nconst drawStrum = (\r\n  brushGroup,\r\n  state,\r\n  config,\r\n  pc,\r\n  events,\r\n  strum,\r\n  activePoint\r\n) => {\r\n  let _svg = pc.selection.select('svg').select('g#strums'),\r\n    id = strum.dims.i,\r\n    points = [strum.p1, strum.p2],\r\n    _line = _svg.selectAll('line#strum-' + id).data([strum]),\r\n    circles = _svg.selectAll('circle#strum-' + id).data(points),\r\n    _drag = drag();\r\n\r\n  _line\r\n    .enter()\r\n    .append('line')\r\n    .attr('id', 'strum-' + id)\r\n    .attr('class', 'strum');\r\n\r\n  _line\r\n    .attr('x1', d => d.p1[0])\r\n    .attr('y1', d => d.p1[1])\r\n    .attr('x2', d => d.p2[0])\r\n    .attr('y2', d => d.p2[1])\r\n    .attr('stroke', 'black')\r\n    .attr('stroke-width', 2);\r\n\r\n  _drag\r\n    .on('drag', function(d, i) {\r\n      const ev = event;\r\n      i = i + 1;\r\n      strum['p' + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\r\n      strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\r\n      drawStrum(brushGroup, state, config, pc, events, strum, i - 1);\r\n    })\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  circles\r\n    .enter()\r\n    .append('circle')\r\n    .attr('id', 'strum-' + id)\r\n    .attr('class', 'strum');\r\n\r\n  circles\r\n    .attr('cx', d => d[0])\r\n    .attr('cy', d => d[1])\r\n    .attr('r', 5)\r\n    .style(\r\n      'opacity',\r\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\r\n    )\r\n    .on('mouseover', function() {\r\n      select(this).style('opacity', 0.8);\r\n    })\r\n    .on('mouseout', function() {\r\n      select(this).style('opacity', 0);\r\n    })\r\n    .call(_drag);\r\n};\r\n\r\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\r\n  const ev = event,\r\n    strum = state.strums[state.strums.active];\r\n\r\n  // Make sure that the point is within the bounds\r\n  strum.p2[0] = Math.min(\r\n    Math.max(strum.minX + 1, ev.x - config.margin.left),\r\n    strum.maxX\r\n  );\r\n  strum.p2[1] = Math.min(\r\n    Math.max(strum.minY, ev.y - config.margin.top),\r\n    strum.maxY\r\n  );\r\n\r\n  drawStrum(brushGroup, state, config, pc, events, strum, 1);\r\n};\r\n\r\nexport default onDrag;\r\n","const h = config => config.height - config.margin.top - config.margin.bottom;\r\n\r\nexport default h;\r\n","const dimensionsForPoint = (config, pc, xscale, p) => {\r\n  const dims = { i: -1, left: undefined, right: undefined };\r\n  Object.keys(config.dimensions).some((dim, i) => {\r\n    if (xscale(dim) < p[0]) {\r\n      dims.i = i;\r\n      dims.left = dim;\r\n      dims.right = Object.keys(config.dimensions)[\r\n        pc.getOrderedDimensionKeys().indexOf(dim) + 1\r\n      ];\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  if (dims.left === undefined) {\r\n    // Event on the left side of the first axis.\r\n    dims.i = 0;\r\n    dims.left = pc.getOrderedDimensionKeys()[0];\r\n    dims.right = pc.getOrderedDimensionKeys()[1];\r\n  } else if (dims.right === undefined) {\r\n    // Event on the right side of the last axis\r\n    dims.i = Object.keys(config.dimensions).length - 1;\r\n    dims.right = dims.left;\r\n    dims.left = pc.getOrderedDimensionKeys()[\r\n      Object.keys(config.dimensions).length - 2\r\n    ];\r\n  }\r\n\r\n  return dims;\r\n};\r\n\r\nexport default dimensionsForPoint;\r\n","import { mouse } from 'd3-selection';\r\nimport h from '../../util/height';\r\nimport dimensionsForPoint from '../dimensionsForPoint';\r\n\r\n// First we need to determine between which two axes the sturm was started.\r\n// This will determine the freedom of movement, because a strum can\r\n// logically only happen between two axes, so no movement outside these axes\r\n// should be allowed.\r\nconst onDragStart = (state, config, pc, xscale) => () => {\r\n  let p = mouse(state.strumRect.node());\r\n\r\n  p[0] = p[0] - config.margin.left;\r\n  p[1] = p[1] - config.margin.top;\r\n\r\n  const dims = dimensionsForPoint(config, pc, xscale, p);\r\n  const strum = {\r\n    p1: p,\r\n    dims: dims,\r\n    minX: xscale(dims.left),\r\n    maxX: xscale(dims.right),\r\n    minY: 0,\r\n    maxY: h(config),\r\n  };\r\n\r\n  // Make sure that the point is within the bounds\r\n  strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\r\n  strum.p2 = strum.p1.slice();\r\n\r\n  state.strums[dims.i] = strum;\r\n  state.strums.active = dims.i;\r\n};\r\n\r\nexport default onDragStart;\r\n","import onDragEnd from './onDragEnd';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\r\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\r\n\r\n  ids.forEach(d => {\r\n    state.strums.active = d;\r\n    removeStrum(state, pc);\r\n  });\r\n  onDragEnd(brushGroup, state, config, pc, events)();\r\n};\r\n\r\nexport default brushReset;\r\n","// Checks if the first dimension is directly left of the second dimension.\r\nconst consecutive = dimensions => (first, second) => {\r\n  const keys = Object.keys(dimensions);\r\n\r\n  return keys.some(\r\n    (d, i) =>\r\n      d === first ? i + i < keys.length && dimensions[i + 1] === second : false\r\n  );\r\n};\r\n\r\nexport default consecutive;\r\n","import { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\nimport onDrag from './onDrag';\r\nimport onDragStart from './onDragStart';\r\nimport removeStrum from './removeStrum';\r\nimport brushReset from './brushReset';\r\nimport w from '../../util/width';\r\nimport h from '../../util/height';\r\nimport consecutive from '../consecutive';\r\n\r\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\r\n  if (pc.g() === undefined || pc.g() === null) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  const _drag = drag();\r\n\r\n  // Map of current strums. Strums are stored per segment of the PC. A segment,\r\n  // being the area between two axes. The left most area is indexed at 0.\r\n  state.strums.active = undefined;\r\n  // Returns the width of the PC segment where currently a strum is being\r\n  // placed. NOTE: even though they are evenly spaced in our current\r\n  // implementation, we keep for when non-even spaced segments are supported as\r\n  // well.\r\n  state.strums.width = id =>\r\n    state.strums[id] === undefined\r\n      ? undefined\r\n      : state.strums[id].maxX - state.strums[id].minX;\r\n\r\n  pc.on('axesreorder.strums', () => {\r\n    const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\r\n\r\n    if (ids.length > 0) {\r\n      // We have some strums, which might need to be removed.\r\n      ids.forEach(d => {\r\n        const dims = state.strums[d].dims;\r\n        state.strums.active = d;\r\n        // If the two dimensions of the current strum are not next to each other\r\n        // any more, than we'll need to remove the strum. Otherwise we keep it.\r\n        if (!consecutive(config.dimensions)(dims.left, dims.right)) {\r\n          removeStrum(state, pc);\r\n        }\r\n      });\r\n      onDragEnd(brushGroup, state, config, pc, events)();\r\n    }\r\n  });\r\n\r\n  // Add a new svg group in which we draw the strums.\r\n  pc.selection\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'strums')\r\n    .attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n  // Install the required brushReset function\r\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\r\n\r\n  _drag\r\n    .on('start', onDragStart(state, config, pc, xscale))\r\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  // NOTE: The styling needs to be done here and not in the css. This is because\r\n  //       for 1D brushing, the canvas layers should not listen to\r\n  //       pointer-events._.\r\n  state.strumRect = pc.selection\r\n    .select('svg')\r\n    .insert('rect', 'g#strums')\r\n    .attr('id', 'strum-events')\r\n    .attr('x', config.margin.left)\r\n    .attr('y', config.margin.top)\r\n    .attr('width', w(config))\r\n    .attr('height', h(config) + 2)\r\n    .style('opacity', 0)\r\n    .call(_drag);\r\n};\r\n\r\nexport default install;\r\n","import uninstall from './uninstall';\r\nimport install from './install';\r\nimport selected from './selected';\r\n\r\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\r\n  const state = {\r\n    strums: {},\r\n    strumRect: {},\r\n  };\r\n\r\n  brushGroup.modes['2D-strums'] = {\r\n    install: install(brushGroup, state, config, pc, events, xscale),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(brushGroup, state, config),\r\n    brushState: () => state.strums,\r\n  };\r\n};\r\n\r\nexport default install2DStrums;\r\n","const uninstall = (state, pc) => () => {\r\n  pc.selection\r\n    .select('svg')\r\n    .select('g#arcs')\r\n    .remove();\r\n  pc.selection\r\n    .select('svg')\r\n    .select('rect#arc-events')\r\n    .remove();\r\n  pc.on('axesreorder.arcs', undefined);\r\n\r\n  delete pc.brushReset;\r\n\r\n  state.strumRect = undefined;\r\n};\r\n\r\nexport default uninstall;\r\n","const hypothenuse = (a, b) => Math.sqrt(a * a + b * b);\r\n\r\nexport default hypothenuse;\r\n","import hypothenuse from './util/hypothenuse';\r\n\r\n// [0, 2*PI] -> [-PI/2, PI/2]\r\nconst signedAngle = angle =>\r\n  angle > Math.PI ? 1.5 * Math.PI - angle : 0.5 * Math.PI - angle;\r\n\r\n/**\r\n * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\r\n * However, one can only select lines from 0 to PI, so we compute the\r\n * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\r\n * are 12 and 6 o'clock respectively.\r\n */\r\nconst containmentTest = arc => a => {\r\n  let startAngle = signedAngle(arc.startAngle);\r\n  let endAngle = signedAngle(arc.endAngle);\r\n\r\n  if (startAngle > endAngle) {\r\n    const tmp = startAngle;\r\n    startAngle = endAngle;\r\n    endAngle = tmp;\r\n  }\r\n\r\n  // test if segment angle is contained in angle interval\r\n  return a >= startAngle && a <= endAngle;\r\n};\r\n\r\nconst crossesStrum = (state, config) => (d, id) => {\r\n  const arc = state.arcs[id],\r\n    test = containmentTest(arc),\r\n    d1 = arc.dims.left,\r\n    d2 = arc.dims.right,\r\n    y1 = config.dimensions[d1].yscale,\r\n    y2 = config.dimensions[d2].yscale,\r\n    a = state.arcs.width(id),\r\n    b = y1(d[d1]) - y2(d[d2]),\r\n    c = hypothenuse(a, b),\r\n    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\r\n  return test(angle);\r\n};\r\n\r\nconst selected = (brushGroup, state, config) => {\r\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\r\n  const brushed = config.data;\r\n\r\n  if (ids.length === 0) {\r\n    return brushed;\r\n  }\r\n\r\n  const crossTest = crossesStrum(state, config);\r\n\r\n  return brushed.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return ids.every(id => crossTest(d, id));\r\n      case 'OR':\r\n        return ids.some(id => crossTest(d, id));\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","const removeStrum = (state, pc) => {\r\n  const arc = state.arcs[state.arcs.active],\r\n    svg = pc.selection.select('svg').select('g#arcs');\r\n\r\n  delete state.arcs[state.arcs.active];\r\n  state.arcs.active = undefined;\r\n  svg.selectAll('line#arc-' + arc.dims.i).remove();\r\n  svg.selectAll('circle#arc-' + arc.dims.i).remove();\r\n  svg.selectAll('path#arc-' + arc.dims.i).remove();\r\n};\r\n\r\nexport default removeStrum;\r\n","import selected from './selected';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\r\n  const arc = state.arcs[state.arcs.active];\r\n\r\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\r\n  // considered a drag without move. So we have to deal with that case\r\n  if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\r\n    removeStrum(state, pc);\r\n  }\r\n\r\n  if (arc) {\r\n    const angle = state.arcs.startAngle(state.arcs.active);\r\n\r\n    arc.startAngle = angle;\r\n    arc.endAngle = angle;\r\n    arc.arc\r\n      .outerRadius(state.arcs.length(state.arcs.active))\r\n      .startAngle(angle)\r\n      .endAngle(angle);\r\n  }\r\n\r\n  state.arcs.active = undefined;\r\n  config.brushed = selected(brushGroup, state, config);\r\n  pc.renderBrushed();\r\n  events.call('brushend', pc, config.brushed);\r\n};\r\n\r\nexport default onDragEnd;\r\n","import { event, select } from 'd3-selection';\r\nimport { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\n\r\nconst drawStrum = (brushGroup, state, config, pc, events, arc, activePoint) => {\r\n  const svg = pc.selection.select('svg').select('g#arcs'),\r\n    id = arc.dims.i,\r\n    points = [arc.p2, arc.p3],\r\n    _line = svg\r\n      .selectAll('line#arc-' + id)\r\n      .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\r\n    circles = svg.selectAll('circle#arc-' + id).data(points),\r\n    _drag = drag(),\r\n    _path = svg.selectAll('path#arc-' + id).data([arc]);\r\n\r\n  _path\r\n    .enter()\r\n    .append('path')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc')\r\n    .style('fill', 'orange')\r\n    .style('opacity', 0.5);\r\n\r\n  _path\r\n    .attr('d', arc.arc)\r\n    .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\r\n\r\n  _line\r\n    .enter()\r\n    .append('line')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc');\r\n\r\n  _line\r\n    .attr('x1', d => d.p1[0])\r\n    .attr('y1', d => d.p1[1])\r\n    .attr('x2', d => d.p2[0])\r\n    .attr('y2', d => d.p2[1])\r\n    .attr('stroke', 'black')\r\n    .attr('stroke-width', 2);\r\n\r\n  _drag\r\n    .on('drag', (d, i) => {\r\n      const ev = event;\r\n      i = i + 2;\r\n\r\n      arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\r\n      arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\r\n\r\n      const angle =\r\n        i === 3 ? state.arcs.startAngle(id) : state.arcs.endAngle(id);\r\n\r\n      if (\r\n        (arc.startAngle < Math.PI &&\r\n          arc.endAngle < Math.PI &&\r\n          angle < Math.PI) ||\r\n        (arc.startAngle >= Math.PI &&\r\n          arc.endAngle >= Math.PI &&\r\n          angle >= Math.PI)\r\n      ) {\r\n        if (i === 2) {\r\n          arc.endAngle = angle;\r\n          arc.arc.endAngle(angle);\r\n        } else if (i === 3) {\r\n          arc.startAngle = angle;\r\n          arc.arc.startAngle(angle);\r\n        }\r\n      }\r\n\r\n      drawStrum(brushGroup, state, config, pc, events, arc, i - 2);\r\n    })\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  circles\r\n    .enter()\r\n    .append('circle')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc');\r\n\r\n  circles\r\n    .attr('cx', d => d[0])\r\n    .attr('cy', d => d[1])\r\n    .attr('r', 5)\r\n    .style(\r\n      'opacity',\r\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\r\n    )\r\n    .on('mouseover', function() {\r\n      select(this).style('opacity', 0.8);\r\n    })\r\n    .on('mouseout', function() {\r\n      select(this).style('opacity', 0);\r\n    })\r\n    .call(_drag);\r\n};\r\n\r\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\r\n  const ev = event,\r\n    arc = state.arcs[state.arcs.active];\r\n\r\n  // Make sure that the point is within the bounds\r\n  arc.p2[0] = Math.min(\r\n    Math.max(arc.minX + 1, ev.x - config.margin.left),\r\n    arc.maxX\r\n  );\r\n  arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - config.margin.top), arc.maxY);\r\n  arc.p3 = arc.p2.slice();\r\n  drawStrum(brushGroup, state, config, pc, events, arc, 1);\r\n};\r\n\r\nexport default onDrag;\r\n","import { mouse } from 'd3-selection';\r\nimport { arc as d3Arc } from 'd3-shape';\r\nimport dimensionsForPoint from '../dimensionsForPoint';\r\nimport h from '../../util/height';\r\n\r\n// First we need to determine between which two axes the arc was started.\r\n// This will determine the freedom of movement, because a arc can\r\n// logically only happen between two axes, so no movement outside these axes\r\n// should be allowed.\r\nconst onDragStart = (state, config, pc, xscale) => () => {\r\n  const p = mouse(state.strumRect.node());\r\n\r\n  p[0] = p[0] - config.margin.left;\r\n  p[1] = p[1] - config.margin.top;\r\n\r\n  const dims = dimensionsForPoint(config, pc, xscale, p);\r\n  const arc = {\r\n    p1: p,\r\n    dims: dims,\r\n    minX: xscale(dims.left),\r\n    maxX: xscale(dims.right),\r\n    minY: 0,\r\n    maxY: h(config),\r\n    startAngle: undefined,\r\n    endAngle: undefined,\r\n    arc: d3Arc().innerRadius(0),\r\n  };\r\n\r\n  // Make sure that the point is within the bounds\r\n  arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\r\n  arc.p2 = arc.p1.slice();\r\n  arc.p3 = arc.p1.slice();\r\n\r\n  state.arcs[dims.i] = arc;\r\n  state.arcs.active = dims.i;\r\n};\r\n\r\nexport default onDragStart;\r\n","import onDragEnd from './onDragEnd';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\r\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\r\n\r\n  ids.forEach(d => {\r\n    state.arcs.active = d;\r\n    removeStrum(state, pc);\r\n  });\r\n  onDragEnd(brushGroup, state, config, pc, events)();\r\n};\r\n\r\nexport default brushReset;\r\n","import { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\nimport onDrag from './onDrag';\r\nimport onDragStart from './onDragStart';\r\nimport removeStrum from './removeStrum';\r\nimport brushReset from './brushReset';\r\nimport w from '../../util/width';\r\nimport h from '../../util/height';\r\n\r\nimport hypothenuse from './util/hypothenuse';\r\nimport consecutive from '../consecutive';\r\n\r\n// returns angles in [-PI/2, PI/2]\r\nconst angle = (p1, p2) => {\r\n  const a = p1[0] - p2[0],\r\n    b = p1[1] - p2[1],\r\n    c = hypothenuse(a, b);\r\n\r\n  return Math.asin(b / c);\r\n};\r\n\r\nconst endAngle = state => id => {\r\n  const arc = state.arcs[id];\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n  let sAngle = angle(arc.p1, arc.p2),\r\n    uAngle = -sAngle + Math.PI / 2;\r\n\r\n  if (arc.p1[0] > arc.p2[0]) {\r\n    uAngle = 2 * Math.PI - uAngle;\r\n  }\r\n\r\n  return uAngle;\r\n};\r\n\r\nconst startAngle = state => id => {\r\n  const arc = state.arcs[id];\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  let sAngle = angle(arc.p1, arc.p3),\r\n    uAngle = -sAngle + Math.PI / 2;\r\n\r\n  if (arc.p1[0] > arc.p3[0]) {\r\n    uAngle = 2 * Math.PI - uAngle;\r\n  }\r\n\r\n  return uAngle;\r\n};\r\n\r\nconst length = state => id => {\r\n  const arc = state.arcs[id];\r\n\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  const a = arc.p1[0] - arc.p2[0],\r\n    b = arc.p1[1] - arc.p2[1];\r\n\r\n  return hypothenuse(a, b);\r\n};\r\n\r\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  const _drag = drag();\r\n\r\n  // Map of current arcs. arcs are stored per segment of the PC. A segment,\r\n  // being the area between two axes. The left most area is indexed at 0.\r\n  state.arcs.active = undefined;\r\n  // Returns the width of the PC segment where currently a arc is being\r\n  // placed. NOTE: even though they are evenly spaced in our current\r\n  // implementation, we keep for when non-even spaced segments are supported as\r\n  // well.\r\n  state.arcs.width = id => {\r\n    const arc = state.arcs[id];\r\n    return arc === undefined ? undefined : arc.maxX - arc.minX;\r\n  };\r\n\r\n  // returns angles in [0, 2 * PI]\r\n  state.arcs.endAngle = endAngle(state);\r\n  state.arcs.startAngle = startAngle(state);\r\n  state.arcs.length = length(state);\r\n\r\n  pc.on('axesreorder.arcs', () => {\r\n    const ids = Object.getOwnPropertyNames(arcs).filter(d => !isNaN(d));\r\n\r\n    if (ids.length > 0) {\r\n      // We have some arcs, which might need to be removed.\r\n      ids.forEach(d => {\r\n        const dims = arcs[d].dims;\r\n        state.arcs.active = d;\r\n        // If the two dimensions of the current arc are not next to each other\r\n        // any more, than we'll need to remove the arc. Otherwise we keep it.\r\n        if (!consecutive(dims)(dims.left, dims.right)) {\r\n          removeStrum(state, pc);\r\n        }\r\n      });\r\n      onDragEnd(brushGroup, state, config, pc, events)();\r\n    }\r\n  });\r\n\r\n  // Add a new svg group in which we draw the arcs.\r\n  pc.selection\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'arcs')\r\n    .attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n  // Install the required brushReset function\r\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\r\n\r\n  _drag\r\n    .on('start', onDragStart(state, config, pc, xscale))\r\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  // NOTE: The styling needs to be done here and not in the css. This is because\r\n  //       for 1D brushing, the canvas layers should not listen to\r\n  //       pointer-events._.\r\n  state.strumRect = pc.selection\r\n    .select('svg')\r\n    .insert('rect', 'g#arcs')\r\n    .attr('id', 'arc-events')\r\n    .attr('x', config.margin.left)\r\n    .attr('y', config.margin.top)\r\n    .attr('width', w(config))\r\n    .attr('height', h(config) + 2)\r\n    .style('opacity', 0)\r\n    .call(_drag);\r\n};\r\n\r\nexport default install;\r\n","import uninstall from './uninstall';\r\nimport install from './install';\r\nimport selected from './selected';\r\n\r\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\r\n  const state = {\r\n    arcs: {},\r\n    strumRect: {},\r\n  };\r\n\r\n  brushGroup.modes['angular'] = {\r\n    install: install(brushGroup, state, config, pc, events, xscale),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(brushGroup, state, config),\r\n    brushState: () => state.arcs,\r\n  };\r\n};\r\n\r\nexport default installAngularBrush;\r\n","// calculate 2d intersection of line a->b with line c->d\r\n// points are objects with x and y properties\r\nconst intersection = (a, b, c, d) => {\r\n  return {\r\n    x:\r\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\r\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\r\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\r\n    y:\r\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\r\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\r\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\r\n  };\r\n};\r\n\r\nexport default intersection;\r\n","// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\r\n// (so you can choose to save it to disk, etc.)\r\nconst mergeParcoords = pc => callback => {\r\n  // Retina display, etc.\r\n  const devicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n  // Create a canvas element to store the merged canvases\r\n  const mergedCanvas = document.createElement('canvas');\r\n  mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio;\r\n  mergedCanvas.height =\r\n    (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\r\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\r\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\r\n\r\n  // Give the canvas a white background\r\n  const context = mergedCanvas.getContext('2d');\r\n  context.fillStyle = '#ffffff';\r\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\r\n\r\n  // Merge all the canvases\r\n  for (const key in pc.canvas) {\r\n    context.drawImage(\r\n      pc.canvas[key],\r\n      0,\r\n      24 * devicePixelRatio,\r\n      mergedCanvas.width,\r\n      mergedCanvas.height - 30 * devicePixelRatio\r\n    );\r\n  }\r\n\r\n  // Add SVG elements to canvas\r\n  const DOMURL = window.URL || window.webkitURL || window;\r\n  const serializer = new XMLSerializer();\r\n  const svgStr = serializer.serializeToString(\r\n    pc.selection.select('svg').node()\r\n  );\r\n\r\n  // Create a Data URI.\r\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\r\n  const img = new Image();\r\n  img.onload = () => {\r\n    context.drawImage(\r\n      img,\r\n      0,\r\n      0,\r\n      img.width * devicePixelRatio,\r\n      img.height * devicePixelRatio\r\n    );\r\n    if (typeof callback === 'function') {\r\n      callback(mergedCanvas);\r\n    }\r\n  };\r\n  img.src = src;\r\n};\r\n\r\nexport default mergeParcoords;\r\n","import { brushSelection } from 'd3-brush';\r\nimport { matchArray } from 'searchjs';\r\n\r\nconst selected = (config, pc) => () => {\r\n  let actives = [];\r\n  let extents = [];\r\n  let ranges = {};\r\n  //get brush selections from each node, convert to actual values\r\n  //invert order of values in array to comply with the parcoords architecture\r\n  if (config.brushes.length === 0) {\r\n    let nodes = pc\r\n      .g()\r\n      .selectAll('.brush')\r\n      .nodes();\r\n    for (let k = 0; k < nodes.length; k++) {\r\n      if (brushSelection(nodes[k]) !== null) {\r\n        actives.push(nodes[k].__data__);\r\n        let values = [];\r\n        let ranger = brushSelection(nodes[k]);\r\n        if (\r\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\r\n          'number'\r\n        ) {\r\n          for (let i = 0; i < ranger.length; i++) {\r\n            if (\r\n              actives.includes(nodes[k].__data__) &&\r\n              config.flipAxes.includes(nodes[k].__data__)\r\n            ) {\r\n              values.push(\r\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\r\n              );\r\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\r\n              values.unshift(\r\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\r\n              );\r\n            }\r\n          }\r\n          extents.push(values);\r\n          for (let ii = 0; ii < extents.length; ii++) {\r\n            if (extents[ii].length === 0) {\r\n              extents[ii] = [1, 1];\r\n            }\r\n          }\r\n        } else {\r\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\r\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\r\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\r\n          for (let j = 0; j < dimRange.length; j++) {\r\n            if (\r\n              dimRange[j] >= ranger[0] &&\r\n              dimRange[j] <= ranger[1] &&\r\n              actives.includes(nodes[k].__data__) &&\r\n              config.flipAxes.includes(nodes[k].__data__)\r\n            ) {\r\n              values.push(dimRange[j]);\r\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\r\n              values.unshift(dimRange[j]);\r\n            }\r\n          }\r\n          extents.push(values);\r\n          for (let ii = 0; ii < extents.length; ii++) {\r\n            if (extents[ii].length === 0) {\r\n              extents[ii] = [1, 1];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // test if within range\r\n    const within = {\r\n      date: function(d, p, dimension) {\r\n        let category = d[p];\r\n        let categoryIndex = config.dimensions[p].yscale\r\n          .domain()\r\n          .indexOf(category);\r\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n          categoryIndex\r\n        ];\r\n        return (\r\n          categoryRangeValue >= ranges[p][0] &&\r\n          categoryRangeValue <= ranges[p][1]\r\n        );\r\n      },\r\n      number: function(d, p, dimension) {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      },\r\n      string: function(d, p, dimension) {\r\n        let category = d[p];\r\n        let categoryIndex = config.dimensions[p].yscale\r\n          .domain()\r\n          .indexOf(category);\r\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n          categoryIndex\r\n        ];\r\n        return (\r\n          categoryRangeValue >= ranges[p][0] &&\r\n          categoryRangeValue <= ranges[p][1]\r\n        );\r\n      },\r\n    };\r\nconsole.log(matchArray)\r\n    return config.data.filter(d =>\r\n      actives.every((p, dimension) =>\r\n        within[config.dimensions[p].type](d, p, dimension)\r\n      )\r\n    );\r\n  } else {\r\n    // need to get data from each brush instead of each axis\r\n    // first must find active axes by iterating through all brushes\r\n    // then go through similiar process as above.\r\n    let multiBrushData = [];\r\n    for (let idx = 0; idx < config.brushes.length; idx++) {\r\n      let brush = config.brushes[idx];\r\n      let values = [];\r\n      let ranger = brush.extent;\r\n      let actives = [brush.data];\r\n      if (\r\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\r\n      ) {\r\n        for (let i = 0; i < ranger.length; i++) {\r\n          if (\r\n            actives.includes(brush.data) &&\r\n            config.flipAxes.includes(brush.data)\r\n          ) {\r\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\r\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\r\n            values.unshift(\r\n              config.dimensions[brush.data].yscale.invert(ranger[i])\r\n            );\r\n          }\r\n        }\r\n        extents.push(values);\r\n        for (let ii = 0; ii < extents.length; ii++) {\r\n          if (extents[ii].length === 0) {\r\n            extents[ii] = [1, 1];\r\n          }\r\n        }\r\n      } else {\r\n        ranges[brush.data] = brush.extent;\r\n        let dimRange = config.dimensions[brush.data].yscale.range();\r\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\r\n        for (let j = 0; j < dimRange.length; j++) {\r\n          if (\r\n            dimRange[j] >= ranger[0] &&\r\n            dimRange[j] <= ranger[1] &&\r\n            actives.includes(brush.data) &&\r\n            config.flipAxes.includes(brush.data)\r\n          ) {\r\n            values.push(dimRange[j]);\r\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\r\n            values.unshift(dimRange[j]);\r\n          }\r\n        }\r\n        extents.push(values);\r\n        for (let ii = 0; ii < extents.length; ii++) {\r\n          if (extents[ii].length === 0) {\r\n            extents[ii] = [1, 1];\r\n          }\r\n        }\r\n      }\r\n      let within = {\r\n        date: function(d, p, dimension) {\r\n          let category = d[p];\r\n          let categoryIndex = config.dimensions[p].yscale\r\n            .domain()\r\n            .indexOf(category);\r\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n            categoryIndex\r\n          ];\r\n          return (\r\n            categoryRangeValue >= ranges[p][0] &&\r\n            categoryRangeValue <= ranges[p][1]\r\n          );\r\n        },\r\n        number: function(d, p, dimension) {\r\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\r\n        },\r\n        string: function(d, p, dimension) {\r\n          let category = d[p];\r\n          let categoryIndex = config.dimensions[p].yscale\r\n            .domain()\r\n            .indexOf(category);\r\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n            categoryIndex\r\n          ];\r\n          return (\r\n            categoryRangeValue >= ranges[p][0] &&\r\n            categoryRangeValue <= ranges[p][1]\r\n          );\r\n        },\r\n      };\r\n\r\n      // filter data, but instead of returning it now,\r\n      // put it into multiBrush data which is returned after\r\n      // all brushes are iterated through.\r\n      let filtered = config.data.filter(d =>\r\n        actives.every((p, dimension) =>\r\n          within[config.dimensions[p].type](d, p, dimension)\r\n        )\r\n      );\r\n      for (let z = 0; z < filtered.length; z++) {\r\n        multiBrushData.push(filtered[z]);\r\n      }\r\n      actives = [];\r\n      ranges = {};\r\n    }\r\n    return multiBrushData;\r\n  }\r\n};\r\n\r\nexport default selected;\r\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\r\n  if (predicate === null) {\r\n    return brushGroup.predicate;\r\n  }\r\n\r\n  predicate = String(predicate).toUpperCase();\r\n  if (predicate !== 'AND' && predicate !== 'OR') {\r\n    throw new Error('Invalid predicate ' + predicate);\r\n  }\r\n\r\n  brushGroup.predicate = predicate;\r\n  config.brushed = brushGroup.currentMode().selected();\r\n  pc.renderBrushed();\r\n  return pc;\r\n};\r\n\r\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\r\n  if (mode === null) {\r\n    return brushGroup.mode;\r\n  }\r\n\r\n  if (pc.brushModes().indexOf(mode) === -1) {\r\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\r\n  }\r\n\r\n  // Make sure that we don't trigger unnecessary events by checking if the mode\r\n  // actually changes.\r\n  if (mode !== brushGroup.mode) {\r\n    // When changing brush modes, the first thing we need to do is clearing any\r\n    // brushes from the current mode, if any.\r\n    if (brushGroup.mode !== 'None') {\r\n      pc.brushReset();\r\n    }\r\n\r\n    // Next, we need to 'uninstall' the current brushMode.\r\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\r\n    // Finally, we can install the requested one.\r\n    brushGroup.mode = mode;\r\n    brushGroup.modes[brushGroup.mode].install();\r\n    if (mode === 'None') {\r\n      delete pc.brushPredicate;\r\n    } else {\r\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\r\n    }\r\n  }\r\n\r\n  return pc;\r\n};\r\n\r\nexport default brushMode;\r\n","/**\r\n * dimension display names\r\n *\r\n * @param config\r\n * @param d\r\n * @returns {*}\r\n */\r\nconst dimensionLabels = config => d =>\r\n  config.dimensions[d].title ? config.dimensions[d].title : d;\r\n\r\nexport default dimensionLabels;\r\n","import { select } from 'd3-selection';\r\n\r\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\r\n  function(dimension) {\r\n    pc.flip(dimension);\r\n    pc.brushReset(dimension);\r\n    select(this.parentElement)\r\n      .transition()\r\n      .duration(config.animationTime)\r\n      .call(axis.scale(config.dimensions[dimension].yscale));\r\n    pc.render();\r\n  };\r\n\r\nexport default flipAxisAndUpdatePCP;\r\n","import { event } from 'd3-selection';\r\n\r\nconst rotateLabels = (config, pc) => {\r\n  if (!config.rotateLabels) return;\r\n\r\n  let delta = event.deltaY;\r\n  delta = delta < 0 ? -5 : delta;\r\n  delta = delta > 0 ? 5 : delta;\r\n\r\n  config.dimensionTitleRotation += delta;\r\n  pc.svg\r\n    .selectAll('text.label')\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    );\r\n  event.preventDefault();\r\n};\r\n\r\nexport default rotateLabels;\r\n","import { select } from 'd3-selection';\r\n\r\nimport dimensionLabels from '../util/dimensionLabels';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\nimport rotateLabels from '../util/rotateLabels';\r\n\r\nconst updateAxes = (config, pc, position, axis, flags) => (\r\n  animationTime = null\r\n) => {\r\n  if (animationTime === null) {\r\n    animationTime = config.animationTime;\r\n  }\r\n\r\n  const g_data = pc.svg\r\n    .selectAll('.dimension')\r\n    .data(pc.getOrderedDimensionKeys());\r\n  // Enter\r\n  g_data\r\n    .enter()\r\n    .append('svg:g')\r\n    .attr('class', 'dimension')\r\n    .attr('transform', p => 'translate(' + position(p) + ')')\r\n    .style('opacity', 0)\r\n    .append('svg:g')\r\n    .attr('class', 'axis')\r\n    .attr('transform', 'translate(0,0)')\r\n    .each(function(d) {\r\n      const axisElement = select(this).call(\r\n        pc.applyAxisConfig(axis, config.dimensions[d])\r\n      );\r\n\r\n      axisElement\r\n        .selectAll('path')\r\n        .style('fill', 'none')\r\n        .style('stroke', '#222')\r\n        .style('shape-rendering', 'crispEdges');\r\n\r\n      axisElement\r\n        .selectAll('line')\r\n        .style('fill', 'none')\r\n        .style('stroke', '#222')\r\n        .style('shape-rendering', 'crispEdges');\r\n    })\r\n    .append('svg:text')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('class', 'label')\r\n    .attr('x', 0)\r\n    .attr('y', 0)\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    )\r\n    .text(dimensionLabels(config))\r\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\r\n    .on('wheel', rotateLabels(config, pc));\r\n\r\n  // Update\r\n  g_data.attr('opacity', 0);\r\n  g_data\r\n    .select('.axis')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .each(function(d) {\r\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\r\n    });\r\n  g_data\r\n    .select('.label')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .text(dimensionLabels(config))\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    );\r\n\r\n  // Exit\r\n  g_data.exit().remove();\r\n\r\n  const g = pc.svg.selectAll('.dimension');\r\n  g.transition()\r\n    .duration(animationTime)\r\n    .attr('transform', p => 'translate(' + position(p) + ')')\r\n    .style('opacity', 1);\r\n\r\n  pc.svg\r\n    .selectAll('.axis')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .each(function(d) {\r\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\r\n    });\r\n\r\n  if (flags.brushable) pc.brushable();\r\n  if (flags.reorderable) pc.reorderable();\r\n  if (pc.brushMode() !== 'None') {\r\n    const mode = pc.brushMode();\r\n    pc.brushMode('None');\r\n    pc.brushMode(mode);\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default updateAxes;\r\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\r\nconst getRange = config => {\r\n  const h = config.height - config.margin.top - config.margin.bottom;\r\n\r\n  if (config.nullValueSeparator == 'bottom') {\r\n    return [\r\n      h +\r\n        1 -\r\n        config.nullValueSeparatorPadding.bottom -\r\n        config.nullValueSeparatorPadding.top,\r\n      1,\r\n    ];\r\n  } else if (config.nullValueSeparator == 'top') {\r\n    return [\r\n      h + 1,\r\n      1 +\r\n        config.nullValueSeparatorPadding.bottom +\r\n        config.nullValueSeparatorPadding.top,\r\n    ];\r\n  }\r\n  return [h + 1, 1];\r\n};\r\n\r\nexport default getRange;\r\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\r\nimport { extent } from 'd3-array';\r\n\r\nimport getRange from '../util/getRange';\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\nconst autoscale = (config, pc, xscale, ctx) =>\r\n  function() {\r\n    // yscale\r\n    const defaultScales = {\r\n      date: function(k) {\r\n        let _extent = extent(config.data, d => (d[k] ? d[k].getTime() : null));\r\n        // special case if single value\r\n        if (_extent[0] === _extent[1]) {\r\n          return scalePoint()\r\n            .domain(_extent)\r\n            .range(getRange(config));\r\n        }\r\n        if (config.flipAxes.includes(k)) {\r\n          _extent = _extent.map(val => tempDate.unshift(val));\r\n        }\r\n        return scaleTime()\r\n          .domain(_extent)\r\n          .range(getRange(config));\r\n      },\r\n      number: function(k) {\r\n        let _extent = extent(config.data, d => +d[k]);\r\n        // special case if single value\r\n        if (_extent[0] === _extent[1]) {\r\n          return scalePoint()\r\n            .domain(_extent)\r\n            .range(getRange(config));\r\n        }\r\n        if (config.flipAxes.includes(k)) {\r\n          _extent = _extent.map(val => tempDate.unshift(val));\r\n        }\r\n        return scaleLinear()\r\n          .domain(_extent)\r\n          .range(getRange(config));\r\n      },\r\n      string: function(k) {\r\n        let counts = {},\r\n          domain = [];\r\n        // Let's get the count for each value so that we can sort the domain based\r\n        // on the number of items for each value.\r\n        config.data.map(p => {\r\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\r\n            return null; // null values will be drawn beyond the horizontal null value separator!\r\n          }\r\n          if (counts[p[k]] === undefined) {\r\n            counts[p[k]] = 1;\r\n          } else {\r\n            counts[p[k]] = counts[p[k]] + 1;\r\n          }\r\n        });\r\n        if (config.flipAxes.includes(k)) {\r\n          domain = Object.getOwnPropertyNames(counts).sort();\r\n        } else {\r\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\r\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\r\n            domain.push(tempArr.pop());\r\n          }\r\n        }\r\n\r\n        //need to create an ordinal scale for categorical data\r\n        let categoricalRange = [];\r\n        if (domain.length === 1) {\r\n          //edge case\r\n          domain = [' ', domain[0], ' '];\r\n        }\r\n        let addBy = getRange(config)[0] / (domain.length - 1);\r\n        for (let j = 0; j < domain.length; j++) {\r\n          if (categoricalRange.length === 0) {\r\n            categoricalRange.push(0);\r\n            continue;\r\n          }\r\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\r\n        }\r\n        return scaleOrdinal()\r\n          .domain(domain)\r\n          .range(categoricalRange);\r\n      },\r\n    };\r\n    Object.keys(config.dimensions).forEach(function(k) {\r\n      if (\r\n        config.dimensions[k].yscale === undefined ||\r\n        config.dimensions[k].yscale === null\r\n      ) {\r\n        config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](\r\n          k\r\n        );\r\n      }\r\n    });\r\n\r\n    // xscale\r\n    xscale.range([0, w(config)], 1);\r\n    // Retina display, etc.\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n    // canvas sizes\r\n    pc.selection\r\n      .selectAll('canvas')\r\n      .style('margin-top', config.margin.top + 'px')\r\n      .style('margin-left', config.margin.left + 'px')\r\n      .style('width', w(config) + 2 + 'px')\r\n      .style('height', h(config) + 2 + 'px')\r\n      .attr('width', (w(config) + 2) * devicePixelRatio)\r\n      .attr('height', (h(config) + 2) * devicePixelRatio);\r\n    // default styles, needs to be set when canvas width changes\r\n    ctx.foreground.strokeStyle = config.color;\r\n    ctx.foreground.lineWidth = config.lineWidth;\r\n    ctx.foreground.globalCompositeOperation = config.composite;\r\n    ctx.foreground.globalAlpha = config.alpha;\r\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.brushed.strokeStyle = config.brushedColor;\r\n    ctx.brushed.lineWidth = config.lineWidth;\r\n    ctx.brushed.globalCompositeOperation = config.composite;\r\n    ctx.brushed.globalAlpha = config.alpha;\r\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.highlight.lineWidth = config.highlightedLineWidth;\r\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.marked.lineWidth = config.markedLineWidth;\r\n    ctx.marked.shadowColor = config.markedShadowColor;\r\n    ctx.marked.shadowBlur = config.markedShadowBlur;\r\n    ctx.marked.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    return this;\r\n  };\r\n\r\nexport default autoscale;\r\n","import { brushSelection, brushY } from 'd3-brush';\r\nimport { event, select } from 'd3-selection';\r\n\r\nconst brushable = (config, pc, flags) =>\r\n  function() {\r\n    if (!pc.g()) {\r\n      pc.createAxes();\r\n    }\r\n\r\n    const g = pc.g();\r\n\r\n    // Add and store a brush for each axis.\r\n    g.append('svg:g')\r\n      .attr('class', 'brush')\r\n      .each(function(d) {\r\n        if (config.dimensions[d] !== undefined) {\r\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\r\n            [-15, 0],\r\n            [15, config.dimensions[d].yscale.range()[0]],\r\n          ]);\r\n          select(this).call(\r\n            config.dimensions[d]['brush']\r\n              .on('start', function() {\r\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\r\n                  pc.brushReset();\r\n                }\r\n              })\r\n              .on('brush', function() {\r\n                if (!event.sourceEvent.ctrlKey) {\r\n                  pc.brush();\r\n                }\r\n              })\r\n              .on('end', function() {\r\n                // save brush selection is ctrl key is held\r\n                // store important brush information and\r\n                // the html element of the selection,\r\n                // to make a dummy selection element\r\n                if (event.sourceEvent.ctrlKey) {\r\n                  let html = select(this)\r\n                    .select('.selection')\r\n                    .nodes()[0].outerHTML;\r\n                  html = html.replace(\r\n                    'class=\"selection\"',\r\n                    'class=\"selection dummy' +\r\n                      ' selection-' +\r\n                      config.brushes.length +\r\n                      '\"'\r\n                  );\r\n                  let dat = select(this).nodes()[0].__data__;\r\n                  let brush = {\r\n                    id: config.brushes.length,\r\n                    extent: brushSelection(this),\r\n                    html: html,\r\n                    data: dat,\r\n                  };\r\n                  config.brushes.push(brush);\r\n                  select(select(this).nodes()[0].parentNode)\r\n                    .select('.axis')\r\n                    .nodes()[0].outerHTML += html;\r\n                  pc.brush();\r\n                  config.dimensions[d].brush.move(select(this, null));\r\n                  select(this)\r\n                    .select('.selection')\r\n                    .attr('style', 'display:none');\r\n                  pc.brushable();\r\n                } else {\r\n                  pc.brush();\r\n                }\r\n              })\r\n          );\r\n          select(this).on('dblclick', function() {\r\n            pc.brushReset(d);\r\n          });\r\n        }\r\n      });\r\n\r\n    flags.brushable = true;\r\n    return this;\r\n  };\r\n\r\nexport default brushable;\r\n","import { extent } from 'd3-array';\r\n\r\nconst commonScale = (config, pc) =>\r\n  function(global, type) {\r\n    const t = type || 'number';\r\n    if (typeof global === 'undefined') {\r\n      global = true;\r\n    }\r\n\r\n    // try to autodetect dimensions and create scales\r\n    if (!Object.keys(config.dimensions).length) {\r\n      pc.detectDimensions();\r\n    }\r\n    pc.autoscale();\r\n\r\n    // scales of the same type\r\n    const scales = Object.keys(config.dimensions).filter(\r\n      p => config.dimensions[p].type == t\r\n    );\r\n\r\n    if (global) {\r\n      let _extent = extent(\r\n        scales\r\n          .map(d => config.dimensions[d].yscale.domain())\r\n          .reduce((cur, acc) => cur.concat(acc))\r\n      );\r\n\r\n      scales.forEach(d => {\r\n        config.dimensions[d].yscale.domain(_extent);\r\n      });\r\n    } else {\r\n      scales.forEach(d => {\r\n        config.dimensions[d].yscale.domain(extent(config.data, d => +d[k]));\r\n      });\r\n    }\r\n\r\n    // update centroids\r\n    if (config.bundleDimension !== null) {\r\n      pc.bundleDimension(config.bundleDimension);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\nexport default commonScale;\r\n","const computeRealCentroids = (dimensions, position) => row =>\r\n  Object.keys(dimensions).map(d => {\r\n    const x = position(d);\r\n    const y = dimensions[d].yscale(row[d]);\r\n    return [x, y];\r\n  });\r\n\r\nexport default computeRealCentroids;\r\n","const isValid = d => d !== null && d !== undefined;\r\n\r\nconst applyDimensionDefaults = (config, pc) =>\r\n  function(dims) {\r\n    const types = pc.detectDimensionTypes(config.data);\r\n    dims = dims ? dims : Object.keys(types);\r\n\r\n    return dims.reduce((acc, cur, i) => {\r\n      const k = config.dimensions[cur] ? config.dimensions[cur] : {};\r\n      acc[cur] = {\r\n        ...k,\r\n        orient: isValid(k.orient) ? k.orient : 'left',\r\n        ticks: isValid(k.ticks) ? k.ticks : 5,\r\n        innerTickSize: isValid(k.innerTickSize) ? k.innerTickSize : 6,\r\n        outerTickSize: isValid(k.outerTickSize) ? k.outerTickSize : 0,\r\n        tickPadding: isValid(k.tickPadding) ? k.tickPadding : 3,\r\n        type: isValid(k.type) ? k.type : types[cur],\r\n        index: isValid(k.index) ? k.index : i,\r\n      };\r\n\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\nexport default applyDimensionDefaults;\r\n","import { select } from 'd3-selection';\r\n\r\nimport dimensionLabels from '../util/dimensionLabels';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\nimport rotateLabels from '../util/rotateLabels';\r\n\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\n/**\r\n * Create static SVG axes with dimension names, ticks, and labels.\r\n *\r\n * @param config\r\n * @param pc\r\n * @param xscale\r\n * @param flags\r\n * @param axis\r\n * @returns {Function}\r\n */\r\nconst createAxes = (config, pc, xscale, flags, axis) =>\r\n  function() {\r\n    if (pc.g() !== undefined) {\r\n      pc.removeAxes();\r\n    }\r\n    // Add a group element for each dimension.\r\n    pc._g = pc.svg\r\n      .selectAll('.dimension')\r\n      .data(pc.getOrderedDimensionKeys(), function(d) {\r\n        return d;\r\n      })\r\n      .enter()\r\n      .append('svg:g')\r\n      .attr('class', 'dimension')\r\n      .attr('transform', function(d) {\r\n        return 'translate(' + xscale(d) + ')';\r\n      });\r\n    // Add an axis and title.\r\n    pc._g\r\n      .append('svg:g')\r\n      .attr('class', 'axis')\r\n      .attr('transform', 'translate(0,0)')\r\n      .each(function(d) {\r\n        let axisElement = select(this).call(\r\n          pc.applyAxisConfig(axis, config.dimensions[d])\r\n        );\r\n\r\n        axisElement\r\n          .selectAll('path')\r\n          .style('fill', 'none')\r\n          .style('stroke', '#222')\r\n          .style('shape-rendering', 'crispEdges');\r\n\r\n        axisElement\r\n          .selectAll('line')\r\n          .style('fill', 'none')\r\n          .style('stroke', '#222')\r\n          .style('shape-rendering', 'crispEdges');\r\n      })\r\n\r\n      .append('svg:text')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('y', 0)\r\n      .attr(\r\n        'transform',\r\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n      )\r\n      .attr('x', 0)\r\n      .attr('class', 'label')\r\n      .text(dimensionLabels(config))\r\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\r\n      .on('wheel', rotateLabels(config, pc));\r\n\r\n    if (config.nullValueSeparator === 'top') {\r\n      pc.svg\r\n        .append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\r\n        .attr('x2', w(config))\r\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\r\n        .attr('stroke-width', 1)\r\n        .attr('stroke', '#777')\r\n        .attr('fill', 'none')\r\n        .attr('shape-rendering', 'crispEdges');\r\n    } else if (config.nullValueSeparator === 'bottom') {\r\n      pc.svg\r\n        .append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\r\n        .attr('x2', w(config))\r\n        .attr('y2', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\r\n        .attr('stroke-width', 1)\r\n        .attr('stroke', '#777')\r\n        .attr('fill', 'none')\r\n        .attr('shape-rendering', 'crispEdges');\r\n    }\r\n\r\n    flags.axes = true;\r\n    return this;\r\n  };\r\n\r\nexport default createAxes;\r\n","import { entries } from 'd3-collection';\r\nimport { min } from 'd3-array';\r\n\r\n//draw dots with radius r on the axis line where data intersects\r\nconst axisDots = (config, pc, position) => _r => {\r\n  const r = _r || 0.1;\r\n  const ctx = pc.ctx.dots;\r\n  const startAngle = 0;\r\n  const endAngle = 2 * Math.PI;\r\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\r\n  config.data.forEach(d => {\r\n    entries(config.dimensions).forEach((p, i) => {\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        position(p),\r\n        config.dimensions[p.key].yscale(d[p]),\r\n        r,\r\n        startAngle,\r\n        endAngle\r\n      );\r\n      ctx.stroke();\r\n      ctx.fill();\r\n    });\r\n  });\r\n  return this;\r\n};\r\n\r\nexport default axisDots;\r\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\r\n\r\nconst applyAxisConfig = (axis, dimension) => {\r\n  let axisCfg;\r\n\r\n  switch (dimension.orient) {\r\n    case 'left':\r\n      axisCfg = axisLeft(dimension.yscale);\r\n      break;\r\n    case 'right':\r\n      axisCfg = axisRight(dimension.yscale);\r\n      break;\r\n    case 'top':\r\n      axisCfg = axisTop(dimension.yscale);\r\n      break;\r\n    case 'bottom':\r\n      axisCfg = axisBottom(dimension.yscale);\r\n      break;\r\n    default:\r\n      axisCfg = axisLeft(dimension.yscale);\r\n      break;\r\n  }\r\n\r\n  axisCfg\r\n    .ticks(dimension.ticks)\r\n    .tickValues(dimension.tickValues)\r\n    .tickSizeInner(dimension.innerTickSize)\r\n    .tickSizeOuter(dimension.outerTickSize)\r\n    .tickPadding(dimension.tickPadding)\r\n    .tickFormat(dimension.tickFormat);\r\n\r\n  return axisCfg;\r\n};\r\n\r\nexport default applyAxisConfig;\r\n","import { drag } from 'd3-drag';\r\nimport { event, select } from 'd3-selection';\r\n\r\nimport w from '../util/width';\r\n\r\n// Jason Davies, http://bl.ocks.org/1341281\r\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\r\n  function() {\r\n    if (pc.g() === undefined) pc.createAxes();\r\n    const g = pc.g();\r\n\r\n    g.style('cursor', 'move').call(\r\n      drag()\r\n        .on('start', function(d) {\r\n          dragging[d] = this.__origin__ = xscale(d);\r\n        })\r\n        .on('drag', function(d) {\r\n          dragging[d] = Math.min(\r\n            w(config),\r\n            Math.max(0, (this.__origin__ += event.dx))\r\n          );\r\n          pc.sortDimensions();\r\n          xscale.domain(pc.getOrderedDimensionKeys());\r\n          pc.render();\r\n          g.attr('transform', d => 'translate(' + position(d) + ')');\r\n        })\r\n        .on('end', function(d) {\r\n          delete this.__origin__;\r\n          delete dragging[d];\r\n          select(this)\r\n            .transition()\r\n            .attr('transform', 'translate(' + xscale(d) + ')');\r\n          pc.render();\r\n          pc.renderMarked();\r\n        })\r\n    );\r\n    flags.reorderable = true;\r\n    return this;\r\n  };\r\n\r\nexport default reorderable;\r\n","// rescale for height, width and margins\r\n// TODO currently assumes chart is brushable, and destroys old brushes\r\nconst resize = (config, pc, flags, events) => {\r\n  return function() {\r\n    // selection size\r\n    pc.selection\r\n      .select('svg')\r\n      .attr('width', config.width)\r\n      .attr('height', config.height);\r\n    pc.svg.attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n    // FIXME: the current brush state should pass through\r\n    if (flags.brushable) pc.brushReset();\r\n\r\n    // scales\r\n    pc.autoscale();\r\n\r\n    // axes, destroys old brushes.\r\n    if (pc.g()) pc.createAxes();\r\n    if (flags.brushable) pc.brushable();\r\n    if (flags.reorderable) pc.reorderable();\r\n\r\n    events.call('resize', this, {\r\n      width: config.width,\r\n      height: config.height,\r\n      margin: config.margin,\r\n    });\r\n\r\n    return this;\r\n  };\r\n};\r\n\r\nexport default resize;\r\n","// Reorder dimensions, such that the highest value (visually) is on the left and\r\n// the lowest on the right. Visual values are determined by the data values in\r\n// the given row.\r\nconst reorder = (config, pc, xscale) => rowdata => {\r\n  const firstDim = pc.getOrderedDimensionKeys()[0];\r\n\r\n  pc.sortDimensionsByRowData(rowdata);\r\n  // NOTE: this is relatively cheap given that:\r\n  // number of dimensions < number of data items\r\n  // Thus we check equality of order to prevent rerendering when this is the case.\r\n  const reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\r\n\r\n  if (reordered) {\r\n    xscale.domain(pc.getOrderedDimensionKeys());\r\n    const highlighted = config.highlighted.slice(0);\r\n    pc.unhighlight();\r\n\r\n    const marked = config.marked.slice(0);\r\n    pc.unmark();\r\n\r\n    const g = pc.g();\r\n    g.transition()\r\n      .duration(1500)\r\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\r\n    pc.render();\r\n\r\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\r\n    if (highlighted.length !== 0) {\r\n      pc.highlight(highlighted);\r\n    }\r\n    if (marked.length !== 0) {\r\n      pc.mark(marked);\r\n    }\r\n  }\r\n};\r\n\r\nexport default reorder;\r\n","const sortDimensions = (config, position) => () => {\r\n  const copy = Object.assign({}, config.dimensions);\r\n  const positionSortedKeys = Object.keys(config.dimensions).sort(\r\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\r\n  );\r\n  config.dimensions = {};\r\n  positionSortedKeys.forEach((p, i) => {\r\n    config.dimensions[p] = copy[p];\r\n    config.dimensions[p].index = i;\r\n  });\r\n};\r\n\r\nexport default sortDimensions;\r\n","const sortDimensionsByRowData = config => rowdata => {\r\n  const copy = Object.assign({}, config.dimensions);\r\n  const positionSortedKeys = Object.keys(config.dimensions).sort((a, b) => {\r\n    const pixelDifference =\r\n      config.dimensions[a].yscale(rowdata[a]) -\r\n      config.dimensions[b].yscale(rowdata[b]);\r\n\r\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\r\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\r\n    // variable name in that case.\r\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\r\n  });\r\n  config.dimensions = {};\r\n  positionSortedKeys.forEach((p, i) => {\r\n    config.dimensions[p] = copy[p];\r\n    config.dimensions[p].index = i;\r\n  });\r\n};\r\n\r\nexport default sortDimensionsByRowData;\r\n","const isBrushed = (config, brushGroup) => {\r\n  if (config.brushed && config.brushed.length !== config.data.length)\r\n    return true;\r\n\r\n  const object = brushGroup.currentMode().brushState();\r\n\r\n  for (let key in object) {\r\n    if (object.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default isBrushed;\r\n","import isBrushed from '../util/isBrushed';\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\nconst clear = (config, pc, ctx, brushGroup) =>\r\n  function(layer) {\r\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\r\n\r\n    // This will make sure that the foreground items are transparent\r\n    // without the need for changing the opacity style of the foreground canvas\r\n    // as this would stop the css styling from working\r\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\r\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\r\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\r\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\r\n      ctx.brushed.globalAlpha = config.alpha;\r\n    }\r\n    return this;\r\n  };\r\n\r\nexport default clear;\r\n","const computeCentroids = (config, position, row) => {\r\n  const centroids = [];\r\n\r\n  const p = Object.keys(config.dimensions);\r\n  const cols = p.length;\r\n  const a = 0.5; // center between axes\r\n  for (let i = 0; i < cols; ++i) {\r\n    // centroids on 'real' axes\r\n    const x = position(p[i]);\r\n    const y = config.dimensions[p[i]].yscale(row[p[i]]);\r\n    centroids.push($V([x, y]));\r\n\r\n    // centroids on 'virtual' axes\r\n    if (i < cols - 1) {\r\n      const cx = x + a * (position(p[i + 1]) - x);\r\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\r\n      if (config.bundleDimension !== null) {\r\n        const leftCentroid = config.clusterCentroids\r\n          .get(\r\n            config.dimensions[config.bundleDimension].yscale(\r\n              row[config.bundleDimension]\r\n            )\r\n          )\r\n          .get(p[i]);\r\n        const rightCentroid = config.clusterCentroids\r\n          .get(\r\n            config.dimensions[config.bundleDimension].yscale(\r\n              row[config.bundleDimension]\r\n            )\r\n          )\r\n          .get(p[i + 1]);\r\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\r\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\r\n      }\r\n      centroids.push($V([cx, cy]));\r\n    }\r\n  }\r\n\r\n  return centroids;\r\n};\r\n\r\nexport default computeCentroids;\r\n","const computeControlPoints = (smoothness, centroids) => {\r\n  const cols = centroids.length;\r\n  const a = smoothness;\r\n  const cps = [];\r\n\r\n  cps.push(centroids[0]);\r\n  cps.push(\r\n    $V([\r\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\r\n      centroids[0].e(2),\r\n    ])\r\n  );\r\n  for (let col = 1; col < cols - 1; ++col) {\r\n    let mid = centroids[col];\r\n    let left = centroids[col - 1];\r\n    let right = centroids[col + 1];\r\n\r\n    let diff = left.subtract(right);\r\n    cps.push(mid.add(diff.x(a)));\r\n    cps.push(mid);\r\n    cps.push(mid.subtract(diff.x(a)));\r\n  }\r\n  cps.push(\r\n    $V([\r\n      centroids[cols - 1].e(1) +\r\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\r\n      centroids[cols - 1].e(2),\r\n    ])\r\n  );\r\n  cps.push(centroids[cols - 1]);\r\n\r\n  return cps;\r\n};\r\n\r\nexport default computeControlPoints;\r\n","// draw single cubic bezier curve\r\nimport computeCentroids from './computeCentroids';\r\nimport computeControlPoints from './computeControlPoints';\r\nimport h from './height';\r\n\r\nconst singleCurve = (config, position, d, ctx) => {\r\n  const centroids = computeCentroids(config, position, d);\r\n  const cps = computeControlPoints(config.smoothness, centroids);\r\n\r\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\r\n\r\n  for (let i = 1; i < cps.length; i += 3) {\r\n    if (config.showControlPoints) {\r\n      for (let j = 0; j < 3; j++) {\r\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\r\n      }\r\n    }\r\n    ctx.bezierCurveTo(\r\n      cps[i].e(1),\r\n      cps[i].e(2),\r\n      cps[i + 1].e(1),\r\n      cps[i + 1].e(2),\r\n      cps[i + 2].e(1),\r\n      cps[i + 2].e(2)\r\n    );\r\n  }\r\n};\r\n\r\n// returns the y-position just beyond the separating null value line\r\nconst getNullPosition = config => {\r\n  if (config.nullValueSeparator === 'bottom') {\r\n    return h(config) + 1;\r\n  } else if (config.nullValueSeparator === 'top') {\r\n    return 1;\r\n  } else {\r\n    console.log(\r\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\r\n    );\r\n  }\r\n  return h(config) + 1;\r\n};\r\n\r\nconst singlePath = (config, position, d, ctx) => {\r\n  Object.keys(config.dimensions)\r\n    .map(p => [\r\n      position(p),\r\n      d[p] === undefined\r\n        ? getNullPosition(config)\r\n        : config.dimensions[p].yscale(d[p]),\r\n    ])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .forEach((p, i) => {\r\n      i === 0 ? ctx.moveTo(p[0], p[1]) : ctx.lineTo(p[0], p[1]);\r\n    });\r\n};\r\n\r\n// draw single polyline\r\nconst colorPath = (config, position, d, ctx) => {\r\n  ctx.beginPath();\r\n  if (\r\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\r\n    config.smoothness > 0\r\n  ) {\r\n    singleCurve(config, position, d, ctx);\r\n  } else {\r\n    singlePath(config, position, d, ctx);\r\n  }\r\n  ctx.stroke();\r\n};\r\n\r\nexport default colorPath;\r\n","const _functor = v => (typeof v === 'function' ? v : () => v);\r\n\r\nexport default _functor;\r\n","import colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathMark = (config, ctx, position) => (d, i) => {\r\n  ctx.marked.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.marked);\r\n};\r\n\r\nconst renderMarkedDefault = (config, pc, ctx, position) => () => {\r\n  pc.clear('marked');\r\n\r\n  if (config.marked.length) {\r\n    config.marked.forEach(pathMark(config, ctx, position));\r\n  }\r\n};\r\n\r\nconst renderMarkedQueue = (config, markedQueue) => () => {\r\n  if (config.marked) {\r\n    markedQueue(config.marked);\r\n  } else {\r\n    markedQueue([]); // This is needed to clear the currently marked items\r\n  }\r\n};\r\n\r\nconst renderMarked = (config, pc, events) =>\r\n  function() {\r\n    if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n\r\n    pc.renderMarked[config.mode]();\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport { pathMark, renderMarked, renderMarkedDefault, renderMarkedQueue };\r\n","import isBrushed from '../util/isBrushed';\r\nimport colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathBrushed = (config, ctx, position) => (d, i) => {\r\n  if (config.brushedColor !== null) {\r\n    ctx.brushed.strokeStyle = functor(config.brushedColor)(d, i);\r\n  } else {\r\n    ctx.brushed.strokeStyle = functor(config.color)(d, i);\r\n  }\r\n  return colorPath(config, position, d, ctx.brushed);\r\n};\r\n\r\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\r\n  pc.clear('brushed');\r\n\r\n  if (isBrushed(config, brushGroup) && config.brushed !== false) {\r\n    config.brushed.forEach(pathBrushed(config, ctx, position));\r\n  }\r\n};\r\n\r\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\r\n  if (isBrushed(config, brushGroup)) {\r\n    brushedQueue(config.brushed);\r\n  } else {\r\n    brushedQueue([]); // This is needed to clear the currently brushed items\r\n  }\r\n};\r\n\r\nconst renderBrushed = (config, pc, events) =>\r\n  function() {\r\n    if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n\r\n    pc.renderBrushed[config.mode]();\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\r\n","import { select, selectAll } from 'd3-selection';\r\n\r\nconst brushReset = config =>\r\n  function(dimension) {\r\n    const brushesToKeep = [];\r\n    for (let j = 0; j < config.brushes.length; j++) {\r\n      if (config.brushes[j].data !== dimension) {\r\n        brushesToKeep.push(config.brushes[j]);\r\n      }\r\n    }\r\n\r\n    config.brushes = brushesToKeep;\r\n    config.brushed = false;\r\n\r\n    if (pc.g() !== undefined) {\r\n      const nodes = pc\r\n        .g()\r\n        .selectAll('.brush')\r\n        .nodes();\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].__data__ === dimension) {\r\n          // remove all dummy brushes for this axis or the real brush\r\n          select(select(nodes[i]).nodes()[0].parentNode)\r\n            .selectAll('.dummy')\r\n            .remove();\r\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\nexport default brushReset;\r\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\r\nconst toType = v => {\r\n  return {}.toString\r\n    .call(v)\r\n    .match(/\\s([a-zA-Z]+)/)[1]\r\n    .toLowerCase();\r\n};\r\n\r\nexport default toType;\r\n","// this descriptive text should live with other introspective methods\r\nconst toString = config => () =>\r\n  'Parallel Coordinates: ' +\r\n  Object.keys(config.dimensions).length +\r\n  ' dimensions (' +\r\n  Object.keys(config.data[0]).length +\r\n  ' total) , ' +\r\n  config.data.length +\r\n  ' rows';\r\n\r\nexport default toString;\r\n","// pairs of adjacent dimensions\r\nconst adjacentPairs = arr => {\r\n  let ret = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    ret.push([arr[i], arr[i + 1]]);\r\n  }\r\n  return ret;\r\n};\r\n\r\nexport default adjacentPairs;\r\n","import { selectAll } from 'd3-selection';\r\n\r\nimport colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathHighlight = (config, ctx, position) => (d, i) => {\r\n  ctx.highlight.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.highlight);\r\n};\r\n\r\n// highlight an array of data\r\nconst highlight = (config, pc, canvas, events, ctx, position) =>\r\n  function(data = null) {\r\n    if (data === null) {\r\n      return config.highlighted;\r\n    }\r\n\r\n    config.highlighted = data;\r\n    pc.clear('highlight');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\r\n    data.forEach(pathHighlight(config, ctx, position));\r\n    events.call('highlight', this, data);\r\n    return this;\r\n  };\r\n\r\nexport default highlight;\r\n","import { selectAll } from 'd3-selection';\r\n\r\n// clear highlighting\r\nconst unhighlight = (config, pc, canvas) =>\r\n  function() {\r\n    config.highlighted = [];\r\n    pc.clear('highlight');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\r\n    return this;\r\n  };\r\n\r\nexport default unhighlight;\r\n","import { selectAll } from 'd3-selection';\r\n\r\nimport { pathMark } from './renderMarked';\r\n\r\n// mark an array of data\r\nconst mark = (config, pc, canvas, events, ctx, position) =>\r\n  function(data = null) {\r\n    if (data === null) {\r\n      return config.marked;\r\n    }\r\n\r\n    // add array to already marked data\r\n    config.marked = config.marked.concat(data);\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('dimmed', true);\r\n    data.forEach(pathMark(config, ctx, position));\r\n    events.call('mark', this, data);\r\n    return this;\r\n  };\r\n\r\nexport default mark;\r\n","import { selectAll } from 'd3-selection';\r\n\r\n// clear marked data arrays\r\nconst unmark = (config, pc, canvas) =>\r\n  function() {\r\n    config.marked = [];\r\n    pc.clear('marked');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('dimmed', false);\r\n    return this;\r\n  };\r\n\r\nexport default unmark;\r\n","const removeAxes = pc =>\r\n  function() {\r\n    pc._g.remove();\r\n\r\n    delete pc._g;\r\n    return this;\r\n  };\r\n\r\nexport default removeAxes;\r\n","/**\r\n * Renders the polylines.\r\n * If no dimensions have been specified, it will attempt to detect quantitative\r\n * dimensions based on the first data entry. If scales haven't been set, it will\r\n * autoscale based on the extent for each dimension.\r\n *\r\n * @param config\r\n * @param pc\r\n * @param events\r\n * @returns {Function}\r\n */\r\nconst render = (config, pc, events) =>\r\n  function() {\r\n    // try to autodetect dimensions and create scales\r\n    if (!Object.keys(config.dimensions).length) {\r\n      pc.detectDimensions();\r\n    }\r\n    pc.autoscale();\r\n\r\n    pc.render[config.mode]();\r\n\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport default render;\r\n","import colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathForeground = (config, ctx, position) => (d, i) => {\r\n  ctx.foreground.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.foreground);\r\n};\r\n\r\nconst renderDefault = (config, pc, ctx, position) => () => {\r\n  pc.clear('foreground');\r\n  pc.clear('highlight');\r\n\r\n  pc.renderBrushed.default();\r\n  pc.renderMarked.default();\r\n\r\n  config.data.forEach(pathForeground(config, ctx, position));\r\n};\r\n\r\nconst renderDefaultQueue = (config, pc, foregroundQueue) => () => {\r\n  pc.renderBrushed.queue();\r\n  pc.renderMarked.queue();\r\n  foregroundQueue(config.data);\r\n};\r\n\r\nexport default renderDefault;\r\n\r\nexport { pathForeground, renderDefaultQueue };\r\n","import toType from './toType';\r\n\r\n// try to coerce to number before returning type\r\nconst toTypeCoerceNumbers = v =>\r\n  parseFloat(v) == v && v !== null ? 'number' : toType(v);\r\n\r\nexport default toTypeCoerceNumbers;\r\n","import toTypeCoerceNumbers from './toTypeCoerceNumbers';\r\n\r\n// attempt to determine types of each dimension based on first row of data\r\nconst detectDimensionTypes = data =>\r\n  Object.keys(data[0]).reduce((acc, cur) => {\r\n    const key = isNaN(Number(cur)) ? cur : parseInt(cur);\r\n    acc[key] = toTypeCoerceNumbers(data[0][cur]);\r\n\r\n    return acc;\r\n  }, {});\r\n\r\nexport default detectDimensionTypes;\r\n","import { ascending } from 'd3-array';\r\n\r\nconst getOrderedDimensionKeys = config => () =>\r\n  Object.keys(config.dimensions).sort((x, y) =>\r\n    ascending(config.dimensions[x].index, config.dimensions[y].index)\r\n  );\r\n\r\nexport default getOrderedDimensionKeys;\r\n","const interactive = flags =>\r\n  function() {\r\n    flags.interactive = true;\r\n    return this;\r\n  };\r\n\r\nexport default interactive;\r\n","const shadows = (flags, pc) =>\r\n  function() {\r\n    flags.shadows = true;\r\n    pc.alphaOnBrushed(0.1);\r\n    pc.render();\r\n    return this;\r\n  };\r\n\r\nexport default shadows;\r\n","import { select } from 'd3-selection';\r\n\r\n/**\r\n * Setup a new parallel coordinates chart.\r\n *\r\n * @param config\r\n * @param canvas\r\n * @param ctx\r\n * @returns {pc} a parcoords closure\r\n */\r\nconst init = (config, canvas, ctx) => {\r\n  /**\r\n   * Create the chart within a container. The selector can also be a d3 selection.\r\n   *\r\n   * @param selection a d3 selection\r\n   * @returns {pc} instance for chained api\r\n   */\r\n  const pc = function(selection) {\r\n    selection = pc.selection = select(selection);\r\n\r\n    config.width = selection.node().clientWidth;\r\n    config.height = selection.node().clientHeight;\r\n    // canvas data layers\r\n    ['dots', 'foreground', 'brushed', 'marked', 'highlight'].forEach(layer => {\r\n      canvas[layer] = selection\r\n        .append('canvas')\r\n        .attr('class', layer)\r\n        .node();\r\n      ctx[layer] = canvas[layer].getContext('2d');\r\n    });\r\n\r\n    // svg tick and brush layers\r\n    pc.svg = selection\r\n      .append('svg')\r\n      .attr('width', config.width)\r\n      .attr('height', config.height)\r\n      .style('font', '14px sans-serif')\r\n      .style('position', 'absolute')\r\n\r\n      .append('svg:g')\r\n      .attr(\r\n        'transform',\r\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n      );\r\n    // for chained api\r\n    return pc;\r\n  };\r\n\r\n  // for partial-application style programming\r\n  return pc;\r\n};\r\n\r\nexport default init;\r\n","const flip = config =>\r\n  function(d) {\r\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\r\n    config.dimensions[d].yscale.domain(\r\n      config.dimensions[d].yscale.domain().reverse()\r\n    ); // works\r\n\r\n    return this;\r\n  };\r\n\r\nexport default flip;\r\n","const detectDimensions = pc =>\r\n  function() {\r\n    pc.dimensions(pc.applyDimensionDefaults());\r\n    return this;\r\n  };\r\n\r\nexport default detectDimensions;\r\n","const scale = (config, pc) =>\r\n  function(d, domain) {\r\n    config.dimensions[d].yscale.domain(domain);\r\n    pc.render.default();\r\n    pc.updateAxes();\r\n\r\n    return this;\r\n  };\r\n\r\nexport default scale;\r\n","const filter = (config, pc) =>\r\n  function() {\r\n    console.log(config);\r\n    return this;\r\n  }\r\n\r\nexport default filter;","const DefaultConfig = {\r\n  data: [],\r\n  highlighted: [],\r\n  marked: [],\r\n  dimensions: {},\r\n  dimensionTitleRotation: 0,\r\n  brushes: [],\r\n  brushed: false,\r\n  brushedColor: null,\r\n  alphaOnBrushed: 0.0,\r\n  lineWidth: 1.4,\r\n  highlightedLineWidth: 3,\r\n  mode: 'default',\r\n  markedLineWidth: 3,\r\n  markedShadowColor: '#ffffff',\r\n  markedShadowBlur: 10,\r\n  rate: 20,\r\n  width: 600,\r\n  height: 300,\r\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\r\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\r\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\r\n  color: '#069',\r\n  composite: 'source-over',\r\n  alpha: 0.7,\r\n  bundlingStrength: 0.5,\r\n  bundleDimension: null,\r\n  smoothness: 0.0,\r\n  showControlPoints: false,\r\n  hideAxis: [],\r\n  flipAxes: [],\r\n  animationTime: 1100, // How long it takes to flip the axis when you double click\r\n  rotateLabels: false,\r\n  outsideFilters: null\r\n};\r\n\r\nexport default DefaultConfig;\r\n","import { entries, keys } from 'd3-collection';\r\nimport { axisLeft } from 'd3-axis';\r\nimport { dispatch } from 'd3-dispatch';\r\nimport { scalePoint } from 'd3-scale';\r\n\r\nimport DefaultConfig from './defaultConfig';\r\n\r\nconst initState = userConfig => {\r\n  const config = Object.assign({}, DefaultConfig, userConfig);\r\n\r\n  if (userConfig && userConfig.dimensionTitles) {\r\n    console.warn(\r\n      'dimensionTitles passed in userConfig is deprecated. Add title to dimension object.'\r\n    );\r\n    entries(userConfig.dimensionTitles).forEach(d => {\r\n      if (config.dimensions[d.key]) {\r\n        config.dimensions[d.key].title = config.dimensions[d.key].title\r\n          ? config.dimensions[d.key].title\r\n          : d.value;\r\n      } else {\r\n        config.dimensions[d.key] = {\r\n          title: d.value,\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  const eventTypes = [\r\n    'render',\r\n    'resize',\r\n    'highlight',\r\n    'mark',\r\n    'brush',\r\n    'brushend',\r\n    'brushstart',\r\n    'axesreorder',\r\n  ].concat(keys(config));\r\n\r\n  const events = dispatch.apply(this, eventTypes),\r\n    flags = {\r\n      brushable: false,\r\n      reorderable: false,\r\n      axes: false,\r\n      interactive: false,\r\n      debug: false,\r\n    },\r\n    xscale = scalePoint(),\r\n    dragging = {},\r\n    axis = axisLeft().ticks(5),\r\n    ctx = {},\r\n    canvas = {};\r\n\r\n  const brush = {\r\n    modes: {\r\n      None: {\r\n        install: function(pc) {}, // Nothing to be done.\r\n        uninstall: function(pc) {}, // Nothing to be done.\r\n        selected: function() {\r\n          return [];\r\n        }, // Nothing to return\r\n        brushState: function() {\r\n          return {};\r\n        },\r\n      },\r\n    },\r\n    mode: 'None',\r\n    predicate: 'AND',\r\n    currentMode: function() {\r\n      return this.modes[this.mode];\r\n    },\r\n  };\r\n\r\n  return {\r\n    config,\r\n    events,\r\n    eventTypes,\r\n    flags,\r\n    xscale,\r\n    dragging,\r\n    axis,\r\n    ctx,\r\n    canvas,\r\n    brush,\r\n  };\r\n};\r\n\r\nexport default initState;\r\n","const computeClusterCentroids = (config, d) => {\r\n  const clusterCentroids = new Map();\r\n  const clusterCounts = new Map();\r\n  // determine clusterCounts\r\n  config.data.forEach(function(row) {\r\n    let scaled = config.dimensions[d].yscale(row[d]);\r\n    if (!clusterCounts.has(scaled)) {\r\n      clusterCounts.set(scaled, 0);\r\n    }\r\n    let count = clusterCounts.get(scaled);\r\n    clusterCounts.set(scaled, count + 1);\r\n  });\r\n\r\n  config.data.forEach(function(row) {\r\n    Object.keys(config.dimensions).map(p => {\r\n      let scaled = config.dimensions[d].yscale(row[d]);\r\n      if (!clusterCentroids.has(scaled)) {\r\n        const _map = new Map();\r\n        clusterCentroids.set(scaled, _map);\r\n      }\r\n      if (!clusterCentroids.get(scaled).has(p)) {\r\n        clusterCentroids.get(scaled).set(p, 0);\r\n      }\r\n      let value = clusterCentroids.get(scaled).get(p);\r\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\r\n      clusterCentroids.get(scaled).set(p, value);\r\n    });\r\n  });\r\n\r\n  return clusterCentroids;\r\n};\r\n\r\nexport default computeClusterCentroids;\r\n","// side effects for setters\r\nimport { dispatch } from 'd3-dispatch';\r\nimport computeClusterCentroids from '../util/computeClusterCentroids';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\n\r\nconst without = (arr, items) => {\r\n  items.forEach(el => {\r\n    delete arr[el];\r\n  });\r\n  return arr;\r\n};\r\n\r\nconst sideEffects = (\r\n  config,\r\n  ctx,\r\n  pc,\r\n  xscale,\r\n  flags,\r\n  brushedQueue,\r\n  markedQueue,\r\n  foregroundQueue\r\n) =>\r\n  dispatch\r\n    .apply(this, Object.keys(config))\r\n    .on('composite', d => {\r\n      ctx.foreground.globalCompositeOperation = d.value;\r\n      ctx.brushed.globalCompositeOperation = d.value;\r\n    })\r\n    .on('alpha', d => {\r\n      ctx.foreground.globalAlpha = d.value;\r\n      ctx.brushed.globalAlpha = d.value;\r\n    })\r\n    .on('brushedColor', d => {\r\n      ctx.brushed.strokeStyle = d.value;\r\n    })\r\n    .on('width', d => pc.resize())\r\n    .on('height', d => pc.resize())\r\n    .on('margin', d => pc.resize())\r\n    .on('rate', d => {\r\n      brushedQueue.rate(d.value);\r\n      markedQueue.rate(d.value);\r\n      foregroundQueue.rate(d.value);\r\n    })\r\n    .on('dimensions', d => {\r\n      config.dimensions = pc.applyDimensionDefaults(Object.keys(d.value));\r\n      xscale.domain(pc.getOrderedDimensionKeys());\r\n      pc.sortDimensions();\r\n      if (flags.interactive) {\r\n        pc.render().updateAxes();\r\n      }\r\n    })\r\n    .on('bundleDimension', d => {\r\n      if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n      pc.autoscale();\r\n      if (typeof d.value === 'number') {\r\n        if (d.value < Object.keys(config.dimensions).length) {\r\n          config.bundleDimension = config.dimensions[d.value];\r\n        } else if (d.value < config.hideAxis.length) {\r\n          config.bundleDimension = config.hideAxis[d.value];\r\n        }\r\n      } else {\r\n        config.bundleDimension = d.value;\r\n      }\r\n\r\n      config.clusterCentroids = computeClusterCentroids(\r\n        config,\r\n        config.bundleDimension\r\n      );\r\n      if (flags.interactive) {\r\n        pc.render();\r\n      }\r\n    })\r\n    .on('hideAxis', d => {\r\n      pc.dimensions(pc.applyDimensionDefaults());\r\n      pc.dimensions(without(config.dimensions, d.value));\r\n    })\r\n    .on('flipAxes', d => {\r\n      if (d.value && d.value.length) {\r\n        d.value.forEach(function(axis) {\r\n          flipAxisAndUpdatePCP(config, pc, axis);\r\n        });\r\n        pc.updateAxes(0);\r\n      }\r\n    });\r\n\r\nexport default sideEffects;\r\n","const getset = (obj, state, events, side_effects) => {\r\n  Object.keys(state).forEach(function(key) {\r\n    obj[key] = function(x) {\r\n      if (!arguments.length) {\r\n        return state[key];\r\n      }\r\n      if (\r\n        key === 'dimensions' &&\r\n        Object.prototype.toString.call(x) === '[object Array]'\r\n      ) {\r\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\r\n        x = obj.applyDimensionDefaults(x);\r\n      }\r\n      let old = state[key];\r\n      state[key] = x;\r\n      side_effects.call(key, obj, { value: x, previous: old });\r\n      events.call(key, obj, { value: x, previous: old });\r\n      return obj;\r\n    };\r\n  });\r\n};\r\n\r\nexport default getset;\r\n","// side effects for setters\r\nimport sideEffects from './state/sideEffects';\r\nimport getset from './util/getset';\r\n\r\nconst d3_rebind = (target, source, method) =>\r\n  function() {\r\n    const value = method.apply(source, arguments);\r\n    return value === source ? target : value;\r\n  };\r\n\r\nconst _rebind = (target, source, method) => {\r\n  target[method] = d3_rebind(target, source, source[method]);\r\n  return target;\r\n};\r\n\r\nconst bindEvents = (\r\n  __,\r\n  ctx,\r\n  pc,\r\n  xscale,\r\n  flags,\r\n  brushedQueue,\r\n  markedQueue,\r\n  foregroundQueue,\r\n  events,\r\n  axis\r\n) => {\r\n  const side_effects = sideEffects(\r\n    __,\r\n    ctx,\r\n    pc,\r\n    xscale,\r\n    flags,\r\n    brushedQueue,\r\n    markedQueue,\r\n    foregroundQueue\r\n  );\r\n\r\n  // create getter/setters\r\n  getset(pc, __, events, side_effects);\r\n\r\n  // expose events\r\n  // getter/setter with event firing\r\n  _rebind(pc, events, 'on');\r\n\r\n  _rebind(\r\n    pc,\r\n    axis,\r\n    'ticks',\r\n    'orient',\r\n    'tickValues',\r\n    'tickSubdivide',\r\n    'tickSize',\r\n    'tickPadding',\r\n    'tickFormat'\r\n  );\r\n};\r\n\r\nexport default bindEvents;\r\n","// misc\r\nimport renderQueue from './util/renderQueue';\r\nimport w from './util/width';\r\n\r\n// brush\r\nimport install1DAxes from './brush/1d';\r\nimport install1DAxesMulti from './brush/1d-multi';\r\nimport install2DStrums from './brush/strums';\r\nimport installAngularBrush from './brush/angular';\r\n\r\n// api\r\nimport intersection from './api/intersection';\r\nimport mergeParcoords from './api/mergeParcoords';\r\nimport selected from './api/selected';\r\nimport brushMode from './api/brushMode';\r\nimport updateAxes from './api/updateAxes';\r\nimport autoscale from './api/autoscale';\r\nimport brushable from './api/brushable';\r\nimport commonScale from './api/commonScale';\r\nimport computeRealCentroids from './api/computeRealCentroids';\r\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\r\nimport createAxes from './api/createAxes';\r\nimport axisDots from './api/axisDots';\r\nimport applyAxisConfig from './api/applyAxisConfig';\r\nimport reorderable from './api/reorderable';\r\nimport resize from './api/resize';\r\nimport reorder from './api/reorder';\r\nimport sortDimensions from './api/sortDimensions';\r\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\r\nimport clear from './api/clear';\r\nimport {\r\n  pathMark,\r\n  renderMarked,\r\n  renderMarkedDefault,\r\n  renderMarkedQueue,\r\n} from './api/renderMarked';\r\nimport {\r\n  pathBrushed,\r\n  renderBrushed,\r\n  renderBrushedDefault,\r\n  renderBrushedQueue,\r\n} from './api/renderBrushed';\r\nimport brushReset from './api/brushReset';\r\nimport toType from './api/toType';\r\nimport toString from './api/toString';\r\nimport adjacentPairs from './api/adjacentPairs';\r\nimport highlight from './api/highlight';\r\nimport unhighlight from './api/unhighlight';\r\nimport mark from './api/mark';\r\nimport unmark from './api/unmark';\r\nimport removeAxes from './api/removeAxes';\r\nimport render from './api/render';\r\nimport renderDefault, {\r\n  pathForeground,\r\n  renderDefaultQueue,\r\n} from './api/renderDefault';\r\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\r\nimport detectDimensionTypes from './api/detectDimensionTypes';\r\nimport getOrderedDimensionKeys from './api/getOrderedDimensionKeys';\r\nimport interactive from './api/interactive';\r\nimport shadows from './api/shadows';\r\nimport init from './api/init';\r\nimport flip from './api/flip';\r\nimport detectDimensions from './api/detectDimensions';\r\nimport scale from './api/scale';\r\nimport filter from './api/filter';\r\n\r\nimport { version } from '../package.json';\r\nimport initState from './state';\r\nimport bindEvents from './bindEvents';\r\n\r\n//css\r\nimport './parallel-coordinates.css';\r\n\r\nconst ParCoords = userConfig => {\r\n  const state = initState(userConfig);\r\n  const {\r\n    config,\r\n    events,\r\n    flags,\r\n    xscale,\r\n    dragging,\r\n    axis,\r\n    ctx,\r\n    canvas,\r\n    brush,\r\n  } = state;\r\n\r\n  const pc = init(config, canvas, ctx);\r\n\r\n  const position = d => {\r\n    if (xscale.range().length === 0) {\r\n      xscale.range([0, w(config)], 1);\r\n    }\r\n    return dragging[d] == null ? xscale(d) : dragging[d];\r\n  };\r\n\r\n  const brushedQueue = renderQueue(pathBrushed(config, ctx, position))\r\n    .rate(50)\r\n    .clear(() => pc.clear('brushed'));\r\n\r\n  const markedQueue = renderQueue(pathMark(config, ctx, position))\r\n    .rate(50)\r\n    .clear(() => pc.clear('marked'));\r\n\r\n  const foregroundQueue = renderQueue(pathForeground(config, ctx, position))\r\n    .rate(50)\r\n    .clear(function() {\r\n      pc.clear('foreground');\r\n      pc.clear('highlight');\r\n    });\r\n\r\n  bindEvents(\r\n    config,\r\n    ctx,\r\n    pc,\r\n    xscale,\r\n    flags,\r\n    brushedQueue,\r\n    markedQueue,\r\n    foregroundQueue,\r\n    events,\r\n    axis\r\n  );\r\n\r\n  // expose the state of the chart\r\n  pc.state = config;\r\n  pc.flags = flags;\r\n\r\n  pc.autoscale = autoscale(config, pc, xscale, ctx);\r\n  pc.scale = scale(config, pc);\r\n  pc.flip = flip(config);\r\n  pc.commonScale = commonScale(config, pc);\r\n  pc.detectDimensions = detectDimensions(pc);\r\n  // attempt to determine types of each dimension based on first row of data\r\n  pc.detectDimensionTypes = detectDimensionTypes;\r\n  pc.applyDimensionDefaults = applyDimensionDefaults(config, pc);\r\n  pc.getOrderedDimensionKeys = getOrderedDimensionKeys(config);\r\n\r\n  //Renders the polylines.\r\n  pc.render = render(config, pc, events);\r\n  pc.renderBrushed = renderBrushed(config, pc, events);\r\n  pc.renderMarked = renderMarked(config, pc, events);\r\n  pc.render.default = renderDefault(config, pc, ctx, position);\r\n  pc.render.queue = renderDefaultQueue(config, pc, foregroundQueue);\r\n  pc.renderBrushed.default = renderBrushedDefault(\r\n    config,\r\n    ctx,\r\n    position,\r\n    pc,\r\n    brush\r\n  );\r\n  pc.renderBrushed.queue = renderBrushedQueue(config, brush, brushedQueue);\r\n  pc.renderMarked.default = renderMarkedDefault(config, pc, ctx, position);\r\n  pc.renderMarked.queue = renderMarkedQueue(config, markedQueue);\r\n\r\n  pc.compute_real_centroids = computeRealCentroids(config.dimensions, position);\r\n  pc.shadows = shadows(flags, pc);\r\n  pc.axisDots = axisDots(config, pc, position);\r\n  pc.clear = clear(config, pc, ctx, brush);\r\n  pc.createAxes = createAxes(config, pc, xscale, flags, axis);\r\n  pc.removeAxes = removeAxes(pc);\r\n  pc.updateAxes = updateAxes(config, pc, position, axis, flags);\r\n  pc.applyAxisConfig = applyAxisConfig;\r\n  pc.brushable = brushable(config, pc, flags);\r\n  pc.brushReset = brushReset(config);\r\n  pc.selected = selected(config, pc);\r\n  pc.reorderable = reorderable(config, pc, xscale, position, dragging, flags);\r\n\r\n  // Reorder dimensions, such that the highest value (visually) is on the left and\r\n  // the lowest on the right. Visual values are determined by the data values in\r\n  // the given row.\r\n  pc.reorder = reorder(config, pc, xscale);\r\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(config);\r\n  pc.sortDimensions = sortDimensions(config, position);\r\n\r\n  // pairs of adjacent dimensions\r\n  pc.adjacent_pairs = adjacentPairs;\r\n  pc.interactive = interactive(flags);\r\n\r\n  // expose internal state\r\n  pc.xscale = xscale;\r\n  pc.ctx = ctx;\r\n  pc.canvas = canvas;\r\n  pc.g = () => pc._g;\r\n\r\n  // rescale for height, width and margins\r\n  // TODO currently assumes chart is brushable, and destroys old brushes\r\n  pc.resize = resize(config, pc, flags, events);\r\n\r\n  // highlight an array of data\r\n  pc.highlight = highlight(config, pc, canvas, events, ctx, position);\r\n  // clear highlighting\r\n  pc.unhighlight = unhighlight(config, pc, canvas);\r\n\r\n  // mark an array of data\r\n  pc.mark = mark(config, pc, canvas, events, ctx, position);\r\n  // clear marked data\r\n  pc.unmark = unmark(config, pc, canvas);\r\n\r\n  // calculate 2d intersection of line a->b with line c->d\r\n  // points are objects with x and y properties\r\n  pc.intersection = intersection;\r\n\r\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\r\n  // (so you can choose to save it to disk, etc.)\r\n  pc.mergeParcoords = mergeParcoords(pc);\r\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\r\n  pc.brushMode = brushMode(brush, config, pc);\r\n\r\n  // install brushes\r\n  install1DAxes(brush, config, pc, events);\r\n  install2DStrums(brush, config, pc, events, xscale);\r\n  installAngularBrush(brush, config, pc, events, xscale);\r\n  install1DAxesMulti(brush, config, pc, events);\r\n\r\n  // allow outside filters\r\n  pc.filter = filter(config, pc);\r\n\r\n  pc.version = version;\r\n  // this descriptive text should live with other introspective methods\r\n  pc.toString = toString(config);\r\n  pc.toType = toType;\r\n  // try to coerce to number before returning type\r\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\r\n\r\n  return pc;\r\n};\r\n\r\nexport default ParCoords;\r\n"],"names":["renderQueue","func","_queue","_rate","_invalidate","_clear","rq","data","render","valid","invalidate","doFrame","chunk","splice","map","requestAnimationFrame","slice","add","concat","rate","value","arguments","length","remaining","clear","w","config","width","margin","right","left","brushExtents","state","pc","brushes","brushNodes","extents","Object","keys","dimensions","reduce","acc","cur","brush","undefined","brushSelection","extent","brushSelections","g","selectAll","each","d","select","forEach","dim","yExtent","yscale","call","move","reverse","renderBrushed","brushReset","dimension","brushed","type","event","selected","brushGroup","is_brushed","p","actives","filter","_brushRange","invert","within","date","bandwidth","number","string","predicate","every","some","Error","brushPredicate","brushUpdated","events","args","newSelection","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","convertBrushArguments","args_array","Array","prototype","selection_raw","selection_scaled","node","selection","raw","scaled","on","sourceEvent","stopPropagation","install","createAxes","append","attr","style","uninstall","remove","install1DAxes","modes","brushState","drawBrushes","selector","id","enter","insert","indexOf","b","brushObject","exit","pos","axisBrushes","i","document","getElementById","dimExt","e","newBrush","push","lastBrushID","lastBrush","toString","yExtents","_bs","j","ext","f","k","axisBrush","_this","install1DMultiAxes","strumRect","containmentTest","strum","p1","minX","p2","m1","b1","m2","b2","x","y","y1","y2","Math","min","max","crossesStrum","strums","test","d1","dims","d2","point","ids","getOwnPropertyNames","isNaN","crossTest","removeStrum","active","svg","onDragEnd","drawStrum","activePoint","_svg","points","_line","circles","_drag","drag","ev","maxX","minY","maxY","onDrag","top","h","height","bottom","dimensionsForPoint","xscale","getOrderedDimensionKeys","onDragStart","mouse","consecutive","first","second","install2DStrums","hypothenuse","a","sqrt","signedAngle","angle","PI","startAngle","arc","endAngle","tmp","arcs","c","asin","outerRadius","p3","_path","d3Arc","innerRadius","sAngle","uAngle","installAngularBrush","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","createElement","canvas","foreground","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","key","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","__data__","values","ranger","domain","includes","flipAxes","unshift","ii","dimRange","dimDomain","category","categoryIndex","categoryRangeValue","console","log","matchArray","multiBrushData","idx","filtered","z","String","toUpperCase","currentMode","brushMode","mode","brushModes","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","transition","duration","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","text","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","highlightedLineWidth","marked","markedLineWidth","shadowColor","markedShadowColor","shadowBlur","markedShadowBlur","ctrlKey","html","outerHTML","replace","dat","parentNode","commonScale","global","t","detectDimensions","scales","bundleDimension","computeRealCentroids","row","isValid","applyDimensionDefaults","types","detectDimensionTypes","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","dots","pow","entries","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","dx","sortDimensions","renderMarked","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","unmark","mark","copy","assign","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","cols","$V","cx","cy","leftCentroid","clusterCentroids","get","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","singlePath","lineTo","colorPath","_functor","v","pathMark","functor","renderMarkedDefault","renderMarkedQueue","markedQueue","pathBrushed","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","match","toLowerCase","adjacentPairs","ret","arr","pathHighlight","classed","pathForeground","renderDefault","default","renderDefaultQueue","foregroundQueue","queue","toTypeCoerceNumbers","parseFloat","Number","parseInt","ascending","interactive","shadows","init","DefaultConfig","hideAxis","outsideFilters","initState","userConfig","dimensionTitles","warn","eventTypes","dispatch","apply","debug","None","computeClusterCentroids","Map","clusterCounts","has","set","count","_map","without","items","el","sideEffects","getset","obj","side_effects","old","previous","d3_rebind","target","source","method","_rebind","bindEvents","__","ParCoords","compute_real_centroids","adjacent_pairs","install1DAxesMulti","version"],"mappings":"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"}